ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	countAnimation1,8,8
  19              		.comm	countAnimation2,8,8
  20              		.comm	flowLCD1,1,1
  21              		.comm	flowLCD2,1,1
  22              		.comm	digits,1,1
  23              		.comm	ipAdress,12,4
  24              		.comm	numberKeys1,1,1
  25              		.comm	numberKeys2,1,1
  26              		.comm	flagPoint1,1,1
  27              		.comm	flagPoint2,1,1
  28              		.comm	button,400,4
  29              		.comm	productNumber,1,1
  30              		.comm	presetFast,30,4
  31              		.comm	ppux10,1,1
  32              		.comm	time,3,4
  33              		.comm	date,3,4
  34              		.comm	timeSale1,3,4
  35              		.comm	dateSale1,3,4
  36              		.comm	timeSale2,3,4
  37              		.comm	dateSale2,3,4
  38              		.comm	decimalMoney,1,1
  39              		.comm	decimalVolume,1,1
  40              		.comm	RxPc,300,4
  41              		.comm	RxPu,300,4
  42              		.comm	TxPu,300,4
  43              		.comm	flowLoopPump,1,1
  44              		.comm	flowPump,1,1
  45              		.comm	flagImp,3,4
  46              		.comm	flagHandleUp,3,4
  47              		.comm	flagAuthorize,3,4
  48              		.comm	flagSale,3,4
  49              		.comm	product,1,1
  50              		.comm	valuePPU,30,4
  51              		.comm	countSale,8,8
  52              		.comm	countImp,3,4
  53              		.comm	bufferLCD1,183,4
  54              		.comm	bufferLCD2,183,4
  55              		.comm	print,162,4
  56              		.comm	side,722,4
  57              		.comm	bSale,36,4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 2


  58              		.section	.rodata
  59              		.align	2
  60              	.LC0:
  61 0000 FF       		.byte	-1
  62 0001 E9       		.byte	-23
  63 0002 FE       		.byte	-2
  64 0003 E0       		.byte	-32
  65 0004 E1       		.byte	-31
  66 0005 E0       		.byte	-32
  67 0006 FB       		.byte	-5
  68 0007 EE       		.byte	-18
  69 0008 F0       		.byte	-16
  70 0009 000000   		.section	.text.state_ex,"ax",%progbits
  71              		.align	2
  72              		.global	state_ex
  73              		.thumb
  74              		.thumb_func
  75              		.type	state_ex, %function
  76              	state_ex:
  77              	.LFB56:
  78              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                         MUX ADVANCE CODE
   4:.\Protocolo.c **** *
   5:.\Protocolo.c **** *                             (c) Copyright 2016; Sistemas Insepet LTDA
   6:.\Protocolo.c **** *
   7:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   8:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
   9:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  10:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  11:.\Protocolo.c **** ***************************************************************************************************
  12:.\Protocolo.c **** */
  13:.\Protocolo.c **** 
  14:.\Protocolo.c **** /*
  15:.\Protocolo.c **** ***************************************************************************************************
  16:.\Protocolo.c **** *
  17:.\Protocolo.c **** *                                             MUX ADVANCE CODE
  18:.\Protocolo.c **** *
  19:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  20:.\Protocolo.c **** *                                                with the
  21:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  22:.\Protocolo.c **** *
  23:.\Protocolo.c **** * Filename      : pump.c
  24:.\Protocolo.c **** * Version       : V1.00
  25:.\Protocolo.c **** * Programmer(s) : 
  26:.\Protocolo.c ****                   
  27:.\Protocolo.c **** ***************************************************************************************************
  28:.\Protocolo.c **** */
  29:.\Protocolo.c **** 
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** /*
  32:.\Protocolo.c **** ***************************************************************************************************
  33:.\Protocolo.c **** *                                             INCLUDE FILES
  34:.\Protocolo.c **** ***************************************************************************************************
  35:.\Protocolo.c **** */
  36:.\Protocolo.c **** #include <device.h>
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 3


  37:.\Protocolo.c **** #include <variables.h>
  38:.\Protocolo.c **** #include "I2C.h"
  39:.\Protocolo.c **** 
  40:.\Protocolo.c **** /*
  41:.\Protocolo.c **** ***************************************************************************************************
  42:.\Protocolo.c **** *                                      uint8 state_ex(uint8 val)
  43:.\Protocolo.c **** *
  44:.\Protocolo.c **** * Description : 
  45:.\Protocolo.c **** *               
  46:.\Protocolo.c **** *
  47:.\Protocolo.c **** * Argument(s) : none
  48:.\Protocolo.c **** *
  49:.\Protocolo.c **** * Return(s)   : none
  50:.\Protocolo.c **** *
  51:.\Protocolo.c **** * Caller(s)   : 
  52:.\Protocolo.c **** *
  53:.\Protocolo.c **** * Note(s)     : none.
  54:.\Protocolo.c **** ***************************************************************************************************
  55:.\Protocolo.c **** */
  56:.\Protocolo.c **** uint8 state_ex(uint8 val){
  79              		.loc 1 56 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 40
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 8BB0     		sub	sp, sp, #44
  89              		.cfi_def_cfa_offset 56
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  92 0006 0346     		mov	r3, r0
  93 0008 FB71     		strb	r3, [r7, #7]
  57:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
  94              		.loc 1 57 0
  95 000a 5B4A     		ldr	r2, .L19
  96 000c 07F10803 		add	r3, r7, #8
  97 0010 1068     		ldr	r0, [r2]	@ unaligned
  98 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
  99 0014 03C3     		stmia	r3!, {r0, r1}
 100 0016 127A     		ldrb	r2, [r2, #8]
 101 0018 1A70     		strb	r2, [r3]
  58:.\Protocolo.c ****     Pump_AL_PutChar(0x20|val);
 102              		.loc 1 58 0
 103 001a FB79     		ldrb	r3, [r7, #7]
 104 001c 43F02003 		orr	r3, r3, #32
 105 0020 DBB2     		uxtb	r3, r3
 106 0022 1846     		mov	r0, r3
 107 0024 FFF7FEFF 		bl	Pump_AL_PutChar
  59:.\Protocolo.c ****     product=0xff;
 108              		.loc 1 59 0
 109 0028 544B     		ldr	r3, .L19+4
 110 002a FF22     		movs	r2, #255
 111 002c 1A70     		strb	r2, [r3]
  60:.\Protocolo.c ****     CyDelay(100);
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 4


 112              		.loc 1 60 0
 113 002e 6420     		movs	r0, #100
 114 0030 FFF7FEFF 		bl	CyDelay
  61:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()>=1){
 115              		.loc 1 61 0
 116 0034 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 117 0038 0346     		mov	r3, r0
 118 003a 002B     		cmp	r3, #0
 119 003c 00F09780 		beq	.L2
  62:.\Protocolo.c ****         if(Pump_AL_ReadRxData()==(0xD0|val)){
 120              		.loc 1 62 0
 121 0040 FFF7FEFF 		bl	Pump_AL_ReadRxData
 122 0044 0346     		mov	r3, r0
 123 0046 1A46     		mov	r2, r3
 124 0048 FB79     		ldrb	r3, [r7, #7]
 125 004a 63F02F03 		orn	r3, r3, #47
 126 004e DBB2     		uxtb	r3, r3
 127 0050 9A42     		cmp	r2, r3
 128 0052 40F08A80 		bne	.L3
  63:.\Protocolo.c ****             Pump_AL_ClearRxBuffer();
 129              		.loc 1 63 0
 130 0056 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
  64:.\Protocolo.c ****             for(x=0;x<=8;x++){
 131              		.loc 1 64 0
 132 005a 0023     		movs	r3, #0
 133 005c 87F82730 		strb	r3, [r7, #39]
 134 0060 0EE0     		b	.L4
 135              	.L5:
  65:.\Protocolo.c ****                Pump_AL_PutChar(comand_exten[x]); 
 136              		.loc 1 65 0 discriminator 3
 137 0062 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 138 0066 07F12802 		add	r2, r7, #40
 139 006a 1344     		add	r3, r3, r2
 140 006c 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 141 0070 1846     		mov	r0, r3
 142 0072 FFF7FEFF 		bl	Pump_AL_PutChar
  64:.\Protocolo.c ****             for(x=0;x<=8;x++){
 143              		.loc 1 64 0 discriminator 3
 144 0076 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 145 007a 0133     		adds	r3, r3, #1
 146 007c 87F82730 		strb	r3, [r7, #39]
 147              	.L4:
  64:.\Protocolo.c ****             for(x=0;x<=8;x++){
 148              		.loc 1 64 0 is_stmt 0 discriminator 1
 149 0080 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 150 0084 082B     		cmp	r3, #8
 151 0086 ECD9     		bls	.L5
  66:.\Protocolo.c ****             }
  67:.\Protocolo.c ****             CyDelay(200);
 152              		.loc 1 67 0 is_stmt 1
 153 0088 C820     		movs	r0, #200
 154 008a FFF7FEFF 		bl	CyDelay
  68:.\Protocolo.c ****             if(Pump_AL_GetRxBufferSize()>=19){
 155              		.loc 1 68 0
 156 008e FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 157 0092 0346     		mov	r3, r0
 158 0094 122B     		cmp	r3, #18
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 5


 159 0096 66D9     		bls	.L6
  69:.\Protocolo.c ****                 for(x=0;x<=18;x++){
 160              		.loc 1 69 0
 161 0098 0023     		movs	r3, #0
 162 009a 87F82730 		strb	r3, [r7, #39]
 163 009e 33E0     		b	.L7
 164              	.L10:
  70:.\Protocolo.c ****                     rx_extend[x]=Pump_AL_ReadRxData(); 
 165              		.loc 1 70 0
 166 00a0 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 167 00a4 FFF7FEFF 		bl	Pump_AL_ReadRxData
 168 00a8 0346     		mov	r3, r0
 169 00aa 1A46     		mov	r2, r3
 170 00ac 07F12803 		add	r3, r7, #40
 171 00b0 2344     		add	r3, r3, r4
 172 00b2 03F8142C 		strb	r2, [r3, #-20]
  71:.\Protocolo.c ****                     if(val==side.a.dir){
 173              		.loc 1 71 0
 174 00b6 324B     		ldr	r3, .L19+8
 175 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176 00ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 177 00bc 9A42     		cmp	r2, r3
 178 00be 0FD1     		bne	.L8
  72:.\Protocolo.c ****                         side.a.extend[x+1]=rx_extend[x];
 179              		.loc 1 72 0
 180 00c0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 181 00c4 0133     		adds	r3, r3, #1
 182 00c6 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 183 00ca 07F12801 		add	r1, r7, #40
 184 00ce 0A44     		add	r2, r2, r1
 185 00d0 12F8141C 		ldrb	r1, [r2, #-20]	@ zero_extendqisi2
 186 00d4 2A4A     		ldr	r2, .L19+8
 187 00d6 1344     		add	r3, r3, r2
 188 00d8 0A46     		mov	r2, r1
 189 00da 83F85521 		strb	r2, [r3, #341]
 190 00de 0EE0     		b	.L9
 191              	.L8:
  73:.\Protocolo.c ****                     }else{
  74:.\Protocolo.c ****                         side.b.extend[x+1]=rx_extend[x];
 192              		.loc 1 74 0
 193 00e0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 194 00e4 0133     		adds	r3, r3, #1
 195 00e6 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 196 00ea 07F12801 		add	r1, r7, #40
 197 00ee 0A44     		add	r2, r2, r1
 198 00f0 12F8141C 		ldrb	r1, [r2, #-20]	@ zero_extendqisi2
 199 00f4 224A     		ldr	r2, .L19+8
 200 00f6 1344     		add	r3, r3, r2
 201 00f8 0A46     		mov	r2, r1
 202 00fa 83F8BE22 		strb	r2, [r3, #702]
 203              	.L9:
  69:.\Protocolo.c ****                     rx_extend[x]=Pump_AL_ReadRxData(); 
 204              		.loc 1 69 0 discriminator 2
 205 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 206 0102 0133     		adds	r3, r3, #1
 207 0104 87F82730 		strb	r3, [r7, #39]
 208              	.L7:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 6


  69:.\Protocolo.c ****                     rx_extend[x]=Pump_AL_ReadRxData(); 
 209              		.loc 1 69 0 is_stmt 0 discriminator 1
 210 0108 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 211 010c 122B     		cmp	r3, #18
 212 010e C7D9     		bls	.L10
  75:.\Protocolo.c ****                     }
  76:.\Protocolo.c ****                 }
  77:.\Protocolo.c ****                 side.a.extend[0]=19;
 213              		.loc 1 77 0 is_stmt 1
 214 0110 1B4B     		ldr	r3, .L19+8
 215 0112 1322     		movs	r2, #19
 216 0114 83F85521 		strb	r2, [r3, #341]
  78:.\Protocolo.c ****                 side.b.extend[0]=19;
 217              		.loc 1 78 0
 218 0118 194B     		ldr	r3, .L19+8
 219 011a 1322     		movs	r2, #19
 220 011c 83F8BE22 		strb	r2, [r3, #702]
  79:.\Protocolo.c ****                 Pump_AL_ClearRxBuffer();
 221              		.loc 1 79 0
 222 0120 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
  80:.\Protocolo.c ****                 if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[1
 223              		.loc 1 80 0
 224 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 225 0126 BA2B     		cmp	r3, #186
 226 0128 1BD1     		bne	.L11
 227              		.loc 1 80 0 is_stmt 0 discriminator 1
 228 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 229 012e 8D2B     		cmp	r3, #141
 230 0130 17D1     		bne	.L11
 231              		.loc 1 80 0 discriminator 2
 232 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 233 0136 8A2B     		cmp	r3, #138
 234 0138 13D1     		bne	.L11
 235              		.loc 1 80 0 discriminator 3
 236 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 237 013e B12B     		cmp	r3, #177
 238 0140 0FD1     		bne	.L11
  81:.\Protocolo.c ****                     switch(rx_extend[14]){
 239              		.loc 1 81 0 is_stmt 1
 240 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 241 0146 B22B     		cmp	r3, #178
 242 0148 05D0     		beq	.L13
 243 014a B32B     		cmp	r3, #179
 244 014c 05D0     		beq	.L14
 245 014e B12B     		cmp	r3, #177
 246 0150 05D1     		bne	.L18
  82:.\Protocolo.c ****                         case 0xB1:
  83:.\Protocolo.c ****                             return 1;
 247              		.loc 1 83 0
 248 0152 0123     		movs	r3, #1
 249 0154 0CE0     		b	.L17
 250              	.L13:
  84:.\Protocolo.c ****                             break;
  85:.\Protocolo.c ****                         case 0xB2:
  86:.\Protocolo.c ****                             return 2;
 251              		.loc 1 86 0
 252 0156 0223     		movs	r3, #2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 7


 253 0158 0AE0     		b	.L17
 254              	.L14:
  87:.\Protocolo.c ****                             break;
  88:.\Protocolo.c ****                         case 0xB3:
  89:.\Protocolo.c ****                             return 3;
 255              		.loc 1 89 0
 256 015a 0323     		movs	r3, #3
 257 015c 08E0     		b	.L17
 258              	.L18:
  90:.\Protocolo.c ****                             break;
  91:.\Protocolo.c ****                         default:
  92:.\Protocolo.c ****                             return 0;
 259              		.loc 1 92 0
 260 015e 0023     		movs	r3, #0
 261 0160 06E0     		b	.L17
 262              	.L11:
  93:.\Protocolo.c ****                     }
  94:.\Protocolo.c ****                 }
  95:.\Protocolo.c ****                 else{
  96:.\Protocolo.c ****                     return 0;
 263              		.loc 1 96 0
 264 0162 0023     		movs	r3, #0
 265 0164 04E0     		b	.L17
 266              	.L6:
  97:.\Protocolo.c ****                 }
  98:.\Protocolo.c ****             }
  99:.\Protocolo.c ****             else{
 100:.\Protocolo.c ****                 return 0;
 267              		.loc 1 100 0
 268 0166 0023     		movs	r3, #0
 269 0168 02E0     		b	.L17
 270              	.L3:
 101:.\Protocolo.c ****             }
 102:.\Protocolo.c ****         }
 103:.\Protocolo.c ****         else{
 104:.\Protocolo.c ****             return 0;
 271              		.loc 1 104 0
 272 016a 0023     		movs	r3, #0
 273 016c 00E0     		b	.L17
 274              	.L2:
 105:.\Protocolo.c ****         }
 106:.\Protocolo.c ****     }
 107:.\Protocolo.c ****     else{
 108:.\Protocolo.c ****         return 0;
 275              		.loc 1 108 0
 276 016e 0023     		movs	r3, #0
 277              	.L17:
 109:.\Protocolo.c ****     }
 110:.\Protocolo.c **** }
 278              		.loc 1 110 0
 279 0170 1846     		mov	r0, r3
 280 0172 2C37     		adds	r7, r7, #44
 281              		.cfi_def_cfa_offset 12
 282 0174 BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 0176 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 8


 286              	.L20:
 287              		.align	2
 288              	.L19:
 289 0178 00000000 		.word	.LC0
 290 017c 00000000 		.word	product
 291 0180 00000000 		.word	side
 292              		.cfi_endproc
 293              	.LFE56:
 294              		.size	state_ex, .-state_ex
 295              		.section	.text.get_position,"ax",%progbits
 296              		.align	2
 297              		.global	get_position
 298              		.thumb
 299              		.thumb_func
 300              		.type	get_position, %function
 301              	get_position:
 302              	.LFB57:
 111:.\Protocolo.c **** 
 112:.\Protocolo.c **** /*
 113:.\Protocolo.c **** ***************************************************************************************************
 114:.\Protocolo.c **** *                                         uint8 get_position(void)
 115:.\Protocolo.c **** *
 116:.\Protocolo.c **** * Description : 
 117:.\Protocolo.c **** *               
 118:.\Protocolo.c **** *
 119:.\Protocolo.c **** * Argument(s) : none
 120:.\Protocolo.c **** *
 121:.\Protocolo.c **** * Return(s)   : none
 122:.\Protocolo.c **** *
 123:.\Protocolo.c **** * Caller(s)   : 
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Note(s)     : none.
 126:.\Protocolo.c **** ***************************************************************************************************
 127:.\Protocolo.c **** */
 128:.\Protocolo.c **** uint8 get_position(void){
 303              		.loc 1 128 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 129:.\Protocolo.c ****     uint32 x;
 130:.\Protocolo.c ****         
 131:.\Protocolo.c ****     side.a.dir=0xff;
 315              		.loc 1 131 0
 316 0006 2D4B     		ldr	r3, .L30
 317 0008 FF22     		movs	r2, #255
 318 000a 1A70     		strb	r2, [r3]
 132:.\Protocolo.c ****     side.b.dir=0xff;
 319              		.loc 1 132 0
 320 000c 2B4B     		ldr	r3, .L30
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 9


 321 000e FF22     		movs	r2, #255
 322 0010 83F86921 		strb	r2, [r3, #361]
 133:.\Protocolo.c ****     for(x=1;x<=16;x++){
 323              		.loc 1 133 0
 324 0014 0123     		movs	r3, #1
 325 0016 7B60     		str	r3, [r7, #4]
 326 0018 31E0     		b	.L22
 327              	.L25:
 134:.\Protocolo.c ****         Pump_AL_PutChar(x);
 328              		.loc 1 134 0
 329 001a 7B68     		ldr	r3, [r7, #4]
 330 001c DBB2     		uxtb	r3, r3
 331 001e 1846     		mov	r0, r3
 332 0020 FFF7FEFF 		bl	Pump_AL_PutChar
 135:.\Protocolo.c ****         CyDelay(100);
 333              		.loc 1 135 0
 334 0024 6420     		movs	r0, #100
 335 0026 FFF7FEFF 		bl	CyDelay
 136:.\Protocolo.c ****         if((Pump_AL_GetRxBufferSize()>=1)&&(side.a.dir==0xff)){
 336              		.loc 1 136 0
 337 002a FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 338 002e 0346     		mov	r3, r0
 339 0030 002B     		cmp	r3, #0
 340 0032 0CD0     		beq	.L23
 341              		.loc 1 136 0 is_stmt 0 discriminator 1
 342 0034 214B     		ldr	r3, .L30
 343 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 344 0038 FF2B     		cmp	r3, #255
 345 003a 08D1     		bne	.L23
 137:.\Protocolo.c ****            side.a.dir=x&0x0f;	
 346              		.loc 1 137 0 is_stmt 1
 347 003c 7B68     		ldr	r3, [r7, #4]
 348 003e DBB2     		uxtb	r3, r3
 349 0040 03F00F03 		and	r3, r3, #15
 350 0044 DAB2     		uxtb	r2, r3
 351 0046 1D4B     		ldr	r3, .L30
 352 0048 1A70     		strb	r2, [r3]
 138:.\Protocolo.c ****            Pump_AL_ClearRxBuffer();
 353              		.loc 1 138 0
 354 004a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 355              	.L23:
 139:.\Protocolo.c ****         }
 140:.\Protocolo.c ****         if((Pump_AL_GetRxBufferSize()>=1)&&(x!=side.a.dir)){
 356              		.loc 1 140 0
 357 004e FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 358 0052 0346     		mov	r3, r0
 359 0054 002B     		cmp	r3, #0
 360 0056 0FD0     		beq	.L24
 361              		.loc 1 140 0 is_stmt 0 discriminator 1
 362 0058 184B     		ldr	r3, .L30
 363 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 364 005c 1A46     		mov	r2, r3
 365 005e 7B68     		ldr	r3, [r7, #4]
 366 0060 9A42     		cmp	r2, r3
 367 0062 09D0     		beq	.L24
 141:.\Protocolo.c ****            side.b.dir=x&0x0f;
 368              		.loc 1 141 0 is_stmt 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 10


 369 0064 7B68     		ldr	r3, [r7, #4]
 370 0066 DBB2     		uxtb	r3, r3
 371 0068 03F00F03 		and	r3, r3, #15
 372 006c DAB2     		uxtb	r2, r3
 373 006e 134B     		ldr	r3, .L30
 374 0070 83F86921 		strb	r2, [r3, #361]
 142:.\Protocolo.c ****            Pump_AL_ClearRxBuffer();
 375              		.loc 1 142 0
 376 0074 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 377              	.L24:
 133:.\Protocolo.c ****         Pump_AL_PutChar(x);
 378              		.loc 1 133 0 discriminator 2
 379 0078 7B68     		ldr	r3, [r7, #4]
 380 007a 0133     		adds	r3, r3, #1
 381 007c 7B60     		str	r3, [r7, #4]
 382              	.L22:
 133:.\Protocolo.c ****         Pump_AL_PutChar(x);
 383              		.loc 1 133 0 is_stmt 0 discriminator 1
 384 007e 7B68     		ldr	r3, [r7, #4]
 385 0080 102B     		cmp	r3, #16
 386 0082 CAD9     		bls	.L25
 143:.\Protocolo.c ****         }
 144:.\Protocolo.c ****     }
 145:.\Protocolo.c ****     if((side.a.dir!=0xff)&&(side.b.dir!=0xff)){
 387              		.loc 1 145 0 is_stmt 1
 388 0084 0D4B     		ldr	r3, .L30
 389 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 390 0088 FF2B     		cmp	r3, #255
 391 008a 06D0     		beq	.L26
 392              		.loc 1 145 0 is_stmt 0 discriminator 1
 393 008c 0B4B     		ldr	r3, .L30
 394 008e 93F86931 		ldrb	r3, [r3, #361]	@ zero_extendqisi2
 395 0092 FF2B     		cmp	r3, #255
 396 0094 01D0     		beq	.L26
 146:.\Protocolo.c ****         return 2;
 397              		.loc 1 146 0 is_stmt 1
 398 0096 0223     		movs	r3, #2
 399 0098 0BE0     		b	.L27
 400              	.L26:
 147:.\Protocolo.c ****     }
 148:.\Protocolo.c ****     else{
 149:.\Protocolo.c ****         if((side.a.dir!=0xff)||(side.b.dir!=0xff)){
 401              		.loc 1 149 0
 402 009a 084B     		ldr	r3, .L30
 403 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404 009e FF2B     		cmp	r3, #255
 405 00a0 04D1     		bne	.L28
 406              		.loc 1 149 0 is_stmt 0 discriminator 1
 407 00a2 064B     		ldr	r3, .L30
 408 00a4 93F86931 		ldrb	r3, [r3, #361]	@ zero_extendqisi2
 409 00a8 FF2B     		cmp	r3, #255
 410 00aa 01D0     		beq	.L29
 411              	.L28:
 150:.\Protocolo.c ****             return 1;
 412              		.loc 1 150 0 is_stmt 1
 413 00ac 0123     		movs	r3, #1
 414 00ae 00E0     		b	.L27
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 11


 415              	.L29:
 151:.\Protocolo.c ****         }
 152:.\Protocolo.c ****         else{
 153:.\Protocolo.c ****             return 0;
 416              		.loc 1 153 0
 417 00b0 0023     		movs	r3, #0
 418              	.L27:
 154:.\Protocolo.c ****         }
 155:.\Protocolo.c ****     }
 156:.\Protocolo.c **** }
 419              		.loc 1 156 0
 420 00b2 1846     		mov	r0, r3
 421 00b4 0837     		adds	r7, r7, #8
 422              		.cfi_def_cfa_offset 8
 423 00b6 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 00b8 80BD     		pop	{r7, pc}
 427              	.L31:
 428 00ba 00BF     		.align	2
 429              	.L30:
 430 00bc 00000000 		.word	side
 431              		.cfi_endproc
 432              	.LFE57:
 433              		.size	get_position, .-get_position
 434              		.section	.text.get_state,"ax",%progbits
 435              		.align	2
 436              		.global	get_state
 437              		.thumb
 438              		.thumb_func
 439              		.type	get_state, %function
 440              	get_state:
 441              	.LFB58:
 157:.\Protocolo.c **** 
 158:.\Protocolo.c **** /*
 159:.\Protocolo.c **** ***************************************************************************************************
 160:.\Protocolo.c **** *                                    uint8 get_state(uint8 dir)
 161:.\Protocolo.c **** *
 162:.\Protocolo.c **** * Description : 
 163:.\Protocolo.c **** *               
 164:.\Protocolo.c **** *
 165:.\Protocolo.c **** * Argument(s) : none
 166:.\Protocolo.c **** *
 167:.\Protocolo.c **** * Return(s)   : none
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Caller(s)   : 
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Note(s)     : none.
 172:.\Protocolo.c **** ***************************************************************************************************
 173:.\Protocolo.c **** */
 174:.\Protocolo.c **** 
 175:.\Protocolo.c **** uint8 get_state(uint8 dir){
 442              		.loc 1 175 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 16
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 12


 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 84B0     		sub	sp, sp, #16
 451              		.cfi_def_cfa_offset 24
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 0346     		mov	r3, r0
 455 0008 FB71     		strb	r3, [r7, #7]
 176:.\Protocolo.c ****     uint8 state;
 177:.\Protocolo.c ****     Pump_AL_PutChar(dir);
 456              		.loc 1 177 0
 457 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 458 000c 1846     		mov	r0, r3
 459 000e FFF7FEFF 		bl	Pump_AL_PutChar
 178:.\Protocolo.c ****     CyDelay(65);
 460              		.loc 1 178 0
 461 0012 4120     		movs	r0, #65
 462 0014 FFF7FEFF 		bl	CyDelay
 179:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()>=1){
 463              		.loc 1 179 0
 464 0018 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 465 001c 0346     		mov	r3, r0
 466 001e 002B     		cmp	r3, #0
 467 0020 08D0     		beq	.L33
 180:.\Protocolo.c ****        state=(Pump_AL_ReadRxData()&0xF0)>>4;
 468              		.loc 1 180 0
 469 0022 FFF7FEFF 		bl	Pump_AL_ReadRxData
 470 0026 0346     		mov	r3, r0
 471 0028 1B09     		lsrs	r3, r3, #4
 472 002a FB73     		strb	r3, [r7, #15]
 181:.\Protocolo.c ****        Pump_AL_ClearRxBuffer();
 473              		.loc 1 181 0
 474 002c FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 182:.\Protocolo.c ****        return state;
 475              		.loc 1 182 0
 476 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 477 0032 00E0     		b	.L34
 478              	.L33:
 183:.\Protocolo.c ****     }
 184:.\Protocolo.c ****     else{
 185:.\Protocolo.c ****         return 0;
 479              		.loc 1 185 0
 480 0034 0023     		movs	r3, #0
 481              	.L34:
 186:.\Protocolo.c ****     }
 187:.\Protocolo.c **** }
 482              		.loc 1 187 0
 483 0036 1846     		mov	r0, r3
 484 0038 1037     		adds	r7, r7, #16
 485              		.cfi_def_cfa_offset 8
 486 003a BD46     		mov	sp, r7
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 003c 80BD     		pop	{r7, pc}
 490              		.cfi_endproc
 491              	.LFE58:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 13


 492              		.size	get_state, .-get_state
 493 003e 00BF     		.section	.text.get_error,"ax",%progbits
 494              		.align	2
 495              		.global	get_error
 496              		.thumb
 497              		.thumb_func
 498              		.type	get_error, %function
 499              	get_error:
 500              	.LFB59:
 188:.\Protocolo.c **** 
 189:.\Protocolo.c **** /*
 190:.\Protocolo.c **** ***************************************************************************************************
 191:.\Protocolo.c **** *                                      void get_error(uint8 val)
 192:.\Protocolo.c **** *
 193:.\Protocolo.c **** * Description : 
 194:.\Protocolo.c **** *               
 195:.\Protocolo.c **** *
 196:.\Protocolo.c **** * Argument(s) : none
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Return(s)   : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Caller(s)   : 
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Note(s)     : none.
 203:.\Protocolo.c **** ***************************************************************************************************
 204:.\Protocolo.c **** */
 205:.\Protocolo.c **** void get_error(uint8 val){
 501              		.loc 1 205 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 16
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 84B0     		sub	sp, sp, #16
 510              		.cfi_def_cfa_offset 24
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 0346     		mov	r3, r0
 514 0008 FB71     		strb	r3, [r7, #7]
 206:.\Protocolo.c ****     uint8 state;
 207:.\Protocolo.c ****     Pump_AL_PutChar(val);
 515              		.loc 1 207 0
 516 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 517 000c 1846     		mov	r0, r3
 518 000e FFF7FEFF 		bl	Pump_AL_PutChar
 208:.\Protocolo.c ****     CyDelay(200);
 519              		.loc 1 208 0
 520 0012 C820     		movs	r0, #200
 521 0014 FFF7FEFF 		bl	CyDelay
 209:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()>=1){
 522              		.loc 1 209 0
 523 0018 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 524 001c 0346     		mov	r3, r0
 525 001e 002B     		cmp	r3, #0
 526 0020 06D0     		beq	.L35
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 14


 210:.\Protocolo.c ****        state=(Pump_AL_ReadRxData()&0xF0)>>4;
 527              		.loc 1 210 0
 528 0022 FFF7FEFF 		bl	Pump_AL_ReadRxData
 529 0026 0346     		mov	r3, r0
 530 0028 1B09     		lsrs	r3, r3, #4
 531 002a FB73     		strb	r3, [r7, #15]
 211:.\Protocolo.c ****        Pump_AL_ClearRxBuffer();
 532              		.loc 1 211 0
 533 002c FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 534              	.L35:
 212:.\Protocolo.c ****        if(state==0){
 213:.\Protocolo.c **** 
 214:.\Protocolo.c ****        }
 215:.\Protocolo.c ****     }    
 216:.\Protocolo.c **** }
 535              		.loc 1 216 0
 536 0030 1037     		adds	r7, r7, #16
 537              		.cfi_def_cfa_offset 8
 538 0032 BD46     		mov	sp, r7
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 0034 80BD     		pop	{r7, pc}
 542              		.cfi_endproc
 543              	.LFE59:
 544              		.size	get_error, .-get_error
 545 0036 00BF     		.section	.text.stop,"ax",%progbits
 546              		.align	2
 547              		.global	stop
 548              		.thumb
 549              		.thumb_func
 550              		.type	stop, %function
 551              	stop:
 552              	.LFB60:
 217:.\Protocolo.c **** 
 218:.\Protocolo.c **** /*
 219:.\Protocolo.c **** ***************************************************************************************************
 220:.\Protocolo.c **** *                                         void stop(uint8 val)
 221:.\Protocolo.c **** *
 222:.\Protocolo.c **** * Description : 
 223:.\Protocolo.c **** *               
 224:.\Protocolo.c **** *
 225:.\Protocolo.c **** * Argument(s) : none
 226:.\Protocolo.c **** *
 227:.\Protocolo.c **** * Return(s)   : none
 228:.\Protocolo.c **** *
 229:.\Protocolo.c **** * Caller(s)   : 
 230:.\Protocolo.c **** *
 231:.\Protocolo.c **** * Note(s)     : none.
 232:.\Protocolo.c **** ***************************************************************************************************
 233:.\Protocolo.c **** */
 234:.\Protocolo.c **** void stop(uint8 val){
 553              		.loc 1 234 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 15


 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 82B0     		sub	sp, sp, #8
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565 0006 0346     		mov	r3, r0
 566 0008 FB71     		strb	r3, [r7, #7]
 235:.\Protocolo.c ****     Pump_AL_PutChar(0x30|val);
 567              		.loc 1 235 0
 568 000a FB79     		ldrb	r3, [r7, #7]
 569 000c 43F03003 		orr	r3, r3, #48
 570 0010 DBB2     		uxtb	r3, r3
 571 0012 1846     		mov	r0, r3
 572 0014 FFF7FEFF 		bl	Pump_AL_PutChar
 236:.\Protocolo.c ****     CyDelay(200);
 573              		.loc 1 236 0
 574 0018 C820     		movs	r0, #200
 575 001a FFF7FEFF 		bl	CyDelay
 237:.\Protocolo.c **** }
 576              		.loc 1 237 0
 577 001e 0837     		adds	r7, r7, #8
 578              		.cfi_def_cfa_offset 8
 579 0020 BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0022 80BD     		pop	{r7, pc}
 583              		.cfi_endproc
 584              	.LFE60:
 585              		.size	stop, .-stop
 586              		.section	.text.sale_in,"ax",%progbits
 587              		.align	2
 588              		.global	sale_in
 589              		.thumb
 590              		.thumb_func
 591              		.type	sale_in, %function
 592              	sale_in:
 593              	.LFB61:
 238:.\Protocolo.c **** 
 239:.\Protocolo.c **** 
 240:.\Protocolo.c **** /*
 241:.\Protocolo.c **** ***************************************************************************************************
 242:.\Protocolo.c **** *                                  uint8 sale_in(uint8 val)
 243:.\Protocolo.c **** *
 244:.\Protocolo.c **** * Description : 
 245:.\Protocolo.c **** *               
 246:.\Protocolo.c **** *
 247:.\Protocolo.c **** * Argument(s) : none
 248:.\Protocolo.c **** *
 249:.\Protocolo.c **** * Return(s)   : none
 250:.\Protocolo.c **** *
 251:.\Protocolo.c **** * Caller(s)   : 
 252:.\Protocolo.c **** *
 253:.\Protocolo.c **** * Note(s)     : none.
 254:.\Protocolo.c **** ***************************************************************************************************
 255:.\Protocolo.c **** */
 256:.\Protocolo.c **** uint8 sale_in(uint8 val){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 16


 594              		.loc 1 256 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 64
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 90B0     		sub	sp, sp, #64
 603              		.cfi_def_cfa_offset 72
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 0346     		mov	r3, r0
 607 0008 FB71     		strb	r3, [r7, #7]
 257:.\Protocolo.c ****     uint8 rx_sale[39],pos;
 258:.\Protocolo.c ****     uint32 j,x=0,y;
 608              		.loc 1 258 0
 609 000a 0023     		movs	r3, #0
 610 000c 7B63     		str	r3, [r7, #52]
 259:.\Protocolo.c ****     
 260:.\Protocolo.c ****     Pump_AL_PutChar(0x40|val);
 611              		.loc 1 260 0
 612 000e FB79     		ldrb	r3, [r7, #7]
 613 0010 43F04003 		orr	r3, r3, #64
 614 0014 DBB2     		uxtb	r3, r3
 615 0016 1846     		mov	r0, r3
 616 0018 FFF7FEFF 		bl	Pump_AL_PutChar
 261:.\Protocolo.c ****     CyDelay(250);
 617              		.loc 1 261 0
 618 001c FA20     		movs	r0, #250
 619 001e FFF7FEFF 		bl	CyDelay
 262:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()<=39){
 620              		.loc 1 262 0
 621 0022 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 622 0026 0346     		mov	r3, r0
 623 0028 272B     		cmp	r3, #39
 624 002a 00F20882 		bhi	.L39
 263:.\Protocolo.c ****         while(Pump_AL_GetRxBufferSize()>0){
 625              		.loc 1 263 0
 626 002e 2AE0     		b	.L40
 627              	.L43:
 264:.\Protocolo.c ****             rx_sale[x]=Pump_AL_ReadRxData();  
 628              		.loc 1 264 0
 629 0030 FFF7FEFF 		bl	Pump_AL_ReadRxData
 630 0034 0346     		mov	r3, r0
 631 0036 1946     		mov	r1, r3
 632 0038 07F10802 		add	r2, r7, #8
 633 003c 7B6B     		ldr	r3, [r7, #52]
 634 003e 1344     		add	r3, r3, r2
 635 0040 0A46     		mov	r2, r1
 636 0042 1A70     		strb	r2, [r3]
 265:.\Protocolo.c ****             if(val==side.a.dir){
 637              		.loc 1 265 0
 638 0044 A44B     		ldr	r3, .L80
 639 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 0048 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 641 004a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 17


 642 004c 0CD1     		bne	.L41
 266:.\Protocolo.c ****                 side.a.sale[x+1]=rx_sale[x];
 643              		.loc 1 266 0
 644 004e 7B6B     		ldr	r3, [r7, #52]
 645 0050 0133     		adds	r3, r3, #1
 646 0052 07F10801 		add	r1, r7, #8
 647 0056 7A6B     		ldr	r2, [r7, #52]
 648 0058 0A44     		add	r2, r2, r1
 649 005a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 650 005c 9E4A     		ldr	r2, .L80
 651 005e 1344     		add	r3, r3, r2
 652 0060 0A46     		mov	r2, r1
 653 0062 83F82C21 		strb	r2, [r3, #300]
 654 0066 0BE0     		b	.L42
 655              	.L41:
 267:.\Protocolo.c ****             }else{
 268:.\Protocolo.c ****                 side.b.sale[x+1]=rx_sale[x];
 656              		.loc 1 268 0
 657 0068 7B6B     		ldr	r3, [r7, #52]
 658 006a 0133     		adds	r3, r3, #1
 659 006c 07F10801 		add	r1, r7, #8
 660 0070 7A6B     		ldr	r2, [r7, #52]
 661 0072 0A44     		add	r2, r2, r1
 662 0074 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 663 0076 984A     		ldr	r2, .L80
 664 0078 1344     		add	r3, r3, r2
 665 007a 0A46     		mov	r2, r1
 666 007c 83F89522 		strb	r2, [r3, #661]
 667              	.L42:
 269:.\Protocolo.c ****             }
 270:.\Protocolo.c ****             x++;
 668              		.loc 1 270 0
 669 0080 7B6B     		ldr	r3, [r7, #52]
 670 0082 0133     		adds	r3, r3, #1
 671 0084 7B63     		str	r3, [r7, #52]
 672              	.L40:
 263:.\Protocolo.c ****             rx_sale[x]=Pump_AL_ReadRxData();  
 673              		.loc 1 263 0
 674 0086 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 675 008a 0346     		mov	r3, r0
 676 008c 002B     		cmp	r3, #0
 677 008e CFD1     		bne	.L43
 271:.\Protocolo.c ****         }
 272:.\Protocolo.c ****         if(val==side.a.dir){
 678              		.loc 1 272 0
 679 0090 914B     		ldr	r3, .L80
 680 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 681 0094 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 682 0096 9A42     		cmp	r2, r3
 683 0098 05D1     		bne	.L44
 273:.\Protocolo.c ****             side.a.sale[0]=x;
 684              		.loc 1 273 0
 685 009a 7B6B     		ldr	r3, [r7, #52]
 686 009c DAB2     		uxtb	r2, r3
 687 009e 8E4B     		ldr	r3, .L80
 688 00a0 83F82C21 		strb	r2, [r3, #300]
 689 00a4 04E0     		b	.L45
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 18


 690              	.L44:
 274:.\Protocolo.c ****         }else{
 275:.\Protocolo.c ****             side.b.sale[0]=x;
 691              		.loc 1 275 0
 692 00a6 7B6B     		ldr	r3, [r7, #52]
 693 00a8 DAB2     		uxtb	r2, r3
 694 00aa 8B4B     		ldr	r3, .L80
 695 00ac 83F89522 		strb	r2, [r3, #661]
 696              	.L45:
 276:.\Protocolo.c ****         }
 277:.\Protocolo.c ****         Pump_AL_ClearRxBuffer();
 697              		.loc 1 277 0
 698 00b0 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 278:.\Protocolo.c ****         if(val==0){
 699              		.loc 1 278 0
 700 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 701 00b6 002B     		cmp	r3, #0
 702 00b8 07D1     		bne	.L46
 279:.\Protocolo.c ****             pos=0x10;
 703              		.loc 1 279 0
 704 00ba 1023     		movs	r3, #16
 705 00bc 87F83F30 		strb	r3, [r7, #63]
 280:.\Protocolo.c ****             bSale.position=pos;
 706              		.loc 1 280 0
 707 00c0 864A     		ldr	r2, .L80+4
 708 00c2 97F83F30 		ldrb	r3, [r7, #63]
 709 00c6 1370     		strb	r3, [r2]
 710 00c8 06E0     		b	.L47
 711              	.L46:
 281:.\Protocolo.c ****         }
 282:.\Protocolo.c ****         else{
 283:.\Protocolo.c ****             pos=val;
 712              		.loc 1 283 0
 713 00ca FB79     		ldrb	r3, [r7, #7]
 714 00cc 87F83F30 		strb	r3, [r7, #63]
 284:.\Protocolo.c ****             bSale.position=pos;
 715              		.loc 1 284 0
 716 00d0 824A     		ldr	r2, .L80+4
 717 00d2 97F83F30 		ldrb	r3, [r7, #63]
 718 00d6 1370     		strb	r3, [r2]
 719              	.L47:
 285:.\Protocolo.c ****         }
 286:.\Protocolo.c ****         if((rx_sale[0]==0xFF)&&(rx_sale[2]==0xF8)&&((rx_sale[4]&0x0F)==(pos-1))){
 720              		.loc 1 286 0
 721 00d8 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 722 00da FF2B     		cmp	r3, #255
 723 00dc 40F0AD81 		bne	.L48
 724              		.loc 1 286 0 is_stmt 0 discriminator 1
 725 00e0 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 726 00e2 F82B     		cmp	r3, #248
 727 00e4 40F0A981 		bne	.L48
 728              		.loc 1 286 0 discriminator 2
 729 00e8 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 730 00ea 03F00F02 		and	r2, r3, #15
 731 00ee 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 732 00f2 013B     		subs	r3, r3, #1
 733 00f4 9A42     		cmp	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 19


 734 00f6 40F0A081 		bne	.L48
 287:.\Protocolo.c ****             x=0;
 735              		.loc 1 287 0 is_stmt 1
 736 00fa 0023     		movs	r3, #0
 737 00fc 7B63     		str	r3, [r7, #52]
 288:.\Protocolo.c ****             while((rx_sale[x]!=0xF6)||(x>=39)){
 738              		.loc 1 288 0
 739 00fe 02E0     		b	.L49
 740              	.L50:
 289:.\Protocolo.c ****                 x++;
 741              		.loc 1 289 0
 742 0100 7B6B     		ldr	r3, [r7, #52]
 743 0102 0133     		adds	r3, r3, #1
 744 0104 7B63     		str	r3, [r7, #52]
 745              	.L49:
 288:.\Protocolo.c ****             while((rx_sale[x]!=0xF6)||(x>=39)){
 746              		.loc 1 288 0
 747 0106 07F10802 		add	r2, r7, #8
 748 010a 7B6B     		ldr	r3, [r7, #52]
 749 010c 1344     		add	r3, r3, r2
 750 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 751 0110 F62B     		cmp	r3, #246
 752 0112 F5D1     		bne	.L50
 288:.\Protocolo.c ****             while((rx_sale[x]!=0xF6)||(x>=39)){
 753              		.loc 1 288 0 is_stmt 0 discriminator 1
 754 0114 7B6B     		ldr	r3, [r7, #52]
 755 0116 262B     		cmp	r3, #38
 756 0118 F2D8     		bhi	.L50
 290:.\Protocolo.c ****             }
 291:.\Protocolo.c ****             x++;
 757              		.loc 1 291 0 is_stmt 1
 758 011a 7B6B     		ldr	r3, [r7, #52]
 759 011c 0133     		adds	r3, r3, #1
 760 011e 7B63     		str	r3, [r7, #52]
 292:.\Protocolo.c ****             bSale.product=(rx_sale[x]&0x0F)+1;
 761              		.loc 1 292 0
 762 0120 07F10802 		add	r2, r7, #8
 763 0124 7B6B     		ldr	r3, [r7, #52]
 764 0126 1344     		add	r3, r3, r2
 765 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 766 012a 03F00F03 		and	r3, r3, #15
 767 012e DBB2     		uxtb	r3, r3
 768 0130 0133     		adds	r3, r3, #1
 769 0132 DAB2     		uxtb	r2, r3
 770 0134 694B     		ldr	r3, .L80+4
 771 0136 5A70     		strb	r2, [r3, #1]
 293:.\Protocolo.c ****             while((rx_sale[x]!=0xF7)||(x>=39)){
 772              		.loc 1 293 0
 773 0138 02E0     		b	.L51
 774              	.L52:
 294:.\Protocolo.c ****                 x++;
 775              		.loc 1 294 0
 776 013a 7B6B     		ldr	r3, [r7, #52]
 777 013c 0133     		adds	r3, r3, #1
 778 013e 7B63     		str	r3, [r7, #52]
 779              	.L51:
 293:.\Protocolo.c ****             while((rx_sale[x]!=0xF7)||(x>=39)){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 20


 780              		.loc 1 293 0
 781 0140 07F10802 		add	r2, r7, #8
 782 0144 7B6B     		ldr	r3, [r7, #52]
 783 0146 1344     		add	r3, r3, r2
 784 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 014a F72B     		cmp	r3, #247
 786 014c F5D1     		bne	.L52
 293:.\Protocolo.c ****             while((rx_sale[x]!=0xF7)||(x>=39)){
 787              		.loc 1 293 0 is_stmt 0 discriminator 1
 788 014e 7B6B     		ldr	r3, [r7, #52]
 789 0150 262B     		cmp	r3, #38
 790 0152 F2D8     		bhi	.L52
 295:.\Protocolo.c ****             }
 296:.\Protocolo.c ****             x++;
 791              		.loc 1 296 0 is_stmt 1
 792 0154 7B6B     		ldr	r3, [r7, #52]
 793 0156 0133     		adds	r3, r3, #1
 794 0158 7B63     		str	r3, [r7, #52]
 297:.\Protocolo.c ****             y=1;
 795              		.loc 1 297 0
 796 015a 0123     		movs	r3, #1
 797 015c 3B63     		str	r3, [r7, #48]
 298:.\Protocolo.c ****             while((rx_sale[x]!=0xF9)||(x>=39)){    
 798              		.loc 1 298 0
 799 015e 12E0     		b	.L53
 800              	.L54:
 299:.\Protocolo.c ****                 bSale.ppu[y]=(rx_sale[x]&0x0F);
 801              		.loc 1 299 0
 802 0160 07F10802 		add	r2, r7, #8
 803 0164 7B6B     		ldr	r3, [r7, #52]
 804 0166 1344     		add	r3, r3, r2
 805 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 806 016a 03F00F03 		and	r3, r3, #15
 807 016e D9B2     		uxtb	r1, r3
 808 0170 5A4A     		ldr	r2, .L80+4
 809 0172 3B6B     		ldr	r3, [r7, #48]
 810 0174 1344     		add	r3, r3, r2
 811 0176 0A46     		mov	r2, r1
 812 0178 9A70     		strb	r2, [r3, #2]
 300:.\Protocolo.c ****                 x++;
 813              		.loc 1 300 0
 814 017a 7B6B     		ldr	r3, [r7, #52]
 815 017c 0133     		adds	r3, r3, #1
 816 017e 7B63     		str	r3, [r7, #52]
 301:.\Protocolo.c ****                 y++;
 817              		.loc 1 301 0
 818 0180 3B6B     		ldr	r3, [r7, #48]
 819 0182 0133     		adds	r3, r3, #1
 820 0184 3B63     		str	r3, [r7, #48]
 821              	.L53:
 298:.\Protocolo.c ****                 bSale.ppu[y]=(rx_sale[x]&0x0F);
 822              		.loc 1 298 0
 823 0186 07F10802 		add	r2, r7, #8
 824 018a 7B6B     		ldr	r3, [r7, #52]
 825 018c 1344     		add	r3, r3, r2
 826 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 827 0190 F92B     		cmp	r3, #249
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 21


 828 0192 E5D1     		bne	.L54
 298:.\Protocolo.c ****                 bSale.ppu[y]=(rx_sale[x]&0x0F);
 829              		.loc 1 298 0 is_stmt 0 discriminator 1
 830 0194 7B6B     		ldr	r3, [r7, #52]
 831 0196 262B     		cmp	r3, #38
 832 0198 E2D8     		bhi	.L54
 302:.\Protocolo.c ****             }
 303:.\Protocolo.c **** 			bSale.ppu[0]=y-1;
 833              		.loc 1 303 0 is_stmt 1
 834 019a 3B6B     		ldr	r3, [r7, #48]
 835 019c DBB2     		uxtb	r3, r3
 836 019e 013B     		subs	r3, r3, #1
 837 01a0 DAB2     		uxtb	r2, r3
 838 01a2 4E4B     		ldr	r3, .L80+4
 839 01a4 9A70     		strb	r2, [r3, #2]
 304:.\Protocolo.c ****             x++;
 840              		.loc 1 304 0
 841 01a6 7B6B     		ldr	r3, [r7, #52]
 842 01a8 0133     		adds	r3, r3, #1
 843 01aa 7B63     		str	r3, [r7, #52]
 305:.\Protocolo.c ****             y=1;
 844              		.loc 1 305 0
 845 01ac 0123     		movs	r3, #1
 846 01ae 3B63     		str	r3, [r7, #48]
 306:.\Protocolo.c ****             while((rx_sale[x]!=0xFA)||(x>=39)){
 847              		.loc 1 306 0
 848 01b0 13E0     		b	.L55
 849              	.L56:
 307:.\Protocolo.c ****                 bSale.volume[y]=(rx_sale[x]&0x0F);
 850              		.loc 1 307 0
 851 01b2 07F10802 		add	r2, r7, #8
 852 01b6 7B6B     		ldr	r3, [r7, #52]
 853 01b8 1344     		add	r3, r3, r2
 854 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 855 01bc 03F00F03 		and	r3, r3, #15
 856 01c0 D9B2     		uxtb	r1, r3
 857 01c2 464A     		ldr	r2, .L80+4
 858 01c4 3B6B     		ldr	r3, [r7, #48]
 859 01c6 1344     		add	r3, r3, r2
 860 01c8 1833     		adds	r3, r3, #24
 861 01ca 0A46     		mov	r2, r1
 862 01cc 1A70     		strb	r2, [r3]
 308:.\Protocolo.c ****                 x++;
 863              		.loc 1 308 0
 864 01ce 7B6B     		ldr	r3, [r7, #52]
 865 01d0 0133     		adds	r3, r3, #1
 866 01d2 7B63     		str	r3, [r7, #52]
 309:.\Protocolo.c ****                 y++;    
 867              		.loc 1 309 0
 868 01d4 3B6B     		ldr	r3, [r7, #48]
 869 01d6 0133     		adds	r3, r3, #1
 870 01d8 3B63     		str	r3, [r7, #48]
 871              	.L55:
 306:.\Protocolo.c ****                 bSale.volume[y]=(rx_sale[x]&0x0F);
 872              		.loc 1 306 0
 873 01da 07F10802 		add	r2, r7, #8
 874 01de 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 22


 875 01e0 1344     		add	r3, r3, r2
 876 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 877 01e4 FA2B     		cmp	r3, #250
 878 01e6 E4D1     		bne	.L56
 306:.\Protocolo.c ****                 bSale.volume[y]=(rx_sale[x]&0x0F);
 879              		.loc 1 306 0 is_stmt 0 discriminator 1
 880 01e8 7B6B     		ldr	r3, [r7, #52]
 881 01ea 262B     		cmp	r3, #38
 882 01ec E1D8     		bhi	.L56
 310:.\Protocolo.c ****             }
 311:.\Protocolo.c **** 			bSale.volume[0]=y-1;
 883              		.loc 1 311 0 is_stmt 1
 884 01ee 3B6B     		ldr	r3, [r7, #48]
 885 01f0 DBB2     		uxtb	r3, r3
 886 01f2 013B     		subs	r3, r3, #1
 887 01f4 DAB2     		uxtb	r2, r3
 888 01f6 394B     		ldr	r3, .L80+4
 889 01f8 1A76     		strb	r2, [r3, #24]
 312:.\Protocolo.c ****             x++;
 890              		.loc 1 312 0
 891 01fa 7B6B     		ldr	r3, [r7, #52]
 892 01fc 0133     		adds	r3, r3, #1
 893 01fe 7B63     		str	r3, [r7, #52]
 313:.\Protocolo.c ****             y=1;
 894              		.loc 1 313 0
 895 0200 0123     		movs	r3, #1
 896 0202 3B63     		str	r3, [r7, #48]
 314:.\Protocolo.c ****             while((rx_sale[x]!=0xFB)||(x>=39)){
 897              		.loc 1 314 0
 898 0204 13E0     		b	.L57
 899              	.L58:
 315:.\Protocolo.c ****                 bSale.money[y]=(rx_sale[x]&0x0F);
 900              		.loc 1 315 0
 901 0206 07F10802 		add	r2, r7, #8
 902 020a 7B6B     		ldr	r3, [r7, #52]
 903 020c 1344     		add	r3, r3, r2
 904 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0210 03F00F03 		and	r3, r3, #15
 906 0214 D9B2     		uxtb	r1, r3
 907 0216 314A     		ldr	r2, .L80+4
 908 0218 3B6B     		ldr	r3, [r7, #48]
 909 021a 1344     		add	r3, r3, r2
 910 021c 0833     		adds	r3, r3, #8
 911 021e 0A46     		mov	r2, r1
 912 0220 1A71     		strb	r2, [r3, #4]
 316:.\Protocolo.c ****                 x++;
 913              		.loc 1 316 0
 914 0222 7B6B     		ldr	r3, [r7, #52]
 915 0224 0133     		adds	r3, r3, #1
 916 0226 7B63     		str	r3, [r7, #52]
 317:.\Protocolo.c ****                 y++;    
 917              		.loc 1 317 0
 918 0228 3B6B     		ldr	r3, [r7, #48]
 919 022a 0133     		adds	r3, r3, #1
 920 022c 3B63     		str	r3, [r7, #48]
 921              	.L57:
 314:.\Protocolo.c ****                 bSale.money[y]=(rx_sale[x]&0x0F);
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 23


 922              		.loc 1 314 0
 923 022e 07F10802 		add	r2, r7, #8
 924 0232 7B6B     		ldr	r3, [r7, #52]
 925 0234 1344     		add	r3, r3, r2
 926 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0238 FB2B     		cmp	r3, #251
 928 023a E4D1     		bne	.L58
 314:.\Protocolo.c ****                 bSale.money[y]=(rx_sale[x]&0x0F);
 929              		.loc 1 314 0 is_stmt 0 discriminator 1
 930 023c 7B6B     		ldr	r3, [r7, #52]
 931 023e 262B     		cmp	r3, #38
 932 0240 E1D8     		bhi	.L58
 318:.\Protocolo.c ****             }
 319:.\Protocolo.c **** 			bSale.money[0]=y-1;
 933              		.loc 1 319 0 is_stmt 1
 934 0242 3B6B     		ldr	r3, [r7, #48]
 935 0244 DBB2     		uxtb	r3, r3
 936 0246 013B     		subs	r3, r3, #1
 937 0248 DAB2     		uxtb	r2, r3
 938 024a 244B     		ldr	r3, .L80+4
 939 024c 1A73     		strb	r2, [r3, #12]
 320:.\Protocolo.c ****             x+=2;
 940              		.loc 1 320 0
 941 024e 7B6B     		ldr	r3, [r7, #52]
 942 0250 0233     		adds	r3, r3, #2
 943 0252 7B63     		str	r3, [r7, #52]
 321:.\Protocolo.c ****             if((rx_sale[x]==0xF0)&&(x<=38)){								
 944              		.loc 1 321 0
 945 0254 07F10802 		add	r2, r7, #8
 946 0258 7B6B     		ldr	r3, [r7, #52]
 947 025a 1344     		add	r3, r3, r2
 948 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 025e F02B     		cmp	r3, #240
 950 0260 40F0E980 		bne	.L59
 951              		.loc 1 321 0 is_stmt 0 discriminator 1
 952 0264 7B6B     		ldr	r3, [r7, #52]
 953 0266 262B     		cmp	r3, #38
 954 0268 00F2E580 		bhi	.L59
 322:.\Protocolo.c **** 				if(val==side.a.dir){
 955              		.loc 1 322 0 is_stmt 1
 956 026c 1A4B     		ldr	r3, .L80
 957 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 958 0270 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 959 0272 9A42     		cmp	r2, r3
 960 0274 6FD1     		bne	.L60
 323:.\Protocolo.c **** 					for(j=0;j<=bSale.money[0];j++){
 961              		.loc 1 323 0
 962 0276 0023     		movs	r3, #0
 963 0278 BB63     		str	r3, [r7, #56]
 964 027a 0DE0     		b	.L61
 965              	.L62:
 324:.\Protocolo.c ****     					side.a.money[j]=bSale.money[j];
 966              		.loc 1 324 0 discriminator 3
 967 027c 174A     		ldr	r2, .L80+4
 968 027e BB6B     		ldr	r3, [r7, #56]
 969 0280 1344     		add	r3, r3, r2
 970 0282 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 24


 971 0284 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 972 0286 144A     		ldr	r2, .L80
 973 0288 BB6B     		ldr	r3, [r7, #56]
 974 028a 1344     		add	r3, r3, r2
 975 028c 4833     		adds	r3, r3, #72
 976 028e 0A46     		mov	r2, r1
 977 0290 1A71     		strb	r2, [r3, #4]
 323:.\Protocolo.c **** 					for(j=0;j<=bSale.money[0];j++){
 978              		.loc 1 323 0 discriminator 3
 979 0292 BB6B     		ldr	r3, [r7, #56]
 980 0294 0133     		adds	r3, r3, #1
 981 0296 BB63     		str	r3, [r7, #56]
 982              	.L61:
 323:.\Protocolo.c **** 					for(j=0;j<=bSale.money[0];j++){
 983              		.loc 1 323 0 is_stmt 0 discriminator 1
 984 0298 104B     		ldr	r3, .L80+4
 985 029a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 986 029c 1A46     		mov	r2, r3
 987 029e BB6B     		ldr	r3, [r7, #56]
 988 02a0 9A42     		cmp	r2, r3
 989 02a2 EBD2     		bcs	.L62
 325:.\Protocolo.c ****     				}
 326:.\Protocolo.c ****     				for(j=0;j<=bSale.volume[0];j++){
 990              		.loc 1 326 0 is_stmt 1
 991 02a4 0023     		movs	r3, #0
 992 02a6 BB63     		str	r3, [r7, #56]
 993 02a8 0DE0     		b	.L63
 994              	.L64:
 327:.\Protocolo.c ****     					side.a.volume[j]=bSale.volume[j];
 995              		.loc 1 327 0 discriminator 3
 996 02aa 0C4A     		ldr	r2, .L80+4
 997 02ac BB6B     		ldr	r3, [r7, #56]
 998 02ae 1344     		add	r3, r3, r2
 999 02b0 1833     		adds	r3, r3, #24
 1000 02b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1001 02b4 084A     		ldr	r2, .L80
 1002 02b6 BB6B     		ldr	r3, [r7, #56]
 1003 02b8 1344     		add	r3, r3, r2
 1004 02ba 5833     		adds	r3, r3, #88
 1005 02bc 0A46     		mov	r2, r1
 1006 02be 1A70     		strb	r2, [r3]
 326:.\Protocolo.c ****     					side.a.volume[j]=bSale.volume[j];
 1007              		.loc 1 326 0 discriminator 3
 1008 02c0 BB6B     		ldr	r3, [r7, #56]
 1009 02c2 0133     		adds	r3, r3, #1
 1010 02c4 BB63     		str	r3, [r7, #56]
 1011              	.L63:
 326:.\Protocolo.c ****     					side.a.volume[j]=bSale.volume[j];
 1012              		.loc 1 326 0 is_stmt 0 discriminator 1
 1013 02c6 054B     		ldr	r3, .L80+4
 1014 02c8 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1015 02ca 1A46     		mov	r2, r3
 1016 02cc BB6B     		ldr	r3, [r7, #56]
 1017 02ce 9A42     		cmp	r2, r3
 1018 02d0 EBD2     		bcs	.L64
 328:.\Protocolo.c ****     				}
 329:.\Protocolo.c ****     				for(j=0;j<=bSale.ppu[0];j++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 25


 1019              		.loc 1 329 0 is_stmt 1
 1020 02d2 0023     		movs	r3, #0
 1021 02d4 BB63     		str	r3, [r7, #56]
 1022 02d6 10E0     		b	.L65
 1023              	.L81:
 1024              		.align	2
 1025              	.L80:
 1026 02d8 00000000 		.word	side
 1027 02dc 00000000 		.word	bSale
 1028              	.L66:
 330:.\Protocolo.c ****     					side.a.ppu[j]=bSale.ppu[j];
 1029              		.loc 1 330 0 discriminator 3
 1030 02e0 594A     		ldr	r2, .L82
 1031 02e2 BB6B     		ldr	r3, [r7, #56]
 1032 02e4 1344     		add	r3, r3, r2
 1033 02e6 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1034 02e8 584A     		ldr	r2, .L82+4
 1035 02ea BB6B     		ldr	r3, [r7, #56]
 1036 02ec 1344     		add	r3, r3, r2
 1037 02ee 4033     		adds	r3, r3, #64
 1038 02f0 0A46     		mov	r2, r1
 1039 02f2 9A70     		strb	r2, [r3, #2]
 329:.\Protocolo.c ****     					side.a.ppu[j]=bSale.ppu[j];
 1040              		.loc 1 329 0 discriminator 3
 1041 02f4 BB6B     		ldr	r3, [r7, #56]
 1042 02f6 0133     		adds	r3, r3, #1
 1043 02f8 BB63     		str	r3, [r7, #56]
 1044              	.L65:
 329:.\Protocolo.c ****     					side.a.ppu[j]=bSale.ppu[j];
 1045              		.loc 1 329 0 is_stmt 0 discriminator 1
 1046 02fa 534B     		ldr	r3, .L82
 1047 02fc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1048 02fe 1A46     		mov	r2, r3
 1049 0300 BB6B     		ldr	r3, [r7, #56]
 1050 0302 9A42     		cmp	r2, r3
 1051 0304 ECD2     		bcs	.L66
 331:.\Protocolo.c ****     				}
 332:.\Protocolo.c ****                     side.a.product=bSale.product;
 1052              		.loc 1 332 0 is_stmt 1
 1053 0306 504B     		ldr	r3, .L82
 1054 0308 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1055 030a 504B     		ldr	r3, .L82+4
 1056 030c 83F84120 		strb	r2, [r3, #65]
 333:.\Protocolo.c ****                     countImp[1]=0;
 1057              		.loc 1 333 0
 1058 0310 4F4B     		ldr	r3, .L82+8
 1059 0312 0022     		movs	r2, #0
 1060 0314 5A70     		strb	r2, [r3, #1]
 334:.\Protocolo.c ****                     read_date();
 1061              		.loc 1 334 0
 1062 0316 FFF7FEFF 		bl	read_date
 335:.\Protocolo.c ****                     read_time();
 1063              		.loc 1 335 0
 1064 031a FFF7FEFF 		bl	read_time
 336:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1065              		.loc 1 336 0
 1066 031e 0023     		movs	r3, #0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 26


 1067 0320 BB63     		str	r3, [r7, #56]
 1068 0322 14E0     		b	.L67
 1069              	.L68:
 337:.\Protocolo.c ****                         dateSale1[j]=date[j];
 1070              		.loc 1 337 0 discriminator 3
 1071 0324 4B4A     		ldr	r2, .L82+12
 1072 0326 BB6B     		ldr	r3, [r7, #56]
 1073 0328 1344     		add	r3, r3, r2
 1074 032a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1075 032c 4A4A     		ldr	r2, .L82+16
 1076 032e BB6B     		ldr	r3, [r7, #56]
 1077 0330 1344     		add	r3, r3, r2
 1078 0332 0A46     		mov	r2, r1
 1079 0334 1A70     		strb	r2, [r3]
 338:.\Protocolo.c ****                         timeSale1[j]=time[j];
 1080              		.loc 1 338 0 discriminator 3
 1081 0336 494A     		ldr	r2, .L82+20
 1082 0338 BB6B     		ldr	r3, [r7, #56]
 1083 033a 1344     		add	r3, r3, r2
 1084 033c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1085 033e 484A     		ldr	r2, .L82+24
 1086 0340 BB6B     		ldr	r3, [r7, #56]
 1087 0342 1344     		add	r3, r3, r2
 1088 0344 0A46     		mov	r2, r1
 1089 0346 1A70     		strb	r2, [r3]
 336:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1090              		.loc 1 336 0 discriminator 3
 1091 0348 BB6B     		ldr	r3, [r7, #56]
 1092 034a 0133     		adds	r3, r3, #1
 1093 034c BB63     		str	r3, [r7, #56]
 1094              	.L67:
 336:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1095              		.loc 1 336 0 is_stmt 0 discriminator 1
 1096 034e BB6B     		ldr	r3, [r7, #56]
 1097 0350 022B     		cmp	r3, #2
 1098 0352 E7D9     		bls	.L68
 1099 0354 6DE0     		b	.L69
 1100              	.L60:
 339:.\Protocolo.c ****                     }
 340:.\Protocolo.c **** 				}else{
 341:.\Protocolo.c **** 					for(j=0;j<=bSale.money[0];j++){
 1101              		.loc 1 341 0 is_stmt 1
 1102 0356 0023     		movs	r3, #0
 1103 0358 BB63     		str	r3, [r7, #56]
 1104 035a 0EE0     		b	.L70
 1105              	.L71:
 342:.\Protocolo.c ****     					side.b.money[j]=bSale.money[j];
 1106              		.loc 1 342 0 discriminator 3
 1107 035c 3A4A     		ldr	r2, .L82
 1108 035e BB6B     		ldr	r3, [r7, #56]
 1109 0360 1344     		add	r3, r3, r2
 1110 0362 0833     		adds	r3, r3, #8
 1111 0364 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1112 0366 394A     		ldr	r2, .L82+4
 1113 0368 BB6B     		ldr	r3, [r7, #56]
 1114 036a 1344     		add	r3, r3, r2
 1115 036c 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 27


 1116 0370 0A46     		mov	r2, r1
 1117 0372 5A71     		strb	r2, [r3, #5]
 341:.\Protocolo.c ****     					side.b.money[j]=bSale.money[j];
 1118              		.loc 1 341 0 discriminator 3
 1119 0374 BB6B     		ldr	r3, [r7, #56]
 1120 0376 0133     		adds	r3, r3, #1
 1121 0378 BB63     		str	r3, [r7, #56]
 1122              	.L70:
 341:.\Protocolo.c ****     					side.b.money[j]=bSale.money[j];
 1123              		.loc 1 341 0 is_stmt 0 discriminator 1
 1124 037a 334B     		ldr	r3, .L82
 1125 037c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1126 037e 1A46     		mov	r2, r3
 1127 0380 BB6B     		ldr	r3, [r7, #56]
 1128 0382 9A42     		cmp	r2, r3
 1129 0384 EAD2     		bcs	.L71
 343:.\Protocolo.c ****     				}
 344:.\Protocolo.c ****     				for(j=0;j<=bSale.volume[0];j++){
 1130              		.loc 1 344 0 is_stmt 1
 1131 0386 0023     		movs	r3, #0
 1132 0388 BB63     		str	r3, [r7, #56]
 1133 038a 0EE0     		b	.L72
 1134              	.L73:
 345:.\Protocolo.c ****     					side.b.volume[j]=bSale.volume[j];
 1135              		.loc 1 345 0 discriminator 3
 1136 038c 2E4A     		ldr	r2, .L82
 1137 038e BB6B     		ldr	r3, [r7, #56]
 1138 0390 1344     		add	r3, r3, r2
 1139 0392 1833     		adds	r3, r3, #24
 1140 0394 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1141 0396 2D4A     		ldr	r2, .L82+4
 1142 0398 BB6B     		ldr	r3, [r7, #56]
 1143 039a 1344     		add	r3, r3, r2
 1144 039c 03F5E073 		add	r3, r3, #448
 1145 03a0 0A46     		mov	r2, r1
 1146 03a2 5A70     		strb	r2, [r3, #1]
 344:.\Protocolo.c ****     					side.b.volume[j]=bSale.volume[j];
 1147              		.loc 1 344 0 discriminator 3
 1148 03a4 BB6B     		ldr	r3, [r7, #56]
 1149 03a6 0133     		adds	r3, r3, #1
 1150 03a8 BB63     		str	r3, [r7, #56]
 1151              	.L72:
 344:.\Protocolo.c ****     					side.b.volume[j]=bSale.volume[j];
 1152              		.loc 1 344 0 is_stmt 0 discriminator 1
 1153 03aa 274B     		ldr	r3, .L82
 1154 03ac 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1155 03ae 1A46     		mov	r2, r3
 1156 03b0 BB6B     		ldr	r3, [r7, #56]
 1157 03b2 9A42     		cmp	r2, r3
 1158 03b4 EAD2     		bcs	.L73
 346:.\Protocolo.c ****     				}
 347:.\Protocolo.c ****     				for(j=0;j<=bSale.ppu[0];j++){
 1159              		.loc 1 347 0 is_stmt 1
 1160 03b6 0023     		movs	r3, #0
 1161 03b8 BB63     		str	r3, [r7, #56]
 1162 03ba 0DE0     		b	.L74
 1163              	.L75:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 28


 348:.\Protocolo.c ****     					side.b.ppu[j]=bSale.ppu[j];
 1164              		.loc 1 348 0 discriminator 3
 1165 03bc 224A     		ldr	r2, .L82
 1166 03be BB6B     		ldr	r3, [r7, #56]
 1167 03c0 1344     		add	r3, r3, r2
 1168 03c2 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1169 03c4 214A     		ldr	r2, .L82+4
 1170 03c6 BB6B     		ldr	r3, [r7, #56]
 1171 03c8 1344     		add	r3, r3, r2
 1172 03ca 03F5D473 		add	r3, r3, #424
 1173 03ce 0A46     		mov	r2, r1
 1174 03d0 DA70     		strb	r2, [r3, #3]
 347:.\Protocolo.c ****     					side.b.ppu[j]=bSale.ppu[j];
 1175              		.loc 1 347 0 discriminator 3
 1176 03d2 BB6B     		ldr	r3, [r7, #56]
 1177 03d4 0133     		adds	r3, r3, #1
 1178 03d6 BB63     		str	r3, [r7, #56]
 1179              	.L74:
 347:.\Protocolo.c ****     					side.b.ppu[j]=bSale.ppu[j];
 1180              		.loc 1 347 0 is_stmt 0 discriminator 1
 1181 03d8 1B4B     		ldr	r3, .L82
 1182 03da 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1183 03dc 1A46     		mov	r2, r3
 1184 03de BB6B     		ldr	r3, [r7, #56]
 1185 03e0 9A42     		cmp	r2, r3
 1186 03e2 EBD2     		bcs	.L75
 349:.\Protocolo.c ****     				}	
 350:.\Protocolo.c ****                     side.b.product=bSale.product;
 1187              		.loc 1 350 0 is_stmt 1
 1188 03e4 184B     		ldr	r3, .L82
 1189 03e6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1190 03e8 184B     		ldr	r3, .L82+4
 1191 03ea 83F8AA21 		strb	r2, [r3, #426]
 351:.\Protocolo.c ****                     countImp[2]=0;
 1192              		.loc 1 351 0
 1193 03ee 184B     		ldr	r3, .L82+8
 1194 03f0 0022     		movs	r2, #0
 1195 03f2 9A70     		strb	r2, [r3, #2]
 352:.\Protocolo.c ****                     read_date();
 1196              		.loc 1 352 0
 1197 03f4 FFF7FEFF 		bl	read_date
 353:.\Protocolo.c ****                     read_time();
 1198              		.loc 1 353 0
 1199 03f8 FFF7FEFF 		bl	read_time
 354:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1200              		.loc 1 354 0
 1201 03fc 0023     		movs	r3, #0
 1202 03fe BB63     		str	r3, [r7, #56]
 1203 0400 14E0     		b	.L76
 1204              	.L77:
 355:.\Protocolo.c ****                         dateSale2[j]=date[j];
 1205              		.loc 1 355 0 discriminator 3
 1206 0402 144A     		ldr	r2, .L82+12
 1207 0404 BB6B     		ldr	r3, [r7, #56]
 1208 0406 1344     		add	r3, r3, r2
 1209 0408 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1210 040a 164A     		ldr	r2, .L82+28
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 29


 1211 040c BB6B     		ldr	r3, [r7, #56]
 1212 040e 1344     		add	r3, r3, r2
 1213 0410 0A46     		mov	r2, r1
 1214 0412 1A70     		strb	r2, [r3]
 356:.\Protocolo.c ****                         timeSale2[j]=time[j];
 1215              		.loc 1 356 0 discriminator 3
 1216 0414 114A     		ldr	r2, .L82+20
 1217 0416 BB6B     		ldr	r3, [r7, #56]
 1218 0418 1344     		add	r3, r3, r2
 1219 041a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1220 041c 124A     		ldr	r2, .L82+32
 1221 041e BB6B     		ldr	r3, [r7, #56]
 1222 0420 1344     		add	r3, r3, r2
 1223 0422 0A46     		mov	r2, r1
 1224 0424 1A70     		strb	r2, [r3]
 354:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1225              		.loc 1 354 0 discriminator 3
 1226 0426 BB6B     		ldr	r3, [r7, #56]
 1227 0428 0133     		adds	r3, r3, #1
 1228 042a BB63     		str	r3, [r7, #56]
 1229              	.L76:
 354:.\Protocolo.c ****                     for(j=0;j<=2;j++){
 1230              		.loc 1 354 0 is_stmt 0 discriminator 1
 1231 042c BB6B     		ldr	r3, [r7, #56]
 1232 042e 022B     		cmp	r3, #2
 1233 0430 E7D9     		bls	.L77
 1234              	.L69:
 357:.\Protocolo.c ****                     }
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c ****                 return 1;
 1235              		.loc 1 359 0 is_stmt 1
 1236 0432 0123     		movs	r3, #1
 1237 0434 04E0     		b	.L79
 1238              	.L59:
 360:.\Protocolo.c ****             }
 361:.\Protocolo.c ****             else{
 362:.\Protocolo.c ****                 return 0;
 1239              		.loc 1 362 0
 1240 0436 0023     		movs	r3, #0
 1241 0438 02E0     		b	.L79
 1242              	.L48:
 363:.\Protocolo.c ****             }
 364:.\Protocolo.c ****         }
 365:.\Protocolo.c ****         else{
 366:.\Protocolo.c ****             return 0;
 1243              		.loc 1 366 0
 1244 043a 0023     		movs	r3, #0
 1245 043c 00E0     		b	.L79
 1246              	.L39:
 367:.\Protocolo.c ****         }
 368:.\Protocolo.c ****     }
 369:.\Protocolo.c ****     else{
 370:.\Protocolo.c ****         return 0;
 1247              		.loc 1 370 0
 1248 043e 0023     		movs	r3, #0
 1249              	.L79:
 371:.\Protocolo.c ****     }
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 30


 372:.\Protocolo.c **** }
 1250              		.loc 1 372 0 discriminator 1
 1251 0440 1846     		mov	r0, r3
 1252 0442 4037     		adds	r7, r7, #64
 1253              		.cfi_def_cfa_offset 8
 1254 0444 BD46     		mov	sp, r7
 1255              		.cfi_def_cfa_register 13
 1256              		@ sp needed
 1257 0446 80BD     		pop	{r7, pc}
 1258              	.L83:
 1259              		.align	2
 1260              	.L82:
 1261 0448 00000000 		.word	bSale
 1262 044c 00000000 		.word	side
 1263 0450 00000000 		.word	countImp
 1264 0454 00000000 		.word	date
 1265 0458 00000000 		.word	dateSale1
 1266 045c 00000000 		.word	time
 1267 0460 00000000 		.word	timeSale1
 1268 0464 00000000 		.word	dateSale2
 1269 0468 00000000 		.word	timeSale2
 1270              		.cfi_endproc
 1271              	.LFE61:
 1272              		.size	sale_in, .-sale_in
 1273              		.section	.text.sale,"ax",%progbits
 1274              		.align	2
 1275              		.global	sale
 1276              		.thumb
 1277              		.thumb_func
 1278              		.type	sale, %function
 1279              	sale:
 1280              	.LFB62:
 373:.\Protocolo.c **** 
 374:.\Protocolo.c **** 
 375:.\Protocolo.c **** /*
 376:.\Protocolo.c **** ***************************************************************************************************
 377:.\Protocolo.c **** *                                  uint8 sale(uint8 val)
 378:.\Protocolo.c **** *
 379:.\Protocolo.c **** * Description : 
 380:.\Protocolo.c **** *               
 381:.\Protocolo.c **** *
 382:.\Protocolo.c **** * Argument(s) : none
 383:.\Protocolo.c **** *
 384:.\Protocolo.c **** * Return(s)   : none
 385:.\Protocolo.c **** *
 386:.\Protocolo.c **** * Caller(s)   : 
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Note(s)     : none.
 389:.\Protocolo.c **** ***************************************************************************************************
 390:.\Protocolo.c **** */
 391:.\Protocolo.c **** void sale(uint8 sidePump){
 1281              		.loc 1 391 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 24
 1284              		@ frame_needed = 1, uses_anonymous_args = 0
 1285 0000 80B5     		push	{r7, lr}
 1286              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 31


 1287              		.cfi_offset 7, -8
 1288              		.cfi_offset 14, -4
 1289 0002 86B0     		sub	sp, sp, #24
 1290              		.cfi_def_cfa_offset 32
 1291 0004 00AF     		add	r7, sp, #0
 1292              		.cfi_def_cfa_register 7
 1293 0006 0346     		mov	r3, r0
 1294 0008 FB71     		strb	r3, [r7, #7]
 392:.\Protocolo.c ****     uint8 pos; 
 393:.\Protocolo.c ****     uint32 j,x=0,y;
 1295              		.loc 1 393 0
 1296 000a 0023     		movs	r3, #0
 1297 000c FB60     		str	r3, [r7, #12]
 394:.\Protocolo.c ****     if(sidePump==0){
 1298              		.loc 1 394 0
 1299 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1300 0010 002B     		cmp	r3, #0
 1301 0012 05D1     		bne	.L85
 395:.\Protocolo.c ****         pos=0x10;
 1302              		.loc 1 395 0
 1303 0014 1023     		movs	r3, #16
 1304 0016 FB75     		strb	r3, [r7, #23]
 396:.\Protocolo.c ****         bSale.position=pos;
 1305              		.loc 1 396 0
 1306 0018 A04A     		ldr	r2, .L115
 1307 001a FB7D     		ldrb	r3, [r7, #23]
 1308 001c 1370     		strb	r3, [r2]
 1309 001e 04E0     		b	.L86
 1310              	.L85:
 397:.\Protocolo.c ****     }
 398:.\Protocolo.c ****     else{
 399:.\Protocolo.c ****         pos=sidePump;
 1311              		.loc 1 399 0
 1312 0020 FB79     		ldrb	r3, [r7, #7]
 1313 0022 FB75     		strb	r3, [r7, #23]
 400:.\Protocolo.c ****         bSale.position=pos;
 1314              		.loc 1 400 0
 1315 0024 9D4A     		ldr	r2, .L115
 1316 0026 FB7D     		ldrb	r3, [r7, #23]
 1317 0028 1370     		strb	r3, [r2]
 1318              	.L86:
 401:.\Protocolo.c ****     }
 402:.\Protocolo.c ****     if((RxPu[0]==0xFF)&&(RxPu[2]==0xF8)&&((RxPu[4]&0x0F)==(pos-1))){
 1319              		.loc 1 402 0
 1320 002a 9D4B     		ldr	r3, .L115+4
 1321 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 002e FF2B     		cmp	r3, #255
 1323 0030 40F0B281 		bne	.L84
 1324              		.loc 1 402 0 is_stmt 0 discriminator 1
 1325 0034 9A4B     		ldr	r3, .L115+4
 1326 0036 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1327 0038 F82B     		cmp	r3, #248
 1328 003a 40F0AD81 		bne	.L84
 1329              		.loc 1 402 0 discriminator 2
 1330 003e 984B     		ldr	r3, .L115+4
 1331 0040 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1332 0042 03F00F02 		and	r2, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 32


 1333 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1334 0048 013B     		subs	r3, r3, #1
 1335 004a 9A42     		cmp	r2, r3
 1336 004c 40F0A481 		bne	.L84
 403:.\Protocolo.c ****         x=0;
 1337              		.loc 1 403 0 is_stmt 1
 1338 0050 0023     		movs	r3, #0
 1339 0052 FB60     		str	r3, [r7, #12]
 404:.\Protocolo.c ****         while((RxPu[x]!=0xF6)||(x>=39)){
 1340              		.loc 1 404 0
 1341 0054 02E0     		b	.L88
 1342              	.L89:
 405:.\Protocolo.c ****             x++;
 1343              		.loc 1 405 0
 1344 0056 FB68     		ldr	r3, [r7, #12]
 1345 0058 0133     		adds	r3, r3, #1
 1346 005a FB60     		str	r3, [r7, #12]
 1347              	.L88:
 404:.\Protocolo.c ****         while((RxPu[x]!=0xF6)||(x>=39)){
 1348              		.loc 1 404 0
 1349 005c 904A     		ldr	r2, .L115+4
 1350 005e FB68     		ldr	r3, [r7, #12]
 1351 0060 1344     		add	r3, r3, r2
 1352 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 0064 F62B     		cmp	r3, #246
 1354 0066 F6D1     		bne	.L89
 404:.\Protocolo.c ****         while((RxPu[x]!=0xF6)||(x>=39)){
 1355              		.loc 1 404 0 is_stmt 0 discriminator 1
 1356 0068 FB68     		ldr	r3, [r7, #12]
 1357 006a 262B     		cmp	r3, #38
 1358 006c F3D8     		bhi	.L89
 406:.\Protocolo.c ****         }
 407:.\Protocolo.c ****         x++;
 1359              		.loc 1 407 0 is_stmt 1
 1360 006e FB68     		ldr	r3, [r7, #12]
 1361 0070 0133     		adds	r3, r3, #1
 1362 0072 FB60     		str	r3, [r7, #12]
 408:.\Protocolo.c ****         bSale.product=(RxPu[x]&0x0F)+1;
 1363              		.loc 1 408 0
 1364 0074 8A4A     		ldr	r2, .L115+4
 1365 0076 FB68     		ldr	r3, [r7, #12]
 1366 0078 1344     		add	r3, r3, r2
 1367 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1368 007c 03F00F03 		and	r3, r3, #15
 1369 0080 DBB2     		uxtb	r3, r3
 1370 0082 0133     		adds	r3, r3, #1
 1371 0084 DAB2     		uxtb	r2, r3
 1372 0086 854B     		ldr	r3, .L115
 1373 0088 5A70     		strb	r2, [r3, #1]
 409:.\Protocolo.c ****         while((RxPu[x]!=0xF7)||(x>=39)){
 1374              		.loc 1 409 0
 1375 008a 02E0     		b	.L90
 1376              	.L91:
 410:.\Protocolo.c ****             x++;
 1377              		.loc 1 410 0
 1378 008c FB68     		ldr	r3, [r7, #12]
 1379 008e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 33


 1380 0090 FB60     		str	r3, [r7, #12]
 1381              	.L90:
 409:.\Protocolo.c ****         while((RxPu[x]!=0xF7)||(x>=39)){
 1382              		.loc 1 409 0
 1383 0092 834A     		ldr	r2, .L115+4
 1384 0094 FB68     		ldr	r3, [r7, #12]
 1385 0096 1344     		add	r3, r3, r2
 1386 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 009a F72B     		cmp	r3, #247
 1388 009c F6D1     		bne	.L91
 409:.\Protocolo.c ****         while((RxPu[x]!=0xF7)||(x>=39)){
 1389              		.loc 1 409 0 is_stmt 0 discriminator 1
 1390 009e FB68     		ldr	r3, [r7, #12]
 1391 00a0 262B     		cmp	r3, #38
 1392 00a2 F3D8     		bhi	.L91
 411:.\Protocolo.c ****         }
 412:.\Protocolo.c ****         x++;
 1393              		.loc 1 412 0 is_stmt 1
 1394 00a4 FB68     		ldr	r3, [r7, #12]
 1395 00a6 0133     		adds	r3, r3, #1
 1396 00a8 FB60     		str	r3, [r7, #12]
 413:.\Protocolo.c ****         y=1;
 1397              		.loc 1 413 0
 1398 00aa 0123     		movs	r3, #1
 1399 00ac BB60     		str	r3, [r7, #8]
 414:.\Protocolo.c ****         while((RxPu[x]!=0xF9)||(x>=39)){    
 1400              		.loc 1 414 0
 1401 00ae 11E0     		b	.L92
 1402              	.L93:
 415:.\Protocolo.c ****             bSale.ppu[y]=(RxPu[x]&0x0F);
 1403              		.loc 1 415 0
 1404 00b0 7B4A     		ldr	r2, .L115+4
 1405 00b2 FB68     		ldr	r3, [r7, #12]
 1406 00b4 1344     		add	r3, r3, r2
 1407 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1408 00b8 03F00F03 		and	r3, r3, #15
 1409 00bc D9B2     		uxtb	r1, r3
 1410 00be 774A     		ldr	r2, .L115
 1411 00c0 BB68     		ldr	r3, [r7, #8]
 1412 00c2 1344     		add	r3, r3, r2
 1413 00c4 0A46     		mov	r2, r1
 1414 00c6 9A70     		strb	r2, [r3, #2]
 416:.\Protocolo.c ****             x++;
 1415              		.loc 1 416 0
 1416 00c8 FB68     		ldr	r3, [r7, #12]
 1417 00ca 0133     		adds	r3, r3, #1
 1418 00cc FB60     		str	r3, [r7, #12]
 417:.\Protocolo.c ****             y++;
 1419              		.loc 1 417 0
 1420 00ce BB68     		ldr	r3, [r7, #8]
 1421 00d0 0133     		adds	r3, r3, #1
 1422 00d2 BB60     		str	r3, [r7, #8]
 1423              	.L92:
 414:.\Protocolo.c ****             bSale.ppu[y]=(RxPu[x]&0x0F);
 1424              		.loc 1 414 0
 1425 00d4 724A     		ldr	r2, .L115+4
 1426 00d6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 34


 1427 00d8 1344     		add	r3, r3, r2
 1428 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1429 00dc F92B     		cmp	r3, #249
 1430 00de E7D1     		bne	.L93
 414:.\Protocolo.c ****             bSale.ppu[y]=(RxPu[x]&0x0F);
 1431              		.loc 1 414 0 is_stmt 0 discriminator 1
 1432 00e0 FB68     		ldr	r3, [r7, #12]
 1433 00e2 262B     		cmp	r3, #38
 1434 00e4 E4D8     		bhi	.L93
 418:.\Protocolo.c ****         }
 419:.\Protocolo.c **** 		bSale.ppu[0]=y-1;
 1435              		.loc 1 419 0 is_stmt 1
 1436 00e6 BB68     		ldr	r3, [r7, #8]
 1437 00e8 DBB2     		uxtb	r3, r3
 1438 00ea 013B     		subs	r3, r3, #1
 1439 00ec DAB2     		uxtb	r2, r3
 1440 00ee 6B4B     		ldr	r3, .L115
 1441 00f0 9A70     		strb	r2, [r3, #2]
 420:.\Protocolo.c ****         x++;
 1442              		.loc 1 420 0
 1443 00f2 FB68     		ldr	r3, [r7, #12]
 1444 00f4 0133     		adds	r3, r3, #1
 1445 00f6 FB60     		str	r3, [r7, #12]
 421:.\Protocolo.c ****         y=1;
 1446              		.loc 1 421 0
 1447 00f8 0123     		movs	r3, #1
 1448 00fa BB60     		str	r3, [r7, #8]
 422:.\Protocolo.c ****         while((RxPu[x]!=0xFA)||(x>=39)){
 1449              		.loc 1 422 0
 1450 00fc 12E0     		b	.L94
 1451              	.L95:
 423:.\Protocolo.c ****             bSale.volume[y]=(RxPu[x]&0x0F);
 1452              		.loc 1 423 0
 1453 00fe 684A     		ldr	r2, .L115+4
 1454 0100 FB68     		ldr	r3, [r7, #12]
 1455 0102 1344     		add	r3, r3, r2
 1456 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1457 0106 03F00F03 		and	r3, r3, #15
 1458 010a D9B2     		uxtb	r1, r3
 1459 010c 634A     		ldr	r2, .L115
 1460 010e BB68     		ldr	r3, [r7, #8]
 1461 0110 1344     		add	r3, r3, r2
 1462 0112 1833     		adds	r3, r3, #24
 1463 0114 0A46     		mov	r2, r1
 1464 0116 1A70     		strb	r2, [r3]
 424:.\Protocolo.c ****             x++;
 1465              		.loc 1 424 0
 1466 0118 FB68     		ldr	r3, [r7, #12]
 1467 011a 0133     		adds	r3, r3, #1
 1468 011c FB60     		str	r3, [r7, #12]
 425:.\Protocolo.c ****             y++;    
 1469              		.loc 1 425 0
 1470 011e BB68     		ldr	r3, [r7, #8]
 1471 0120 0133     		adds	r3, r3, #1
 1472 0122 BB60     		str	r3, [r7, #8]
 1473              	.L94:
 422:.\Protocolo.c ****             bSale.volume[y]=(RxPu[x]&0x0F);
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 35


 1474              		.loc 1 422 0
 1475 0124 5E4A     		ldr	r2, .L115+4
 1476 0126 FB68     		ldr	r3, [r7, #12]
 1477 0128 1344     		add	r3, r3, r2
 1478 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1479 012c FA2B     		cmp	r3, #250
 1480 012e E6D1     		bne	.L95
 422:.\Protocolo.c ****             bSale.volume[y]=(RxPu[x]&0x0F);
 1481              		.loc 1 422 0 is_stmt 0 discriminator 1
 1482 0130 FB68     		ldr	r3, [r7, #12]
 1483 0132 262B     		cmp	r3, #38
 1484 0134 E3D8     		bhi	.L95
 426:.\Protocolo.c ****         }
 427:.\Protocolo.c **** 		bSale.volume[0]=y-1;
 1485              		.loc 1 427 0 is_stmt 1
 1486 0136 BB68     		ldr	r3, [r7, #8]
 1487 0138 DBB2     		uxtb	r3, r3
 1488 013a 013B     		subs	r3, r3, #1
 1489 013c DAB2     		uxtb	r2, r3
 1490 013e 574B     		ldr	r3, .L115
 1491 0140 1A76     		strb	r2, [r3, #24]
 428:.\Protocolo.c ****         x++;
 1492              		.loc 1 428 0
 1493 0142 FB68     		ldr	r3, [r7, #12]
 1494 0144 0133     		adds	r3, r3, #1
 1495 0146 FB60     		str	r3, [r7, #12]
 429:.\Protocolo.c ****         y=1;
 1496              		.loc 1 429 0
 1497 0148 0123     		movs	r3, #1
 1498 014a BB60     		str	r3, [r7, #8]
 430:.\Protocolo.c ****         while((RxPu[x]!=0xFB)||(x>=39)){
 1499              		.loc 1 430 0
 1500 014c 12E0     		b	.L96
 1501              	.L97:
 431:.\Protocolo.c ****             bSale.money[y]=(RxPu[x]&0x0F);
 1502              		.loc 1 431 0
 1503 014e 544A     		ldr	r2, .L115+4
 1504 0150 FB68     		ldr	r3, [r7, #12]
 1505 0152 1344     		add	r3, r3, r2
 1506 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 0156 03F00F03 		and	r3, r3, #15
 1508 015a D9B2     		uxtb	r1, r3
 1509 015c 4F4A     		ldr	r2, .L115
 1510 015e BB68     		ldr	r3, [r7, #8]
 1511 0160 1344     		add	r3, r3, r2
 1512 0162 0833     		adds	r3, r3, #8
 1513 0164 0A46     		mov	r2, r1
 1514 0166 1A71     		strb	r2, [r3, #4]
 432:.\Protocolo.c ****             x++;
 1515              		.loc 1 432 0
 1516 0168 FB68     		ldr	r3, [r7, #12]
 1517 016a 0133     		adds	r3, r3, #1
 1518 016c FB60     		str	r3, [r7, #12]
 433:.\Protocolo.c ****             y++;    
 1519              		.loc 1 433 0
 1520 016e BB68     		ldr	r3, [r7, #8]
 1521 0170 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 36


 1522 0172 BB60     		str	r3, [r7, #8]
 1523              	.L96:
 430:.\Protocolo.c ****             bSale.money[y]=(RxPu[x]&0x0F);
 1524              		.loc 1 430 0
 1525 0174 4A4A     		ldr	r2, .L115+4
 1526 0176 FB68     		ldr	r3, [r7, #12]
 1527 0178 1344     		add	r3, r3, r2
 1528 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 017c FB2B     		cmp	r3, #251
 1530 017e E6D1     		bne	.L97
 430:.\Protocolo.c ****             bSale.money[y]=(RxPu[x]&0x0F);
 1531              		.loc 1 430 0 is_stmt 0 discriminator 1
 1532 0180 FB68     		ldr	r3, [r7, #12]
 1533 0182 262B     		cmp	r3, #38
 1534 0184 E3D8     		bhi	.L97
 434:.\Protocolo.c ****         }
 435:.\Protocolo.c **** 		bSale.money[0]=y-1;
 1535              		.loc 1 435 0 is_stmt 1
 1536 0186 BB68     		ldr	r3, [r7, #8]
 1537 0188 DBB2     		uxtb	r3, r3
 1538 018a 013B     		subs	r3, r3, #1
 1539 018c DAB2     		uxtb	r2, r3
 1540 018e 434B     		ldr	r3, .L115
 1541 0190 1A73     		strb	r2, [r3, #12]
 436:.\Protocolo.c ****         x+=2;
 1542              		.loc 1 436 0
 1543 0192 FB68     		ldr	r3, [r7, #12]
 1544 0194 0233     		adds	r3, r3, #2
 1545 0196 FB60     		str	r3, [r7, #12]
 437:.\Protocolo.c ****         if((RxPu[x]==0xF0)&&(x<=38)){								
 1546              		.loc 1 437 0
 1547 0198 414A     		ldr	r2, .L115+4
 1548 019a FB68     		ldr	r3, [r7, #12]
 1549 019c 1344     		add	r3, r3, r2
 1550 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 01a0 F02B     		cmp	r3, #240
 1552 01a2 40F0F980 		bne	.L84
 1553              		.loc 1 437 0 is_stmt 0 discriminator 1
 1554 01a6 FB68     		ldr	r3, [r7, #12]
 1555 01a8 262B     		cmp	r3, #38
 1556 01aa 00F2F580 		bhi	.L84
 438:.\Protocolo.c **** 			if(sidePump==side.a.dir){
 1557              		.loc 1 438 0 is_stmt 1
 1558 01ae 3D4B     		ldr	r3, .L115+8
 1559 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 01b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1561 01b4 9A42     		cmp	r2, r3
 1562 01b6 6ED1     		bne	.L98
 439:.\Protocolo.c **** 				for(j=0;j<=bSale.money[0];j++){
 1563              		.loc 1 439 0
 1564 01b8 0023     		movs	r3, #0
 1565 01ba 3B61     		str	r3, [r7, #16]
 1566 01bc 0DE0     		b	.L99
 1567              	.L100:
 440:.\Protocolo.c **** 					side.a.money[j]=bSale.money[j];
 1568              		.loc 1 440 0 discriminator 3
 1569 01be 374A     		ldr	r2, .L115
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 37


 1570 01c0 3B69     		ldr	r3, [r7, #16]
 1571 01c2 1344     		add	r3, r3, r2
 1572 01c4 0833     		adds	r3, r3, #8
 1573 01c6 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1574 01c8 364A     		ldr	r2, .L115+8
 1575 01ca 3B69     		ldr	r3, [r7, #16]
 1576 01cc 1344     		add	r3, r3, r2
 1577 01ce 4833     		adds	r3, r3, #72
 1578 01d0 0A46     		mov	r2, r1
 1579 01d2 1A71     		strb	r2, [r3, #4]
 439:.\Protocolo.c **** 				for(j=0;j<=bSale.money[0];j++){
 1580              		.loc 1 439 0 discriminator 3
 1581 01d4 3B69     		ldr	r3, [r7, #16]
 1582 01d6 0133     		adds	r3, r3, #1
 1583 01d8 3B61     		str	r3, [r7, #16]
 1584              	.L99:
 439:.\Protocolo.c **** 				for(j=0;j<=bSale.money[0];j++){
 1585              		.loc 1 439 0 is_stmt 0 discriminator 1
 1586 01da 304B     		ldr	r3, .L115
 1587 01dc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1588 01de 1A46     		mov	r2, r3
 1589 01e0 3B69     		ldr	r3, [r7, #16]
 1590 01e2 9A42     		cmp	r2, r3
 1591 01e4 EBD2     		bcs	.L100
 441:.\Protocolo.c **** 				}
 442:.\Protocolo.c **** 				for(j=0;j<=bSale.volume[0];j++){
 1592              		.loc 1 442 0 is_stmt 1
 1593 01e6 0023     		movs	r3, #0
 1594 01e8 3B61     		str	r3, [r7, #16]
 1595 01ea 0DE0     		b	.L101
 1596              	.L102:
 443:.\Protocolo.c **** 					side.a.volume[j]=bSale.volume[j];
 1597              		.loc 1 443 0 discriminator 3
 1598 01ec 2B4A     		ldr	r2, .L115
 1599 01ee 3B69     		ldr	r3, [r7, #16]
 1600 01f0 1344     		add	r3, r3, r2
 1601 01f2 1833     		adds	r3, r3, #24
 1602 01f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1603 01f6 2B4A     		ldr	r2, .L115+8
 1604 01f8 3B69     		ldr	r3, [r7, #16]
 1605 01fa 1344     		add	r3, r3, r2
 1606 01fc 5833     		adds	r3, r3, #88
 1607 01fe 0A46     		mov	r2, r1
 1608 0200 1A70     		strb	r2, [r3]
 442:.\Protocolo.c **** 					side.a.volume[j]=bSale.volume[j];
 1609              		.loc 1 442 0 discriminator 3
 1610 0202 3B69     		ldr	r3, [r7, #16]
 1611 0204 0133     		adds	r3, r3, #1
 1612 0206 3B61     		str	r3, [r7, #16]
 1613              	.L101:
 442:.\Protocolo.c **** 					side.a.volume[j]=bSale.volume[j];
 1614              		.loc 1 442 0 is_stmt 0 discriminator 1
 1615 0208 244B     		ldr	r3, .L115
 1616 020a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1617 020c 1A46     		mov	r2, r3
 1618 020e 3B69     		ldr	r3, [r7, #16]
 1619 0210 9A42     		cmp	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 38


 1620 0212 EBD2     		bcs	.L102
 444:.\Protocolo.c **** 				}
 445:.\Protocolo.c **** 				for(j=0;j<=bSale.ppu[0];j++){
 1621              		.loc 1 445 0 is_stmt 1
 1622 0214 0023     		movs	r3, #0
 1623 0216 3B61     		str	r3, [r7, #16]
 1624 0218 0CE0     		b	.L103
 1625              	.L104:
 446:.\Protocolo.c **** 					side.a.ppu[j]=bSale.ppu[j];
 1626              		.loc 1 446 0 discriminator 3
 1627 021a 204A     		ldr	r2, .L115
 1628 021c 3B69     		ldr	r3, [r7, #16]
 1629 021e 1344     		add	r3, r3, r2
 1630 0220 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1631 0222 204A     		ldr	r2, .L115+8
 1632 0224 3B69     		ldr	r3, [r7, #16]
 1633 0226 1344     		add	r3, r3, r2
 1634 0228 4033     		adds	r3, r3, #64
 1635 022a 0A46     		mov	r2, r1
 1636 022c 9A70     		strb	r2, [r3, #2]
 445:.\Protocolo.c **** 					side.a.ppu[j]=bSale.ppu[j];
 1637              		.loc 1 445 0 discriminator 3
 1638 022e 3B69     		ldr	r3, [r7, #16]
 1639 0230 0133     		adds	r3, r3, #1
 1640 0232 3B61     		str	r3, [r7, #16]
 1641              	.L103:
 445:.\Protocolo.c **** 					side.a.ppu[j]=bSale.ppu[j];
 1642              		.loc 1 445 0 is_stmt 0 discriminator 1
 1643 0234 194B     		ldr	r3, .L115
 1644 0236 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1645 0238 1A46     		mov	r2, r3
 1646 023a 3B69     		ldr	r3, [r7, #16]
 1647 023c 9A42     		cmp	r2, r3
 1648 023e ECD2     		bcs	.L104
 447:.\Protocolo.c **** 				}
 448:.\Protocolo.c ****                 side.a.product=bSale.product&0x07;
 1649              		.loc 1 448 0 is_stmt 1
 1650 0240 164B     		ldr	r3, .L115
 1651 0242 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1652 0244 03F00703 		and	r3, r3, #7
 1653 0248 DAB2     		uxtb	r2, r3
 1654 024a 164B     		ldr	r3, .L115+8
 1655 024c 83F84120 		strb	r2, [r3, #65]
 449:.\Protocolo.c ****                 countImp[1]=0;
 1656              		.loc 1 449 0
 1657 0250 154B     		ldr	r3, .L115+12
 1658 0252 0022     		movs	r2, #0
 1659 0254 5A70     		strb	r2, [r3, #1]
 450:.\Protocolo.c ****                 read_date();
 1660              		.loc 1 450 0
 1661 0256 FFF7FEFF 		bl	read_date
 451:.\Protocolo.c ****                 read_time();
 1662              		.loc 1 451 0
 1663 025a FFF7FEFF 		bl	read_time
 452:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1664              		.loc 1 452 0
 1665 025e 0023     		movs	r3, #0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 39


 1666 0260 3B61     		str	r3, [r7, #16]
 1667 0262 14E0     		b	.L105
 1668              	.L106:
 453:.\Protocolo.c ****                     dateSale1[j]=date[j];
 1669              		.loc 1 453 0 discriminator 3
 1670 0264 114A     		ldr	r2, .L115+16
 1671 0266 3B69     		ldr	r3, [r7, #16]
 1672 0268 1344     		add	r3, r3, r2
 1673 026a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1674 026c 104A     		ldr	r2, .L115+20
 1675 026e 3B69     		ldr	r3, [r7, #16]
 1676 0270 1344     		add	r3, r3, r2
 1677 0272 0A46     		mov	r2, r1
 1678 0274 1A70     		strb	r2, [r3]
 454:.\Protocolo.c ****                     timeSale1[j]=time[j];
 1679              		.loc 1 454 0 discriminator 3
 1680 0276 0F4A     		ldr	r2, .L115+24
 1681 0278 3B69     		ldr	r3, [r7, #16]
 1682 027a 1344     		add	r3, r3, r2
 1683 027c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1684 027e 0E4A     		ldr	r2, .L115+28
 1685 0280 3B69     		ldr	r3, [r7, #16]
 1686 0282 1344     		add	r3, r3, r2
 1687 0284 0A46     		mov	r2, r1
 1688 0286 1A70     		strb	r2, [r3]
 452:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1689              		.loc 1 452 0 discriminator 3
 1690 0288 3B69     		ldr	r3, [r7, #16]
 1691 028a 0133     		adds	r3, r3, #1
 1692 028c 3B61     		str	r3, [r7, #16]
 1693              	.L105:
 452:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1694              		.loc 1 452 0 is_stmt 0 discriminator 1
 1695 028e 3B69     		ldr	r3, [r7, #16]
 1696 0290 022B     		cmp	r3, #2
 1697 0292 E7D9     		bls	.L106
 1698 0294 80E0     		b	.L84
 1699              	.L98:
 455:.\Protocolo.c ****                 }
 456:.\Protocolo.c **** 			}else{
 457:.\Protocolo.c **** 				for(j=0;j<=bSale.money[0];j++){
 1700              		.loc 1 457 0 is_stmt 1
 1701 0296 0023     		movs	r3, #0
 1702 0298 3B61     		str	r3, [r7, #16]
 1703 029a 1EE0     		b	.L107
 1704              	.L116:
 1705              		.align	2
 1706              	.L115:
 1707 029c 00000000 		.word	bSale
 1708 02a0 00000000 		.word	RxPu
 1709 02a4 00000000 		.word	side
 1710 02a8 00000000 		.word	countImp
 1711 02ac 00000000 		.word	date
 1712 02b0 00000000 		.word	dateSale1
 1713 02b4 00000000 		.word	time
 1714 02b8 00000000 		.word	timeSale1
 1715              	.L108:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 40


 458:.\Protocolo.c **** 					side.b.money[j]=bSale.money[j];
 1716              		.loc 1 458 0 discriminator 3
 1717 02bc 384A     		ldr	r2, .L117
 1718 02be 3B69     		ldr	r3, [r7, #16]
 1719 02c0 1344     		add	r3, r3, r2
 1720 02c2 0833     		adds	r3, r3, #8
 1721 02c4 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1722 02c6 374A     		ldr	r2, .L117+4
 1723 02c8 3B69     		ldr	r3, [r7, #16]
 1724 02ca 1344     		add	r3, r3, r2
 1725 02cc 03F5D873 		add	r3, r3, #432
 1726 02d0 0A46     		mov	r2, r1
 1727 02d2 5A71     		strb	r2, [r3, #5]
 457:.\Protocolo.c **** 					side.b.money[j]=bSale.money[j];
 1728              		.loc 1 457 0 discriminator 3
 1729 02d4 3B69     		ldr	r3, [r7, #16]
 1730 02d6 0133     		adds	r3, r3, #1
 1731 02d8 3B61     		str	r3, [r7, #16]
 1732              	.L107:
 457:.\Protocolo.c **** 					side.b.money[j]=bSale.money[j];
 1733              		.loc 1 457 0 is_stmt 0 discriminator 1
 1734 02da 314B     		ldr	r3, .L117
 1735 02dc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1736 02de 1A46     		mov	r2, r3
 1737 02e0 3B69     		ldr	r3, [r7, #16]
 1738 02e2 9A42     		cmp	r2, r3
 1739 02e4 EAD2     		bcs	.L108
 459:.\Protocolo.c **** 				}
 460:.\Protocolo.c **** 				for(j=0;j<=bSale.volume[0];j++){
 1740              		.loc 1 460 0 is_stmt 1
 1741 02e6 0023     		movs	r3, #0
 1742 02e8 3B61     		str	r3, [r7, #16]
 1743 02ea 0EE0     		b	.L109
 1744              	.L110:
 461:.\Protocolo.c **** 					side.b.volume[j]=bSale.volume[j];
 1745              		.loc 1 461 0 discriminator 3
 1746 02ec 2C4A     		ldr	r2, .L117
 1747 02ee 3B69     		ldr	r3, [r7, #16]
 1748 02f0 1344     		add	r3, r3, r2
 1749 02f2 1833     		adds	r3, r3, #24
 1750 02f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1751 02f6 2B4A     		ldr	r2, .L117+4
 1752 02f8 3B69     		ldr	r3, [r7, #16]
 1753 02fa 1344     		add	r3, r3, r2
 1754 02fc 03F5E073 		add	r3, r3, #448
 1755 0300 0A46     		mov	r2, r1
 1756 0302 5A70     		strb	r2, [r3, #1]
 460:.\Protocolo.c **** 					side.b.volume[j]=bSale.volume[j];
 1757              		.loc 1 460 0 discriminator 3
 1758 0304 3B69     		ldr	r3, [r7, #16]
 1759 0306 0133     		adds	r3, r3, #1
 1760 0308 3B61     		str	r3, [r7, #16]
 1761              	.L109:
 460:.\Protocolo.c **** 					side.b.volume[j]=bSale.volume[j];
 1762              		.loc 1 460 0 is_stmt 0 discriminator 1
 1763 030a 254B     		ldr	r3, .L117
 1764 030c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 41


 1765 030e 1A46     		mov	r2, r3
 1766 0310 3B69     		ldr	r3, [r7, #16]
 1767 0312 9A42     		cmp	r2, r3
 1768 0314 EAD2     		bcs	.L110
 462:.\Protocolo.c **** 				}
 463:.\Protocolo.c **** 				for(j=0;j<=bSale.ppu[0];j++){
 1769              		.loc 1 463 0 is_stmt 1
 1770 0316 0023     		movs	r3, #0
 1771 0318 3B61     		str	r3, [r7, #16]
 1772 031a 0DE0     		b	.L111
 1773              	.L112:
 464:.\Protocolo.c **** 					side.b.ppu[j]=bSale.ppu[j];
 1774              		.loc 1 464 0 discriminator 3
 1775 031c 204A     		ldr	r2, .L117
 1776 031e 3B69     		ldr	r3, [r7, #16]
 1777 0320 1344     		add	r3, r3, r2
 1778 0322 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1779 0324 1F4A     		ldr	r2, .L117+4
 1780 0326 3B69     		ldr	r3, [r7, #16]
 1781 0328 1344     		add	r3, r3, r2
 1782 032a 03F5D473 		add	r3, r3, #424
 1783 032e 0A46     		mov	r2, r1
 1784 0330 DA70     		strb	r2, [r3, #3]
 463:.\Protocolo.c **** 					side.b.ppu[j]=bSale.ppu[j];
 1785              		.loc 1 463 0 discriminator 3
 1786 0332 3B69     		ldr	r3, [r7, #16]
 1787 0334 0133     		adds	r3, r3, #1
 1788 0336 3B61     		str	r3, [r7, #16]
 1789              	.L111:
 463:.\Protocolo.c **** 					side.b.ppu[j]=bSale.ppu[j];
 1790              		.loc 1 463 0 is_stmt 0 discriminator 1
 1791 0338 194B     		ldr	r3, .L117
 1792 033a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1793 033c 1A46     		mov	r2, r3
 1794 033e 3B69     		ldr	r3, [r7, #16]
 1795 0340 9A42     		cmp	r2, r3
 1796 0342 EBD2     		bcs	.L112
 465:.\Protocolo.c **** 				}	
 466:.\Protocolo.c ****                 side.b.product=bSale.product&0x07;
 1797              		.loc 1 466 0 is_stmt 1
 1798 0344 164B     		ldr	r3, .L117
 1799 0346 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1800 0348 03F00703 		and	r3, r3, #7
 1801 034c DAB2     		uxtb	r2, r3
 1802 034e 154B     		ldr	r3, .L117+4
 1803 0350 83F8AA21 		strb	r2, [r3, #426]
 467:.\Protocolo.c ****                 countImp[2]=0;
 1804              		.loc 1 467 0
 1805 0354 144B     		ldr	r3, .L117+8
 1806 0356 0022     		movs	r2, #0
 1807 0358 9A70     		strb	r2, [r3, #2]
 468:.\Protocolo.c ****                 read_date();
 1808              		.loc 1 468 0
 1809 035a FFF7FEFF 		bl	read_date
 469:.\Protocolo.c ****                 read_time();
 1810              		.loc 1 469 0
 1811 035e FFF7FEFF 		bl	read_time
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 42


 470:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1812              		.loc 1 470 0
 1813 0362 0023     		movs	r3, #0
 1814 0364 3B61     		str	r3, [r7, #16]
 1815 0366 14E0     		b	.L113
 1816              	.L114:
 471:.\Protocolo.c ****                     dateSale2[j]=date[j];
 1817              		.loc 1 471 0 discriminator 3
 1818 0368 104A     		ldr	r2, .L117+12
 1819 036a 3B69     		ldr	r3, [r7, #16]
 1820 036c 1344     		add	r3, r3, r2
 1821 036e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1822 0370 0F4A     		ldr	r2, .L117+16
 1823 0372 3B69     		ldr	r3, [r7, #16]
 1824 0374 1344     		add	r3, r3, r2
 1825 0376 0A46     		mov	r2, r1
 1826 0378 1A70     		strb	r2, [r3]
 472:.\Protocolo.c ****                     timeSale2[j]=time[j];
 1827              		.loc 1 472 0 discriminator 3
 1828 037a 0E4A     		ldr	r2, .L117+20
 1829 037c 3B69     		ldr	r3, [r7, #16]
 1830 037e 1344     		add	r3, r3, r2
 1831 0380 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1832 0382 0D4A     		ldr	r2, .L117+24
 1833 0384 3B69     		ldr	r3, [r7, #16]
 1834 0386 1344     		add	r3, r3, r2
 1835 0388 0A46     		mov	r2, r1
 1836 038a 1A70     		strb	r2, [r3]
 470:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1837              		.loc 1 470 0 discriminator 3
 1838 038c 3B69     		ldr	r3, [r7, #16]
 1839 038e 0133     		adds	r3, r3, #1
 1840 0390 3B61     		str	r3, [r7, #16]
 1841              	.L113:
 470:.\Protocolo.c ****                 for(j=0;j<=2;j++){
 1842              		.loc 1 470 0 is_stmt 0 discriminator 1
 1843 0392 3B69     		ldr	r3, [r7, #16]
 1844 0394 022B     		cmp	r3, #2
 1845 0396 E7D9     		bls	.L114
 1846              	.L84:
 473:.\Protocolo.c ****                 }
 474:.\Protocolo.c **** 			}
 475:.\Protocolo.c ****         }
 476:.\Protocolo.c ****     }
 477:.\Protocolo.c **** }
 1847              		.loc 1 477 0 is_stmt 1
 1848 0398 1837     		adds	r7, r7, #24
 1849              		.cfi_def_cfa_offset 8
 1850 039a BD46     		mov	sp, r7
 1851              		.cfi_def_cfa_register 13
 1852              		@ sp needed
 1853 039c 80BD     		pop	{r7, pc}
 1854              	.L118:
 1855 039e 00BF     		.align	2
 1856              	.L117:
 1857 03a0 00000000 		.word	bSale
 1858 03a4 00000000 		.word	side
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 43


 1859 03a8 00000000 		.word	countImp
 1860 03ac 00000000 		.word	date
 1861 03b0 00000000 		.word	dateSale2
 1862 03b4 00000000 		.word	time
 1863 03b8 00000000 		.word	timeSale2
 1864              		.cfi_endproc
 1865              	.LFE62:
 1866              		.size	sale, .-sale
 1867              		.section	.text.get_total,"ax",%progbits
 1868              		.align	2
 1869              		.global	get_total
 1870              		.thumb
 1871              		.thumb_func
 1872              		.type	get_total, %function
 1873              	get_total:
 1874              	.LFB63:
 478:.\Protocolo.c **** 
 479:.\Protocolo.c **** /*
 480:.\Protocolo.c **** ***************************************************************************************************
 481:.\Protocolo.c **** *                                         get_total(uint8 dir)
 482:.\Protocolo.c **** *
 483:.\Protocolo.c **** * Description : 
 484:.\Protocolo.c **** *               
 485:.\Protocolo.c **** *
 486:.\Protocolo.c **** * Argument(s) : none
 487:.\Protocolo.c **** *
 488:.\Protocolo.c **** * Return(s)   : none
 489:.\Protocolo.c **** *
 490:.\Protocolo.c **** * Caller(s)   : 
 491:.\Protocolo.c **** *
 492:.\Protocolo.c **** * Note(s)     : none.
 493:.\Protocolo.c **** ***************************************************************************************************
 494:.\Protocolo.c **** */
 495:.\Protocolo.c **** uint8 get_total(uint8 dir){
 1875              		.loc 1 495 0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 16
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 84B0     		sub	sp, sp, #16
 1884              		.cfi_def_cfa_offset 24
 1885 0004 00AF     		add	r7, sp, #0
 1886              		.cfi_def_cfa_register 7
 1887 0006 0346     		mov	r3, r0
 1888 0008 FB71     		strb	r3, [r7, #7]
 496:.\Protocolo.c ****     uint32 j,x;
 497:.\Protocolo.c ****     Pump_AL_PutChar(0x50|dir);
 1889              		.loc 1 497 0
 1890 000a FB79     		ldrb	r3, [r7, #7]
 1891 000c 43F05003 		orr	r3, r3, #80
 1892 0010 DBB2     		uxtb	r3, r3
 1893 0012 1846     		mov	r0, r3
 1894 0014 FFF7FEFF 		bl	Pump_AL_PutChar
 498:.\Protocolo.c ****     CyDelay(880);
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 44


 1895              		.loc 1 498 0
 1896 0018 4FF45C70 		mov	r0, #880
 1897 001c FFF7FEFF 		bl	CyDelay
 499:.\Protocolo.c **** 	if(dir==side.a.dir){
 1898              		.loc 1 499 0
 1899 0020 A44B     		ldr	r3, .L347
 1900 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1901 0024 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1902 0026 9A42     		cmp	r2, r3
 1903 0028 40F06487 		bne	.L120
 500:.\Protocolo.c ****         side.a.total[0]=Pump_AL_GetRxBufferSize();
 1904              		.loc 1 500 0
 1905 002c FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 1906 0030 0346     		mov	r3, r0
 1907 0032 DAB2     		uxtb	r2, r3
 1908 0034 9F4B     		ldr	r3, .L347
 1909 0036 83F86420 		strb	r2, [r3, #100]
 501:.\Protocolo.c ****         for(x=1;x<=side.a.total[0];x++){
 1910              		.loc 1 501 0
 1911 003a 0123     		movs	r3, #1
 1912 003c BB60     		str	r3, [r7, #8]
 1913 003e 0DE0     		b	.L121
 1914              	.L122:
 502:.\Protocolo.c ****             side.a.total[x]=Pump_AL_rxBuffer[x-1];
 1915              		.loc 1 502 0 discriminator 3
 1916 0040 BB68     		ldr	r3, [r7, #8]
 1917 0042 013B     		subs	r3, r3, #1
 1918 0044 9C4A     		ldr	r2, .L347+4
 1919 0046 D35C     		ldrb	r3, [r2, r3]
 1920 0048 D9B2     		uxtb	r1, r3
 1921 004a 9A4A     		ldr	r2, .L347
 1922 004c BB68     		ldr	r3, [r7, #8]
 1923 004e 1344     		add	r3, r3, r2
 1924 0050 6033     		adds	r3, r3, #96
 1925 0052 0A46     		mov	r2, r1
 1926 0054 1A71     		strb	r2, [r3, #4]
 501:.\Protocolo.c ****         for(x=1;x<=side.a.total[0];x++){
 1927              		.loc 1 501 0 discriminator 3
 1928 0056 BB68     		ldr	r3, [r7, #8]
 1929 0058 0133     		adds	r3, r3, #1
 1930 005a BB60     		str	r3, [r7, #8]
 1931              	.L121:
 501:.\Protocolo.c ****         for(x=1;x<=side.a.total[0];x++){
 1932              		.loc 1 501 0 is_stmt 0 discriminator 1
 1933 005c 954B     		ldr	r3, .L347
 1934 005e 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 1935 0062 1A46     		mov	r2, r3
 1936 0064 BB68     		ldr	r3, [r7, #8]
 1937 0066 9A42     		cmp	r2, r3
 1938 0068 EAD2     		bcs	.L122
 503:.\Protocolo.c ****         }
 504:.\Protocolo.c **** 		switch(side.a.total[0]){
 1939              		.loc 1 504 0 is_stmt 1
 1940 006a 924B     		ldr	r3, .L347
 1941 006c 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 1942 0070 402B     		cmp	r3, #64
 1943 0072 00F0BB80 		beq	.L124
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 45


 1944 0076 402B     		cmp	r3, #64
 1945 0078 06DC     		bgt	.L125
 1946 007a 222B     		cmp	r3, #34
 1947 007c 0FD0     		beq	.L126
 1948 007e 2E2B     		cmp	r3, #46
 1949 0080 00F09F83 		beq	.L127
 1950 0084 00F033BF 		b	.L123
 1951              	.L125:
 1952 0088 5E2B     		cmp	r3, #94
 1953 008a 00F0E281 		beq	.L128
 1954 008e 822B     		cmp	r3, #130
 1955 0090 00F07585 		beq	.L129
 1956 0094 582B     		cmp	r3, #88
 1957 0096 00F04084 		beq	.L130
 1958 009a 00F028BF 		b	.L123
 1959              	.L126:
 505:.\Protocolo.c **** 			case 34://5 digitos una manguera
 506:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[33]==0xF0)&&(Pum
 1960              		.loc 1 506 0
 1961 009e 864B     		ldr	r3, .L347+4
 1962 00a0 1B78     		ldrb	r3, [r3]
 1963 00a2 DBB2     		uxtb	r3, r3
 1964 00a4 FF2B     		cmp	r3, #255
 1965 00a6 40F09E80 		bne	.L131
 1966              		.loc 1 506 0 is_stmt 0 discriminator 1
 1967 00aa 834B     		ldr	r3, .L347+4
 1968 00ac 5B78     		ldrb	r3, [r3, #1]
 1969 00ae DBB2     		uxtb	r3, r3
 1970 00b0 F62B     		cmp	r3, #246
 1971 00b2 40F09880 		bne	.L131
 1972              		.loc 1 506 0 discriminator 2
 1973 00b6 804B     		ldr	r3, .L347+4
 1974 00b8 93F82130 		ldrb	r3, [r3, #33]
 1975 00bc DBB2     		uxtb	r3, r3
 1976 00be F02B     		cmp	r3, #240
 1977 00c0 40F09180 		bne	.L131
 1978              		.loc 1 506 0 discriminator 3
 1979 00c4 7C4B     		ldr	r3, .L347+4
 1980 00c6 DB78     		ldrb	r3, [r3, #3]
 1981 00c8 DBB2     		uxtb	r3, r3
 1982 00ca F92B     		cmp	r3, #249
 1983 00cc 40F08B80 		bne	.L131
 507:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=9;
 1984              		.loc 1 507 0 is_stmt 1
 1985 00d0 7A4B     		ldr	r3, .L347+8
 1986 00d2 0922     		movs	r2, #9
 1987 00d4 83F85D20 		strb	r2, [r3, #93]
 508:.\Protocolo.c **** 					j=9;
 1988              		.loc 1 508 0
 1989 00d8 0923     		movs	r3, #9
 1990 00da FB60     		str	r3, [r7, #12]
 509:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 1991              		.loc 1 509 0
 1992 00dc 0023     		movs	r3, #0
 1993 00de BB60     		str	r3, [r7, #8]
 1994 00e0 35E0     		b	.L132
 1995              	.L135:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 46


 510:.\Protocolo.c **** 						if(x==2){
 1996              		.loc 1 510 0
 1997 00e2 BB68     		ldr	r3, [r7, #8]
 1998 00e4 022B     		cmp	r3, #2
 1999 00e6 1CD1     		bne	.L133
 511:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 2000              		.loc 1 511 0
 2001 00e8 744A     		ldr	r2, .L347+8
 2002 00ea FB68     		ldr	r3, [r7, #12]
 2003 00ec 1344     		add	r3, r3, r2
 2004 00ee 5833     		adds	r3, r3, #88
 2005 00f0 2C22     		movs	r2, #44
 2006 00f2 5A71     		strb	r2, [r3, #5]
 512:.\Protocolo.c **** 							j--;
 2007              		.loc 1 512 0
 2008 00f4 FB68     		ldr	r3, [r7, #12]
 2009 00f6 013B     		subs	r3, r3, #1
 2010 00f8 FB60     		str	r3, [r7, #12]
 513:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 2011              		.loc 1 513 0
 2012 00fa BB68     		ldr	r3, [r7, #8]
 2013 00fc 0433     		adds	r3, r3, #4
 2014 00fe 6E4A     		ldr	r2, .L347+4
 2015 0100 D35C     		ldrb	r3, [r2, r3]
 2016 0102 DBB2     		uxtb	r3, r3
 2017 0104 03F00F03 		and	r3, r3, #15
 2018 0108 DBB2     		uxtb	r3, r3
 2019 010a 3033     		adds	r3, r3, #48
 2020 010c D9B2     		uxtb	r1, r3
 2021 010e 6B4A     		ldr	r2, .L347+8
 2022 0110 FB68     		ldr	r3, [r7, #12]
 2023 0112 1344     		add	r3, r3, r2
 2024 0114 5833     		adds	r3, r3, #88
 2025 0116 0A46     		mov	r2, r1
 2026 0118 5A71     		strb	r2, [r3, #5]
 514:.\Protocolo.c **** 							j--;
 2027              		.loc 1 514 0
 2028 011a FB68     		ldr	r3, [r7, #12]
 2029 011c 013B     		subs	r3, r3, #1
 2030 011e FB60     		str	r3, [r7, #12]
 2031 0120 12E0     		b	.L134
 2032              	.L133:
 515:.\Protocolo.c **** 						}else{
 516:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 2033              		.loc 1 516 0
 2034 0122 BB68     		ldr	r3, [r7, #8]
 2035 0124 0433     		adds	r3, r3, #4
 2036 0126 644A     		ldr	r2, .L347+4
 2037 0128 D35C     		ldrb	r3, [r2, r3]
 2038 012a DBB2     		uxtb	r3, r3
 2039 012c 03F00F03 		and	r3, r3, #15
 2040 0130 DBB2     		uxtb	r3, r3
 2041 0132 3033     		adds	r3, r3, #48
 2042 0134 D9B2     		uxtb	r1, r3
 2043 0136 614A     		ldr	r2, .L347+8
 2044 0138 FB68     		ldr	r3, [r7, #12]
 2045 013a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 47


 2046 013c 5833     		adds	r3, r3, #88
 2047 013e 0A46     		mov	r2, r1
 2048 0140 5A71     		strb	r2, [r3, #5]
 517:.\Protocolo.c **** 							j--;
 2049              		.loc 1 517 0
 2050 0142 FB68     		ldr	r3, [r7, #12]
 2051 0144 013B     		subs	r3, r3, #1
 2052 0146 FB60     		str	r3, [r7, #12]
 2053              	.L134:
 509:.\Protocolo.c **** 						if(x==2){
 2054              		.loc 1 509 0 discriminator 2
 2055 0148 BB68     		ldr	r3, [r7, #8]
 2056 014a 0133     		adds	r3, r3, #1
 2057 014c BB60     		str	r3, [r7, #8]
 2058              	.L132:
 509:.\Protocolo.c **** 						if(x==2){
 2059              		.loc 1 509 0 is_stmt 0 discriminator 1
 2060 014e BB68     		ldr	r3, [r7, #8]
 2061 0150 072B     		cmp	r3, #7
 2062 0152 C6D9     		bls	.L135
 518:.\Protocolo.c **** 						}
 519:.\Protocolo.c **** 					}
 520:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=8;
 2063              		.loc 1 520 0 is_stmt 1
 2064 0154 594B     		ldr	r3, .L347+8
 2065 0156 0822     		movs	r2, #8
 2066 0158 83F82120 		strb	r2, [r3, #33]
 521:.\Protocolo.c **** 					j=8;
 2067              		.loc 1 521 0
 2068 015c 0823     		movs	r3, #8
 2069 015e FB60     		str	r3, [r7, #12]
 522:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2070              		.loc 1 522 0
 2071 0160 0023     		movs	r3, #0
 2072 0162 BB60     		str	r3, [r7, #8]
 2073 0164 15E0     		b	.L136
 2074              	.L137:
 523:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[x+13]&0x0F)+0x30;
 2075              		.loc 1 523 0 discriminator 3
 2076 0166 BB68     		ldr	r3, [r7, #8]
 2077 0168 0D33     		adds	r3, r3, #13
 2078 016a 534A     		ldr	r2, .L347+4
 2079 016c D35C     		ldrb	r3, [r2, r3]
 2080 016e DBB2     		uxtb	r3, r3
 2081 0170 03F00F03 		and	r3, r3, #15
 2082 0174 DBB2     		uxtb	r3, r3
 2083 0176 3033     		adds	r3, r3, #48
 2084 0178 D9B2     		uxtb	r1, r3
 2085 017a 504A     		ldr	r2, .L347+8
 2086 017c FB68     		ldr	r3, [r7, #12]
 2087 017e 1344     		add	r3, r3, r2
 2088 0180 2033     		adds	r3, r3, #32
 2089 0182 0A46     		mov	r2, r1
 2090 0184 5A70     		strb	r2, [r3, #1]
 524:.\Protocolo.c **** 						j--;
 2091              		.loc 1 524 0 discriminator 3
 2092 0186 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 48


 2093 0188 013B     		subs	r3, r3, #1
 2094 018a FB60     		str	r3, [r7, #12]
 522:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2095              		.loc 1 522 0 discriminator 3
 2096 018c BB68     		ldr	r3, [r7, #8]
 2097 018e 0133     		adds	r3, r3, #1
 2098 0190 BB60     		str	r3, [r7, #8]
 2099              	.L136:
 522:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2100              		.loc 1 522 0 is_stmt 0 discriminator 1
 2101 0192 BB68     		ldr	r3, [r7, #8]
 2102 0194 072B     		cmp	r3, #7
 2103 0196 E6D9     		bls	.L137
 525:.\Protocolo.c **** 					}
 526:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=4;
 2104              		.loc 1 526 0 is_stmt 1
 2105 0198 484B     		ldr	r3, .L347+8
 2106 019a 0422     		movs	r2, #4
 2107 019c 83F89920 		strb	r2, [r3, #153]
 527:.\Protocolo.c ****                     j=4;
 2108              		.loc 1 527 0
 2109 01a0 0423     		movs	r3, #4
 2110 01a2 FB60     		str	r3, [r7, #12]
 528:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2111              		.loc 1 528 0
 2112 01a4 0023     		movs	r3, #0
 2113 01a6 BB60     		str	r3, [r7, #8]
 2114 01a8 15E0     		b	.L138
 2115              	.L139:
 529:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 2116              		.loc 1 529 0 discriminator 3
 2117 01aa BB68     		ldr	r3, [r7, #8]
 2118 01ac 1633     		adds	r3, r3, #22
 2119 01ae 424A     		ldr	r2, .L347+4
 2120 01b0 D35C     		ldrb	r3, [r2, r3]
 2121 01b2 DBB2     		uxtb	r3, r3
 2122 01b4 03F00F03 		and	r3, r3, #15
 2123 01b8 DBB2     		uxtb	r3, r3
 2124 01ba 3033     		adds	r3, r3, #48
 2125 01bc D9B2     		uxtb	r1, r3
 2126 01be 3F4A     		ldr	r2, .L347+8
 2127 01c0 FB68     		ldr	r3, [r7, #12]
 2128 01c2 1344     		add	r3, r3, r2
 2129 01c4 9833     		adds	r3, r3, #152
 2130 01c6 0A46     		mov	r2, r1
 2131 01c8 5A70     		strb	r2, [r3, #1]
 530:.\Protocolo.c ****                         j--;
 2132              		.loc 1 530 0 discriminator 3
 2133 01ca FB68     		ldr	r3, [r7, #12]
 2134 01cc 013B     		subs	r3, r3, #1
 2135 01ce FB60     		str	r3, [r7, #12]
 528:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2136              		.loc 1 528 0 discriminator 3
 2137 01d0 BB68     		ldr	r3, [r7, #8]
 2138 01d2 0133     		adds	r3, r3, #1
 2139 01d4 BB60     		str	r3, [r7, #8]
 2140              	.L138:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 49


 528:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2141              		.loc 1 528 0 is_stmt 0 discriminator 1
 2142 01d6 BB68     		ldr	r3, [r7, #8]
 2143 01d8 032B     		cmp	r3, #3
 2144 01da E6D9     		bls	.L139
 531:.\Protocolo.c ****                     }
 532:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 2145              		.loc 1 532 0 is_stmt 1
 2146 01dc FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 533:.\Protocolo.c **** 					return 1;
 2147              		.loc 1 533 0
 2148 01e0 0123     		movs	r3, #1
 2149 01e2 01F0F1BD 		b	.L140
 2150              	.L131:
 534:.\Protocolo.c **** 				}
 535:.\Protocolo.c **** 				else{
 536:.\Protocolo.c **** 					return 0;
 2151              		.loc 1 536 0
 2152 01e6 0023     		movs	r3, #0
 2153 01e8 01F0EEBD 		b	.L140
 2154              	.L124:
 537:.\Protocolo.c **** 				}
 538:.\Protocolo.c **** 			break;
 539:.\Protocolo.c **** 			
 540:.\Protocolo.c **** 			case 64://5 digitos dos mangueras
 541:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[63]==0xF0)&&(Pum
 2155              		.loc 1 541 0
 2156 01ec 324B     		ldr	r3, .L347+4
 2157 01ee 1B78     		ldrb	r3, [r3]
 2158 01f0 DBB2     		uxtb	r3, r3
 2159 01f2 FF2B     		cmp	r3, #255
 2160 01f4 40F02A81 		bne	.L141
 2161              		.loc 1 541 0 is_stmt 0 discriminator 1
 2162 01f8 2F4B     		ldr	r3, .L347+4
 2163 01fa 5B78     		ldrb	r3, [r3, #1]
 2164 01fc DBB2     		uxtb	r3, r3
 2165 01fe F62B     		cmp	r3, #246
 2166 0200 40F02481 		bne	.L141
 2167              		.loc 1 541 0 discriminator 2
 2168 0204 2C4B     		ldr	r3, .L347+4
 2169 0206 93F83F30 		ldrb	r3, [r3, #63]
 2170 020a DBB2     		uxtb	r3, r3
 2171 020c F02B     		cmp	r3, #240
 2172 020e 40F01D81 		bne	.L141
 2173              		.loc 1 541 0 discriminator 3
 2174 0212 294B     		ldr	r3, .L347+4
 2175 0214 DB78     		ldrb	r3, [r3, #3]
 2176 0216 DBB2     		uxtb	r3, r3
 2177 0218 F92B     		cmp	r3, #249
 2178 021a 40F01781 		bne	.L141
 542:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=9;
 2179              		.loc 1 542 0 is_stmt 1
 2180 021e 274B     		ldr	r3, .L347+8
 2181 0220 0922     		movs	r2, #9
 2182 0222 83F85D20 		strb	r2, [r3, #93]
 543:.\Protocolo.c **** 					j=9;
 2183              		.loc 1 543 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 50


 2184 0226 0923     		movs	r3, #9
 2185 0228 FB60     		str	r3, [r7, #12]
 544:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2186              		.loc 1 544 0
 2187 022a 0023     		movs	r3, #0
 2188 022c BB60     		str	r3, [r7, #8]
 2189 022e 35E0     		b	.L142
 2190              	.L145:
 545:.\Protocolo.c **** 						if(x==2){
 2191              		.loc 1 545 0
 2192 0230 BB68     		ldr	r3, [r7, #8]
 2193 0232 022B     		cmp	r3, #2
 2194 0234 1CD1     		bne	.L143
 546:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 2195              		.loc 1 546 0
 2196 0236 214A     		ldr	r2, .L347+8
 2197 0238 FB68     		ldr	r3, [r7, #12]
 2198 023a 1344     		add	r3, r3, r2
 2199 023c 5833     		adds	r3, r3, #88
 2200 023e 2C22     		movs	r2, #44
 2201 0240 5A71     		strb	r2, [r3, #5]
 547:.\Protocolo.c **** 							j--;
 2202              		.loc 1 547 0
 2203 0242 FB68     		ldr	r3, [r7, #12]
 2204 0244 013B     		subs	r3, r3, #1
 2205 0246 FB60     		str	r3, [r7, #12]
 548:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 2206              		.loc 1 548 0
 2207 0248 BB68     		ldr	r3, [r7, #8]
 2208 024a 0433     		adds	r3, r3, #4
 2209 024c 1A4A     		ldr	r2, .L347+4
 2210 024e D35C     		ldrb	r3, [r2, r3]
 2211 0250 DBB2     		uxtb	r3, r3
 2212 0252 03F00F03 		and	r3, r3, #15
 2213 0256 DBB2     		uxtb	r3, r3
 2214 0258 3033     		adds	r3, r3, #48
 2215 025a D9B2     		uxtb	r1, r3
 2216 025c 174A     		ldr	r2, .L347+8
 2217 025e FB68     		ldr	r3, [r7, #12]
 2218 0260 1344     		add	r3, r3, r2
 2219 0262 5833     		adds	r3, r3, #88
 2220 0264 0A46     		mov	r2, r1
 2221 0266 5A71     		strb	r2, [r3, #5]
 549:.\Protocolo.c **** 							j--;
 2222              		.loc 1 549 0
 2223 0268 FB68     		ldr	r3, [r7, #12]
 2224 026a 013B     		subs	r3, r3, #1
 2225 026c FB60     		str	r3, [r7, #12]
 2226 026e 12E0     		b	.L144
 2227              	.L143:
 550:.\Protocolo.c **** 						}else{
 551:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 2228              		.loc 1 551 0
 2229 0270 BB68     		ldr	r3, [r7, #8]
 2230 0272 0433     		adds	r3, r3, #4
 2231 0274 104A     		ldr	r2, .L347+4
 2232 0276 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 51


 2233 0278 DBB2     		uxtb	r3, r3
 2234 027a 03F00F03 		and	r3, r3, #15
 2235 027e DBB2     		uxtb	r3, r3
 2236 0280 3033     		adds	r3, r3, #48
 2237 0282 D9B2     		uxtb	r1, r3
 2238 0284 0D4A     		ldr	r2, .L347+8
 2239 0286 FB68     		ldr	r3, [r7, #12]
 2240 0288 1344     		add	r3, r3, r2
 2241 028a 5833     		adds	r3, r3, #88
 2242 028c 0A46     		mov	r2, r1
 2243 028e 5A71     		strb	r2, [r3, #5]
 552:.\Protocolo.c **** 							j--;
 2244              		.loc 1 552 0
 2245 0290 FB68     		ldr	r3, [r7, #12]
 2246 0292 013B     		subs	r3, r3, #1
 2247 0294 FB60     		str	r3, [r7, #12]
 2248              	.L144:
 544:.\Protocolo.c **** 						if(x==2){
 2249              		.loc 1 544 0 discriminator 2
 2250 0296 BB68     		ldr	r3, [r7, #8]
 2251 0298 0133     		adds	r3, r3, #1
 2252 029a BB60     		str	r3, [r7, #8]
 2253              	.L142:
 544:.\Protocolo.c **** 						if(x==2){
 2254              		.loc 1 544 0 is_stmt 0 discriminator 1
 2255 029c BB68     		ldr	r3, [r7, #8]
 2256 029e 072B     		cmp	r3, #7
 2257 02a0 C6D9     		bls	.L145
 553:.\Protocolo.c **** 						}
 554:.\Protocolo.c **** 					}
 555:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=8;
 2258              		.loc 1 555 0 is_stmt 1
 2259 02a2 064B     		ldr	r3, .L347+8
 2260 02a4 0822     		movs	r2, #8
 2261 02a6 83F82120 		strb	r2, [r3, #33]
 556:.\Protocolo.c **** 					j=8;
 2262              		.loc 1 556 0
 2263 02aa 0823     		movs	r3, #8
 2264 02ac FB60     		str	r3, [r7, #12]
 557:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2265              		.loc 1 557 0
 2266 02ae 0023     		movs	r3, #0
 2267 02b0 BB60     		str	r3, [r7, #8]
 2268 02b2 1BE0     		b	.L146
 2269              	.L348:
 2270              		.align	2
 2271              	.L347:
 2272 02b4 00000000 		.word	side
 2273 02b8 00000000 		.word	Pump_AL_rxBuffer
 2274 02bc 00000000 		.word	bufferLCD1
 2275              	.L147:
 558:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[13+x]&0x0F)+0x30;
 2276              		.loc 1 558 0 discriminator 3
 2277 02c0 BB68     		ldr	r3, [r7, #8]
 2278 02c2 0D33     		adds	r3, r3, #13
 2279 02c4 A64A     		ldr	r2, .L349
 2280 02c6 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 52


 2281 02c8 DBB2     		uxtb	r3, r3
 2282 02ca 03F00F03 		and	r3, r3, #15
 2283 02ce DBB2     		uxtb	r3, r3
 2284 02d0 3033     		adds	r3, r3, #48
 2285 02d2 D9B2     		uxtb	r1, r3
 2286 02d4 A34A     		ldr	r2, .L349+4
 2287 02d6 FB68     		ldr	r3, [r7, #12]
 2288 02d8 1344     		add	r3, r3, r2
 2289 02da 2033     		adds	r3, r3, #32
 2290 02dc 0A46     		mov	r2, r1
 2291 02de 5A70     		strb	r2, [r3, #1]
 559:.\Protocolo.c **** 						j--;
 2292              		.loc 1 559 0 discriminator 3
 2293 02e0 FB68     		ldr	r3, [r7, #12]
 2294 02e2 013B     		subs	r3, r3, #1
 2295 02e4 FB60     		str	r3, [r7, #12]
 557:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2296              		.loc 1 557 0 discriminator 3
 2297 02e6 BB68     		ldr	r3, [r7, #8]
 2298 02e8 0133     		adds	r3, r3, #1
 2299 02ea BB60     		str	r3, [r7, #8]
 2300              	.L146:
 557:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2301              		.loc 1 557 0 is_stmt 0 discriminator 1
 2302 02ec BB68     		ldr	r3, [r7, #8]
 2303 02ee 072B     		cmp	r3, #7
 2304 02f0 E6D9     		bls	.L147
 560:.\Protocolo.c **** 					}
 561:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=4;
 2305              		.loc 1 561 0 is_stmt 1
 2306 02f2 9C4B     		ldr	r3, .L349+4
 2307 02f4 0422     		movs	r2, #4
 2308 02f6 83F89920 		strb	r2, [r3, #153]
 562:.\Protocolo.c ****                     j=4;
 2309              		.loc 1 562 0
 2310 02fa 0423     		movs	r3, #4
 2311 02fc FB60     		str	r3, [r7, #12]
 563:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2312              		.loc 1 563 0
 2313 02fe 0023     		movs	r3, #0
 2314 0300 BB60     		str	r3, [r7, #8]
 2315 0302 15E0     		b	.L148
 2316              	.L149:
 564:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 2317              		.loc 1 564 0 discriminator 3
 2318 0304 BB68     		ldr	r3, [r7, #8]
 2319 0306 1633     		adds	r3, r3, #22
 2320 0308 954A     		ldr	r2, .L349
 2321 030a D35C     		ldrb	r3, [r2, r3]
 2322 030c DBB2     		uxtb	r3, r3
 2323 030e 03F00F03 		and	r3, r3, #15
 2324 0312 DBB2     		uxtb	r3, r3
 2325 0314 3033     		adds	r3, r3, #48
 2326 0316 D9B2     		uxtb	r1, r3
 2327 0318 924A     		ldr	r2, .L349+4
 2328 031a FB68     		ldr	r3, [r7, #12]
 2329 031c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 53


 2330 031e 9833     		adds	r3, r3, #152
 2331 0320 0A46     		mov	r2, r1
 2332 0322 5A70     		strb	r2, [r3, #1]
 565:.\Protocolo.c ****                         j--;
 2333              		.loc 1 565 0 discriminator 3
 2334 0324 FB68     		ldr	r3, [r7, #12]
 2335 0326 013B     		subs	r3, r3, #1
 2336 0328 FB60     		str	r3, [r7, #12]
 563:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2337              		.loc 1 563 0 discriminator 3
 2338 032a BB68     		ldr	r3, [r7, #8]
 2339 032c 0133     		adds	r3, r3, #1
 2340 032e BB60     		str	r3, [r7, #8]
 2341              	.L148:
 563:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2342              		.loc 1 563 0 is_stmt 0 discriminator 1
 2343 0330 BB68     		ldr	r3, [r7, #8]
 2344 0332 032B     		cmp	r3, #3
 2345 0334 E6D9     		bls	.L149
 566:.\Protocolo.c ****                     }
 567:.\Protocolo.c **** 					bufferLCD1.totalVolume2[0]=9;
 2346              		.loc 1 567 0 is_stmt 1
 2347 0336 8B4B     		ldr	r3, .L349+4
 2348 0338 0922     		movs	r2, #9
 2349 033a 83F87120 		strb	r2, [r3, #113]
 568:.\Protocolo.c **** 					j=9;
 2350              		.loc 1 568 0
 2351 033e 0923     		movs	r3, #9
 2352 0340 FB60     		str	r3, [r7, #12]
 569:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2353              		.loc 1 569 0
 2354 0342 0023     		movs	r3, #0
 2355 0344 BB60     		str	r3, [r7, #8]
 2356 0346 35E0     		b	.L150
 2357              	.L153:
 570:.\Protocolo.c **** 						if(x==2){
 2358              		.loc 1 570 0
 2359 0348 BB68     		ldr	r3, [r7, #8]
 2360 034a 022B     		cmp	r3, #2
 2361 034c 1CD1     		bne	.L151
 571:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=',';
 2362              		.loc 1 571 0
 2363 034e 854A     		ldr	r2, .L349+4
 2364 0350 FB68     		ldr	r3, [r7, #12]
 2365 0352 1344     		add	r3, r3, r2
 2366 0354 7033     		adds	r3, r3, #112
 2367 0356 2C22     		movs	r2, #44
 2368 0358 5A70     		strb	r2, [r3, #1]
 572:.\Protocolo.c **** 							j--;
 2369              		.loc 1 572 0
 2370 035a FB68     		ldr	r3, [r7, #12]
 2371 035c 013B     		subs	r3, r3, #1
 2372 035e FB60     		str	r3, [r7, #12]
 573:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 2373              		.loc 1 573 0
 2374 0360 BB68     		ldr	r3, [r7, #8]
 2375 0362 2233     		adds	r3, r3, #34
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 54


 2376 0364 7E4A     		ldr	r2, .L349
 2377 0366 D35C     		ldrb	r3, [r2, r3]
 2378 0368 DBB2     		uxtb	r3, r3
 2379 036a 03F00F03 		and	r3, r3, #15
 2380 036e DBB2     		uxtb	r3, r3
 2381 0370 3033     		adds	r3, r3, #48
 2382 0372 D9B2     		uxtb	r1, r3
 2383 0374 7B4A     		ldr	r2, .L349+4
 2384 0376 FB68     		ldr	r3, [r7, #12]
 2385 0378 1344     		add	r3, r3, r2
 2386 037a 7033     		adds	r3, r3, #112
 2387 037c 0A46     		mov	r2, r1
 2388 037e 5A70     		strb	r2, [r3, #1]
 574:.\Protocolo.c **** 							j--;
 2389              		.loc 1 574 0
 2390 0380 FB68     		ldr	r3, [r7, #12]
 2391 0382 013B     		subs	r3, r3, #1
 2392 0384 FB60     		str	r3, [r7, #12]
 2393 0386 12E0     		b	.L152
 2394              	.L151:
 575:.\Protocolo.c **** 						}else{
 576:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 2395              		.loc 1 576 0
 2396 0388 BB68     		ldr	r3, [r7, #8]
 2397 038a 2233     		adds	r3, r3, #34
 2398 038c 744A     		ldr	r2, .L349
 2399 038e D35C     		ldrb	r3, [r2, r3]
 2400 0390 DBB2     		uxtb	r3, r3
 2401 0392 03F00F03 		and	r3, r3, #15
 2402 0396 DBB2     		uxtb	r3, r3
 2403 0398 3033     		adds	r3, r3, #48
 2404 039a D9B2     		uxtb	r1, r3
 2405 039c 714A     		ldr	r2, .L349+4
 2406 039e FB68     		ldr	r3, [r7, #12]
 2407 03a0 1344     		add	r3, r3, r2
 2408 03a2 7033     		adds	r3, r3, #112
 2409 03a4 0A46     		mov	r2, r1
 2410 03a6 5A70     		strb	r2, [r3, #1]
 577:.\Protocolo.c **** 							j--;
 2411              		.loc 1 577 0
 2412 03a8 FB68     		ldr	r3, [r7, #12]
 2413 03aa 013B     		subs	r3, r3, #1
 2414 03ac FB60     		str	r3, [r7, #12]
 2415              	.L152:
 569:.\Protocolo.c **** 						if(x==2){
 2416              		.loc 1 569 0 discriminator 2
 2417 03ae BB68     		ldr	r3, [r7, #8]
 2418 03b0 0133     		adds	r3, r3, #1
 2419 03b2 BB60     		str	r3, [r7, #8]
 2420              	.L150:
 569:.\Protocolo.c **** 						if(x==2){
 2421              		.loc 1 569 0 is_stmt 0 discriminator 1
 2422 03b4 BB68     		ldr	r3, [r7, #8]
 2423 03b6 072B     		cmp	r3, #7
 2424 03b8 C6D9     		bls	.L153
 578:.\Protocolo.c **** 						}
 579:.\Protocolo.c **** 					}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 55


 580:.\Protocolo.c **** 					bufferLCD1.totalMoney2[0]=8;
 2425              		.loc 1 580 0 is_stmt 1
 2426 03ba 6A4B     		ldr	r3, .L349+4
 2427 03bc 0822     		movs	r2, #8
 2428 03be 83F83520 		strb	r2, [r3, #53]
 581:.\Protocolo.c **** 					j=8;
 2429              		.loc 1 581 0
 2430 03c2 0823     		movs	r3, #8
 2431 03c4 FB60     		str	r3, [r7, #12]
 582:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2432              		.loc 1 582 0
 2433 03c6 0023     		movs	r3, #0
 2434 03c8 BB60     		str	r3, [r7, #8]
 2435 03ca 15E0     		b	.L154
 2436              	.L155:
 583:.\Protocolo.c **** 						bufferLCD1.totalMoney2[j]=(Pump_AL_rxBuffer[43+x]&0x0F)+0x30;
 2437              		.loc 1 583 0 discriminator 3
 2438 03cc BB68     		ldr	r3, [r7, #8]
 2439 03ce 2B33     		adds	r3, r3, #43
 2440 03d0 634A     		ldr	r2, .L349
 2441 03d2 D35C     		ldrb	r3, [r2, r3]
 2442 03d4 DBB2     		uxtb	r3, r3
 2443 03d6 03F00F03 		and	r3, r3, #15
 2444 03da DBB2     		uxtb	r3, r3
 2445 03dc 3033     		adds	r3, r3, #48
 2446 03de D9B2     		uxtb	r1, r3
 2447 03e0 604A     		ldr	r2, .L349+4
 2448 03e2 FB68     		ldr	r3, [r7, #12]
 2449 03e4 1344     		add	r3, r3, r2
 2450 03e6 3033     		adds	r3, r3, #48
 2451 03e8 0A46     		mov	r2, r1
 2452 03ea 5A71     		strb	r2, [r3, #5]
 584:.\Protocolo.c **** 						j--;
 2453              		.loc 1 584 0 discriminator 3
 2454 03ec FB68     		ldr	r3, [r7, #12]
 2455 03ee 013B     		subs	r3, r3, #1
 2456 03f0 FB60     		str	r3, [r7, #12]
 582:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2457              		.loc 1 582 0 discriminator 3
 2458 03f2 BB68     		ldr	r3, [r7, #8]
 2459 03f4 0133     		adds	r3, r3, #1
 2460 03f6 BB60     		str	r3, [r7, #8]
 2461              	.L154:
 582:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2462              		.loc 1 582 0 is_stmt 0 discriminator 1
 2463 03f8 BB68     		ldr	r3, [r7, #8]
 2464 03fa 072B     		cmp	r3, #7
 2465 03fc E6D9     		bls	.L155
 585:.\Protocolo.c **** 					}
 586:.\Protocolo.c ****                     bufferLCD1.ppu2[0]=4;
 2466              		.loc 1 586 0 is_stmt 1
 2467 03fe 594B     		ldr	r3, .L349+4
 2468 0400 0422     		movs	r2, #4
 2469 0402 83F8A320 		strb	r2, [r3, #163]
 587:.\Protocolo.c ****                     j=4;
 2470              		.loc 1 587 0
 2471 0406 0423     		movs	r3, #4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 56


 2472 0408 FB60     		str	r3, [r7, #12]
 588:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2473              		.loc 1 588 0
 2474 040a 0023     		movs	r3, #0
 2475 040c BB60     		str	r3, [r7, #8]
 2476 040e 15E0     		b	.L156
 2477              	.L157:
 589:.\Protocolo.c ****                         bufferLCD1.ppu2[j]=(Pump_AL_rxBuffer[x+52]&0x0F)+0x30;
 2478              		.loc 1 589 0 discriminator 3
 2479 0410 BB68     		ldr	r3, [r7, #8]
 2480 0412 3433     		adds	r3, r3, #52
 2481 0414 524A     		ldr	r2, .L349
 2482 0416 D35C     		ldrb	r3, [r2, r3]
 2483 0418 DBB2     		uxtb	r3, r3
 2484 041a 03F00F03 		and	r3, r3, #15
 2485 041e DBB2     		uxtb	r3, r3
 2486 0420 3033     		adds	r3, r3, #48
 2487 0422 D9B2     		uxtb	r1, r3
 2488 0424 4F4A     		ldr	r2, .L349+4
 2489 0426 FB68     		ldr	r3, [r7, #12]
 2490 0428 1344     		add	r3, r3, r2
 2491 042a A033     		adds	r3, r3, #160
 2492 042c 0A46     		mov	r2, r1
 2493 042e DA70     		strb	r2, [r3, #3]
 590:.\Protocolo.c ****                         j--;
 2494              		.loc 1 590 0 discriminator 3
 2495 0430 FB68     		ldr	r3, [r7, #12]
 2496 0432 013B     		subs	r3, r3, #1
 2497 0434 FB60     		str	r3, [r7, #12]
 588:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2498              		.loc 1 588 0 discriminator 3
 2499 0436 BB68     		ldr	r3, [r7, #8]
 2500 0438 0133     		adds	r3, r3, #1
 2501 043a BB60     		str	r3, [r7, #8]
 2502              	.L156:
 588:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2503              		.loc 1 588 0 is_stmt 0 discriminator 1
 2504 043c BB68     		ldr	r3, [r7, #8]
 2505 043e 032B     		cmp	r3, #3
 2506 0440 E6D9     		bls	.L157
 591:.\Protocolo.c ****                     }
 592:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 2507              		.loc 1 592 0 is_stmt 1
 2508 0442 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 593:.\Protocolo.c **** 					return 2;
 2509              		.loc 1 593 0
 2510 0446 0223     		movs	r3, #2
 2511 0448 01F0BEBC 		b	.L140
 2512              	.L141:
 594:.\Protocolo.c **** 				}			
 595:.\Protocolo.c **** 				else{
 596:.\Protocolo.c **** 					return 0;
 2513              		.loc 1 596 0
 2514 044c 0023     		movs	r3, #0
 2515 044e 01F0BBBC 		b	.L140
 2516              	.L128:
 597:.\Protocolo.c **** 				}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 57


 598:.\Protocolo.c **** 			break;
 599:.\Protocolo.c **** 				
 600:.\Protocolo.c **** 			case 94://5 digitos tres mangueras
 601:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[93]==0xF0)&&(Pum
 2517              		.loc 1 601 0
 2518 0452 434B     		ldr	r3, .L349
 2519 0454 1B78     		ldrb	r3, [r3]
 2520 0456 DBB2     		uxtb	r3, r3
 2521 0458 FF2B     		cmp	r3, #255
 2522 045a 40F0AF81 		bne	.L158
 2523              		.loc 1 601 0 is_stmt 0 discriminator 1
 2524 045e 404B     		ldr	r3, .L349
 2525 0460 5B78     		ldrb	r3, [r3, #1]
 2526 0462 DBB2     		uxtb	r3, r3
 2527 0464 F62B     		cmp	r3, #246
 2528 0466 40F0A981 		bne	.L158
 2529              		.loc 1 601 0 discriminator 2
 2530 046a 3D4B     		ldr	r3, .L349
 2531 046c 93F85D30 		ldrb	r3, [r3, #93]
 2532 0470 DBB2     		uxtb	r3, r3
 2533 0472 F02B     		cmp	r3, #240
 2534 0474 40F0A281 		bne	.L158
 2535              		.loc 1 601 0 discriminator 3
 2536 0478 394B     		ldr	r3, .L349
 2537 047a DB78     		ldrb	r3, [r3, #3]
 2538 047c DBB2     		uxtb	r3, r3
 2539 047e F92B     		cmp	r3, #249
 2540 0480 40F09C81 		bne	.L158
 602:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=9;
 2541              		.loc 1 602 0 is_stmt 1
 2542 0484 374B     		ldr	r3, .L349+4
 2543 0486 0922     		movs	r2, #9
 2544 0488 83F85D20 		strb	r2, [r3, #93]
 603:.\Protocolo.c **** 					j=9;
 2545              		.loc 1 603 0
 2546 048c 0923     		movs	r3, #9
 2547 048e FB60     		str	r3, [r7, #12]
 604:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2548              		.loc 1 604 0
 2549 0490 0023     		movs	r3, #0
 2550 0492 BB60     		str	r3, [r7, #8]
 2551 0494 35E0     		b	.L159
 2552              	.L162:
 605:.\Protocolo.c **** 						if(x==2){
 2553              		.loc 1 605 0
 2554 0496 BB68     		ldr	r3, [r7, #8]
 2555 0498 022B     		cmp	r3, #2
 2556 049a 1CD1     		bne	.L160
 606:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 2557              		.loc 1 606 0
 2558 049c 314A     		ldr	r2, .L349+4
 2559 049e FB68     		ldr	r3, [r7, #12]
 2560 04a0 1344     		add	r3, r3, r2
 2561 04a2 5833     		adds	r3, r3, #88
 2562 04a4 2C22     		movs	r2, #44
 2563 04a6 5A71     		strb	r2, [r3, #5]
 607:.\Protocolo.c **** 							j--;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 58


 2564              		.loc 1 607 0
 2565 04a8 FB68     		ldr	r3, [r7, #12]
 2566 04aa 013B     		subs	r3, r3, #1
 2567 04ac FB60     		str	r3, [r7, #12]
 608:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 2568              		.loc 1 608 0
 2569 04ae BB68     		ldr	r3, [r7, #8]
 2570 04b0 0433     		adds	r3, r3, #4
 2571 04b2 2B4A     		ldr	r2, .L349
 2572 04b4 D35C     		ldrb	r3, [r2, r3]
 2573 04b6 DBB2     		uxtb	r3, r3
 2574 04b8 03F00F03 		and	r3, r3, #15
 2575 04bc DBB2     		uxtb	r3, r3
 2576 04be 3033     		adds	r3, r3, #48
 2577 04c0 D9B2     		uxtb	r1, r3
 2578 04c2 284A     		ldr	r2, .L349+4
 2579 04c4 FB68     		ldr	r3, [r7, #12]
 2580 04c6 1344     		add	r3, r3, r2
 2581 04c8 5833     		adds	r3, r3, #88
 2582 04ca 0A46     		mov	r2, r1
 2583 04cc 5A71     		strb	r2, [r3, #5]
 609:.\Protocolo.c **** 							j--;
 2584              		.loc 1 609 0
 2585 04ce FB68     		ldr	r3, [r7, #12]
 2586 04d0 013B     		subs	r3, r3, #1
 2587 04d2 FB60     		str	r3, [r7, #12]
 2588 04d4 12E0     		b	.L161
 2589              	.L160:
 610:.\Protocolo.c **** 						}else{
 611:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 2590              		.loc 1 611 0
 2591 04d6 BB68     		ldr	r3, [r7, #8]
 2592 04d8 0433     		adds	r3, r3, #4
 2593 04da 214A     		ldr	r2, .L349
 2594 04dc D35C     		ldrb	r3, [r2, r3]
 2595 04de DBB2     		uxtb	r3, r3
 2596 04e0 03F00F03 		and	r3, r3, #15
 2597 04e4 DBB2     		uxtb	r3, r3
 2598 04e6 3033     		adds	r3, r3, #48
 2599 04e8 D9B2     		uxtb	r1, r3
 2600 04ea 1E4A     		ldr	r2, .L349+4
 2601 04ec FB68     		ldr	r3, [r7, #12]
 2602 04ee 1344     		add	r3, r3, r2
 2603 04f0 5833     		adds	r3, r3, #88
 2604 04f2 0A46     		mov	r2, r1
 2605 04f4 5A71     		strb	r2, [r3, #5]
 612:.\Protocolo.c **** 							j--;
 2606              		.loc 1 612 0
 2607 04f6 FB68     		ldr	r3, [r7, #12]
 2608 04f8 013B     		subs	r3, r3, #1
 2609 04fa FB60     		str	r3, [r7, #12]
 2610              	.L161:
 604:.\Protocolo.c **** 						if(x==2){
 2611              		.loc 1 604 0 discriminator 2
 2612 04fc BB68     		ldr	r3, [r7, #8]
 2613 04fe 0133     		adds	r3, r3, #1
 2614 0500 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 59


 2615              	.L159:
 604:.\Protocolo.c **** 						if(x==2){
 2616              		.loc 1 604 0 is_stmt 0 discriminator 1
 2617 0502 BB68     		ldr	r3, [r7, #8]
 2618 0504 072B     		cmp	r3, #7
 2619 0506 C6D9     		bls	.L162
 613:.\Protocolo.c **** 						}
 614:.\Protocolo.c **** 					}
 615:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=8;
 2620              		.loc 1 615 0 is_stmt 1
 2621 0508 164B     		ldr	r3, .L349+4
 2622 050a 0822     		movs	r2, #8
 2623 050c 83F82120 		strb	r2, [r3, #33]
 616:.\Protocolo.c **** 					j=8;
 2624              		.loc 1 616 0
 2625 0510 0823     		movs	r3, #8
 2626 0512 FB60     		str	r3, [r7, #12]
 617:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2627              		.loc 1 617 0
 2628 0514 0023     		movs	r3, #0
 2629 0516 BB60     		str	r3, [r7, #8]
 2630 0518 15E0     		b	.L163
 2631              	.L164:
 618:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[13+x]&0x0F)+0x30;
 2632              		.loc 1 618 0 discriminator 3
 2633 051a BB68     		ldr	r3, [r7, #8]
 2634 051c 0D33     		adds	r3, r3, #13
 2635 051e 104A     		ldr	r2, .L349
 2636 0520 D35C     		ldrb	r3, [r2, r3]
 2637 0522 DBB2     		uxtb	r3, r3
 2638 0524 03F00F03 		and	r3, r3, #15
 2639 0528 DBB2     		uxtb	r3, r3
 2640 052a 3033     		adds	r3, r3, #48
 2641 052c D9B2     		uxtb	r1, r3
 2642 052e 0D4A     		ldr	r2, .L349+4
 2643 0530 FB68     		ldr	r3, [r7, #12]
 2644 0532 1344     		add	r3, r3, r2
 2645 0534 2033     		adds	r3, r3, #32
 2646 0536 0A46     		mov	r2, r1
 2647 0538 5A70     		strb	r2, [r3, #1]
 619:.\Protocolo.c **** 						j--;
 2648              		.loc 1 619 0 discriminator 3
 2649 053a FB68     		ldr	r3, [r7, #12]
 2650 053c 013B     		subs	r3, r3, #1
 2651 053e FB60     		str	r3, [r7, #12]
 617:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2652              		.loc 1 617 0 discriminator 3
 2653 0540 BB68     		ldr	r3, [r7, #8]
 2654 0542 0133     		adds	r3, r3, #1
 2655 0544 BB60     		str	r3, [r7, #8]
 2656              	.L163:
 617:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2657              		.loc 1 617 0 is_stmt 0 discriminator 1
 2658 0546 BB68     		ldr	r3, [r7, #8]
 2659 0548 072B     		cmp	r3, #7
 2660 054a E6D9     		bls	.L164
 620:.\Protocolo.c **** 					}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 60


 621:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=4;
 2661              		.loc 1 621 0 is_stmt 1
 2662 054c 054B     		ldr	r3, .L349+4
 2663 054e 0422     		movs	r2, #4
 2664 0550 83F89920 		strb	r2, [r3, #153]
 622:.\Protocolo.c ****                     j=4;
 2665              		.loc 1 622 0
 2666 0554 0423     		movs	r3, #4
 2667 0556 FB60     		str	r3, [r7, #12]
 623:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2668              		.loc 1 623 0
 2669 0558 0023     		movs	r3, #0
 2670 055a BB60     		str	r3, [r7, #8]
 2671 055c 1AE0     		b	.L165
 2672              	.L350:
 2673 055e 00BF     		.align	2
 2674              	.L349:
 2675 0560 00000000 		.word	Pump_AL_rxBuffer
 2676 0564 00000000 		.word	bufferLCD1
 2677              	.L166:
 624:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 2678              		.loc 1 624 0 discriminator 3
 2679 0568 BB68     		ldr	r3, [r7, #8]
 2680 056a 1633     		adds	r3, r3, #22
 2681 056c A64A     		ldr	r2, .L351
 2682 056e D35C     		ldrb	r3, [r2, r3]
 2683 0570 DBB2     		uxtb	r3, r3
 2684 0572 03F00F03 		and	r3, r3, #15
 2685 0576 DBB2     		uxtb	r3, r3
 2686 0578 3033     		adds	r3, r3, #48
 2687 057a D9B2     		uxtb	r1, r3
 2688 057c A34A     		ldr	r2, .L351+4
 2689 057e FB68     		ldr	r3, [r7, #12]
 2690 0580 1344     		add	r3, r3, r2
 2691 0582 9833     		adds	r3, r3, #152
 2692 0584 0A46     		mov	r2, r1
 2693 0586 5A70     		strb	r2, [r3, #1]
 625:.\Protocolo.c ****                         j--;
 2694              		.loc 1 625 0 discriminator 3
 2695 0588 FB68     		ldr	r3, [r7, #12]
 2696 058a 013B     		subs	r3, r3, #1
 2697 058c FB60     		str	r3, [r7, #12]
 623:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2698              		.loc 1 623 0 discriminator 3
 2699 058e BB68     		ldr	r3, [r7, #8]
 2700 0590 0133     		adds	r3, r3, #1
 2701 0592 BB60     		str	r3, [r7, #8]
 2702              	.L165:
 623:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2703              		.loc 1 623 0 is_stmt 0 discriminator 1
 2704 0594 BB68     		ldr	r3, [r7, #8]
 2705 0596 032B     		cmp	r3, #3
 2706 0598 E6D9     		bls	.L166
 626:.\Protocolo.c ****                     }
 627:.\Protocolo.c **** 					bufferLCD1.totalVolume2[0]=9;
 2707              		.loc 1 627 0 is_stmt 1
 2708 059a 9C4B     		ldr	r3, .L351+4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 61


 2709 059c 0922     		movs	r2, #9
 2710 059e 83F87120 		strb	r2, [r3, #113]
 628:.\Protocolo.c **** 					j=9;
 2711              		.loc 1 628 0
 2712 05a2 0923     		movs	r3, #9
 2713 05a4 FB60     		str	r3, [r7, #12]
 629:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2714              		.loc 1 629 0
 2715 05a6 0023     		movs	r3, #0
 2716 05a8 BB60     		str	r3, [r7, #8]
 2717 05aa 35E0     		b	.L167
 2718              	.L170:
 630:.\Protocolo.c **** 						if(x==2){
 2719              		.loc 1 630 0
 2720 05ac BB68     		ldr	r3, [r7, #8]
 2721 05ae 022B     		cmp	r3, #2
 2722 05b0 1CD1     		bne	.L168
 631:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=',';
 2723              		.loc 1 631 0
 2724 05b2 964A     		ldr	r2, .L351+4
 2725 05b4 FB68     		ldr	r3, [r7, #12]
 2726 05b6 1344     		add	r3, r3, r2
 2727 05b8 7033     		adds	r3, r3, #112
 2728 05ba 2C22     		movs	r2, #44
 2729 05bc 5A70     		strb	r2, [r3, #1]
 632:.\Protocolo.c **** 							j--;
 2730              		.loc 1 632 0
 2731 05be FB68     		ldr	r3, [r7, #12]
 2732 05c0 013B     		subs	r3, r3, #1
 2733 05c2 FB60     		str	r3, [r7, #12]
 633:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 2734              		.loc 1 633 0
 2735 05c4 BB68     		ldr	r3, [r7, #8]
 2736 05c6 2233     		adds	r3, r3, #34
 2737 05c8 8F4A     		ldr	r2, .L351
 2738 05ca D35C     		ldrb	r3, [r2, r3]
 2739 05cc DBB2     		uxtb	r3, r3
 2740 05ce 03F00F03 		and	r3, r3, #15
 2741 05d2 DBB2     		uxtb	r3, r3
 2742 05d4 3033     		adds	r3, r3, #48
 2743 05d6 D9B2     		uxtb	r1, r3
 2744 05d8 8C4A     		ldr	r2, .L351+4
 2745 05da FB68     		ldr	r3, [r7, #12]
 2746 05dc 1344     		add	r3, r3, r2
 2747 05de 7033     		adds	r3, r3, #112
 2748 05e0 0A46     		mov	r2, r1
 2749 05e2 5A70     		strb	r2, [r3, #1]
 634:.\Protocolo.c **** 							j--;
 2750              		.loc 1 634 0
 2751 05e4 FB68     		ldr	r3, [r7, #12]
 2752 05e6 013B     		subs	r3, r3, #1
 2753 05e8 FB60     		str	r3, [r7, #12]
 2754 05ea 12E0     		b	.L169
 2755              	.L168:
 635:.\Protocolo.c **** 						}else{
 636:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 2756              		.loc 1 636 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 62


 2757 05ec BB68     		ldr	r3, [r7, #8]
 2758 05ee 2233     		adds	r3, r3, #34
 2759 05f0 854A     		ldr	r2, .L351
 2760 05f2 D35C     		ldrb	r3, [r2, r3]
 2761 05f4 DBB2     		uxtb	r3, r3
 2762 05f6 03F00F03 		and	r3, r3, #15
 2763 05fa DBB2     		uxtb	r3, r3
 2764 05fc 3033     		adds	r3, r3, #48
 2765 05fe D9B2     		uxtb	r1, r3
 2766 0600 824A     		ldr	r2, .L351+4
 2767 0602 FB68     		ldr	r3, [r7, #12]
 2768 0604 1344     		add	r3, r3, r2
 2769 0606 7033     		adds	r3, r3, #112
 2770 0608 0A46     		mov	r2, r1
 2771 060a 5A70     		strb	r2, [r3, #1]
 637:.\Protocolo.c **** 							j--;
 2772              		.loc 1 637 0
 2773 060c FB68     		ldr	r3, [r7, #12]
 2774 060e 013B     		subs	r3, r3, #1
 2775 0610 FB60     		str	r3, [r7, #12]
 2776              	.L169:
 629:.\Protocolo.c **** 						if(x==2){
 2777              		.loc 1 629 0 discriminator 2
 2778 0612 BB68     		ldr	r3, [r7, #8]
 2779 0614 0133     		adds	r3, r3, #1
 2780 0616 BB60     		str	r3, [r7, #8]
 2781              	.L167:
 629:.\Protocolo.c **** 						if(x==2){
 2782              		.loc 1 629 0 is_stmt 0 discriminator 1
 2783 0618 BB68     		ldr	r3, [r7, #8]
 2784 061a 072B     		cmp	r3, #7
 2785 061c C6D9     		bls	.L170
 638:.\Protocolo.c **** 						}
 639:.\Protocolo.c **** 					}
 640:.\Protocolo.c **** 					bufferLCD1.totalMoney2[0]=8;
 2786              		.loc 1 640 0 is_stmt 1
 2787 061e 7B4B     		ldr	r3, .L351+4
 2788 0620 0822     		movs	r2, #8
 2789 0622 83F83520 		strb	r2, [r3, #53]
 641:.\Protocolo.c **** 					j=8;
 2790              		.loc 1 641 0
 2791 0626 0823     		movs	r3, #8
 2792 0628 FB60     		str	r3, [r7, #12]
 642:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2793              		.loc 1 642 0
 2794 062a 0023     		movs	r3, #0
 2795 062c BB60     		str	r3, [r7, #8]
 2796 062e 15E0     		b	.L171
 2797              	.L172:
 643:.\Protocolo.c **** 						bufferLCD1.totalMoney2[j]=(Pump_AL_rxBuffer[43+x]&0x0F)+0x30;
 2798              		.loc 1 643 0 discriminator 3
 2799 0630 BB68     		ldr	r3, [r7, #8]
 2800 0632 2B33     		adds	r3, r3, #43
 2801 0634 744A     		ldr	r2, .L351
 2802 0636 D35C     		ldrb	r3, [r2, r3]
 2803 0638 DBB2     		uxtb	r3, r3
 2804 063a 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 63


 2805 063e DBB2     		uxtb	r3, r3
 2806 0640 3033     		adds	r3, r3, #48
 2807 0642 D9B2     		uxtb	r1, r3
 2808 0644 714A     		ldr	r2, .L351+4
 2809 0646 FB68     		ldr	r3, [r7, #12]
 2810 0648 1344     		add	r3, r3, r2
 2811 064a 3033     		adds	r3, r3, #48
 2812 064c 0A46     		mov	r2, r1
 2813 064e 5A71     		strb	r2, [r3, #5]
 644:.\Protocolo.c **** 						j--;
 2814              		.loc 1 644 0 discriminator 3
 2815 0650 FB68     		ldr	r3, [r7, #12]
 2816 0652 013B     		subs	r3, r3, #1
 2817 0654 FB60     		str	r3, [r7, #12]
 642:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2818              		.loc 1 642 0 discriminator 3
 2819 0656 BB68     		ldr	r3, [r7, #8]
 2820 0658 0133     		adds	r3, r3, #1
 2821 065a BB60     		str	r3, [r7, #8]
 2822              	.L171:
 642:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2823              		.loc 1 642 0 is_stmt 0 discriminator 1
 2824 065c BB68     		ldr	r3, [r7, #8]
 2825 065e 072B     		cmp	r3, #7
 2826 0660 E6D9     		bls	.L172
 645:.\Protocolo.c **** 					}
 646:.\Protocolo.c ****                     bufferLCD1.ppu2[0]=4;
 2827              		.loc 1 646 0 is_stmt 1
 2828 0662 6A4B     		ldr	r3, .L351+4
 2829 0664 0422     		movs	r2, #4
 2830 0666 83F8A320 		strb	r2, [r3, #163]
 647:.\Protocolo.c ****                     j=4;
 2831              		.loc 1 647 0
 2832 066a 0423     		movs	r3, #4
 2833 066c FB60     		str	r3, [r7, #12]
 648:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2834              		.loc 1 648 0
 2835 066e 0023     		movs	r3, #0
 2836 0670 BB60     		str	r3, [r7, #8]
 2837 0672 15E0     		b	.L173
 2838              	.L174:
 649:.\Protocolo.c ****                         bufferLCD1.ppu2[j]=(Pump_AL_rxBuffer[x+52]&0x0F)+0x30;
 2839              		.loc 1 649 0 discriminator 3
 2840 0674 BB68     		ldr	r3, [r7, #8]
 2841 0676 3433     		adds	r3, r3, #52
 2842 0678 634A     		ldr	r2, .L351
 2843 067a D35C     		ldrb	r3, [r2, r3]
 2844 067c DBB2     		uxtb	r3, r3
 2845 067e 03F00F03 		and	r3, r3, #15
 2846 0682 DBB2     		uxtb	r3, r3
 2847 0684 3033     		adds	r3, r3, #48
 2848 0686 D9B2     		uxtb	r1, r3
 2849 0688 604A     		ldr	r2, .L351+4
 2850 068a FB68     		ldr	r3, [r7, #12]
 2851 068c 1344     		add	r3, r3, r2
 2852 068e A033     		adds	r3, r3, #160
 2853 0690 0A46     		mov	r2, r1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 64


 2854 0692 DA70     		strb	r2, [r3, #3]
 650:.\Protocolo.c ****                         j--;
 2855              		.loc 1 650 0 discriminator 3
 2856 0694 FB68     		ldr	r3, [r7, #12]
 2857 0696 013B     		subs	r3, r3, #1
 2858 0698 FB60     		str	r3, [r7, #12]
 648:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2859              		.loc 1 648 0 discriminator 3
 2860 069a BB68     		ldr	r3, [r7, #8]
 2861 069c 0133     		adds	r3, r3, #1
 2862 069e BB60     		str	r3, [r7, #8]
 2863              	.L173:
 648:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 2864              		.loc 1 648 0 is_stmt 0 discriminator 1
 2865 06a0 BB68     		ldr	r3, [r7, #8]
 2866 06a2 032B     		cmp	r3, #3
 2867 06a4 E6D9     		bls	.L174
 651:.\Protocolo.c ****                     }
 652:.\Protocolo.c **** 					bufferLCD1.totalVolume3[0]=9;
 2868              		.loc 1 652 0 is_stmt 1
 2869 06a6 594B     		ldr	r3, .L351+4
 2870 06a8 0922     		movs	r2, #9
 2871 06aa 83F88520 		strb	r2, [r3, #133]
 653:.\Protocolo.c **** 					j=9;
 2872              		.loc 1 653 0
 2873 06ae 0923     		movs	r3, #9
 2874 06b0 FB60     		str	r3, [r7, #12]
 654:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2875              		.loc 1 654 0
 2876 06b2 0023     		movs	r3, #0
 2877 06b4 BB60     		str	r3, [r7, #8]
 2878 06b6 35E0     		b	.L175
 2879              	.L178:
 655:.\Protocolo.c **** 						if(x==2){
 2880              		.loc 1 655 0
 2881 06b8 BB68     		ldr	r3, [r7, #8]
 2882 06ba 022B     		cmp	r3, #2
 2883 06bc 1CD1     		bne	.L176
 656:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=',';
 2884              		.loc 1 656 0
 2885 06be 534A     		ldr	r2, .L351+4
 2886 06c0 FB68     		ldr	r3, [r7, #12]
 2887 06c2 1344     		add	r3, r3, r2
 2888 06c4 8033     		adds	r3, r3, #128
 2889 06c6 2C22     		movs	r2, #44
 2890 06c8 5A71     		strb	r2, [r3, #5]
 657:.\Protocolo.c **** 							j--;
 2891              		.loc 1 657 0
 2892 06ca FB68     		ldr	r3, [r7, #12]
 2893 06cc 013B     		subs	r3, r3, #1
 2894 06ce FB60     		str	r3, [r7, #12]
 658:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=(Pump_AL_rxBuffer[64+x]&0x0F)+0x30;
 2895              		.loc 1 658 0
 2896 06d0 BB68     		ldr	r3, [r7, #8]
 2897 06d2 4033     		adds	r3, r3, #64
 2898 06d4 4C4A     		ldr	r2, .L351
 2899 06d6 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 65


 2900 06d8 DBB2     		uxtb	r3, r3
 2901 06da 03F00F03 		and	r3, r3, #15
 2902 06de DBB2     		uxtb	r3, r3
 2903 06e0 3033     		adds	r3, r3, #48
 2904 06e2 D9B2     		uxtb	r1, r3
 2905 06e4 494A     		ldr	r2, .L351+4
 2906 06e6 FB68     		ldr	r3, [r7, #12]
 2907 06e8 1344     		add	r3, r3, r2
 2908 06ea 8033     		adds	r3, r3, #128
 2909 06ec 0A46     		mov	r2, r1
 2910 06ee 5A71     		strb	r2, [r3, #5]
 659:.\Protocolo.c **** 							j--;
 2911              		.loc 1 659 0
 2912 06f0 FB68     		ldr	r3, [r7, #12]
 2913 06f2 013B     		subs	r3, r3, #1
 2914 06f4 FB60     		str	r3, [r7, #12]
 2915 06f6 12E0     		b	.L177
 2916              	.L176:
 660:.\Protocolo.c **** 						}else{
 661:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=(Pump_AL_rxBuffer[64+x]&0x0F)+0x30;
 2917              		.loc 1 661 0
 2918 06f8 BB68     		ldr	r3, [r7, #8]
 2919 06fa 4033     		adds	r3, r3, #64
 2920 06fc 424A     		ldr	r2, .L351
 2921 06fe D35C     		ldrb	r3, [r2, r3]
 2922 0700 DBB2     		uxtb	r3, r3
 2923 0702 03F00F03 		and	r3, r3, #15
 2924 0706 DBB2     		uxtb	r3, r3
 2925 0708 3033     		adds	r3, r3, #48
 2926 070a D9B2     		uxtb	r1, r3
 2927 070c 3F4A     		ldr	r2, .L351+4
 2928 070e FB68     		ldr	r3, [r7, #12]
 2929 0710 1344     		add	r3, r3, r2
 2930 0712 8033     		adds	r3, r3, #128
 2931 0714 0A46     		mov	r2, r1
 2932 0716 5A71     		strb	r2, [r3, #5]
 662:.\Protocolo.c **** 							j--;
 2933              		.loc 1 662 0
 2934 0718 FB68     		ldr	r3, [r7, #12]
 2935 071a 013B     		subs	r3, r3, #1
 2936 071c FB60     		str	r3, [r7, #12]
 2937              	.L177:
 654:.\Protocolo.c **** 						if(x==2){
 2938              		.loc 1 654 0 discriminator 2
 2939 071e BB68     		ldr	r3, [r7, #8]
 2940 0720 0133     		adds	r3, r3, #1
 2941 0722 BB60     		str	r3, [r7, #8]
 2942              	.L175:
 654:.\Protocolo.c **** 						if(x==2){
 2943              		.loc 1 654 0 is_stmt 0 discriminator 1
 2944 0724 BB68     		ldr	r3, [r7, #8]
 2945 0726 072B     		cmp	r3, #7
 2946 0728 C6D9     		bls	.L178
 663:.\Protocolo.c **** 						}
 664:.\Protocolo.c **** 					}
 665:.\Protocolo.c **** 					bufferLCD1.totalMoney3[0]=8;
 2947              		.loc 1 665 0 is_stmt 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 66


 2948 072a 384B     		ldr	r3, .L351+4
 2949 072c 0822     		movs	r2, #8
 2950 072e 83F84920 		strb	r2, [r3, #73]
 666:.\Protocolo.c **** 					j=8;
 2951              		.loc 1 666 0
 2952 0732 0823     		movs	r3, #8
 2953 0734 FB60     		str	r3, [r7, #12]
 667:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2954              		.loc 1 667 0
 2955 0736 0023     		movs	r3, #0
 2956 0738 BB60     		str	r3, [r7, #8]
 2957 073a 15E0     		b	.L179
 2958              	.L180:
 668:.\Protocolo.c **** 						bufferLCD1.totalMoney3[j]=(Pump_AL_rxBuffer[73+x]&0x0F)+0x30;
 2959              		.loc 1 668 0 discriminator 3
 2960 073c BB68     		ldr	r3, [r7, #8]
 2961 073e 4933     		adds	r3, r3, #73
 2962 0740 314A     		ldr	r2, .L351
 2963 0742 D35C     		ldrb	r3, [r2, r3]
 2964 0744 DBB2     		uxtb	r3, r3
 2965 0746 03F00F03 		and	r3, r3, #15
 2966 074a DBB2     		uxtb	r3, r3
 2967 074c 3033     		adds	r3, r3, #48
 2968 074e D9B2     		uxtb	r1, r3
 2969 0750 2E4A     		ldr	r2, .L351+4
 2970 0752 FB68     		ldr	r3, [r7, #12]
 2971 0754 1344     		add	r3, r3, r2
 2972 0756 4833     		adds	r3, r3, #72
 2973 0758 0A46     		mov	r2, r1
 2974 075a 5A70     		strb	r2, [r3, #1]
 669:.\Protocolo.c **** 						j--;
 2975              		.loc 1 669 0 discriminator 3
 2976 075c FB68     		ldr	r3, [r7, #12]
 2977 075e 013B     		subs	r3, r3, #1
 2978 0760 FB60     		str	r3, [r7, #12]
 667:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2979              		.loc 1 667 0 discriminator 3
 2980 0762 BB68     		ldr	r3, [r7, #8]
 2981 0764 0133     		adds	r3, r3, #1
 2982 0766 BB60     		str	r3, [r7, #8]
 2983              	.L179:
 667:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 2984              		.loc 1 667 0 is_stmt 0 discriminator 1
 2985 0768 BB68     		ldr	r3, [r7, #8]
 2986 076a 072B     		cmp	r3, #7
 2987 076c E6D9     		bls	.L180
 670:.\Protocolo.c **** 					}
 671:.\Protocolo.c ****                     bufferLCD1.ppu3[0]=4;
 2988              		.loc 1 671 0 is_stmt 1
 2989 076e 274B     		ldr	r3, .L351+4
 2990 0770 0422     		movs	r2, #4
 2991 0772 83F8AD20 		strb	r2, [r3, #173]
 672:.\Protocolo.c ****                     j=4;
 2992              		.loc 1 672 0
 2993 0776 0423     		movs	r3, #4
 2994 0778 FB60     		str	r3, [r7, #12]
 673:.\Protocolo.c ****                     for(x=0;x<=3;x++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 67


 2995              		.loc 1 673 0
 2996 077a 0023     		movs	r3, #0
 2997 077c BB60     		str	r3, [r7, #8]
 2998 077e 15E0     		b	.L181
 2999              	.L182:
 674:.\Protocolo.c ****                         bufferLCD1.ppu3[j]=(Pump_AL_rxBuffer[x+82]&0x0F)+0x30;
 3000              		.loc 1 674 0 discriminator 3
 3001 0780 BB68     		ldr	r3, [r7, #8]
 3002 0782 5233     		adds	r3, r3, #82
 3003 0784 204A     		ldr	r2, .L351
 3004 0786 D35C     		ldrb	r3, [r2, r3]
 3005 0788 DBB2     		uxtb	r3, r3
 3006 078a 03F00F03 		and	r3, r3, #15
 3007 078e DBB2     		uxtb	r3, r3
 3008 0790 3033     		adds	r3, r3, #48
 3009 0792 D9B2     		uxtb	r1, r3
 3010 0794 1D4A     		ldr	r2, .L351+4
 3011 0796 FB68     		ldr	r3, [r7, #12]
 3012 0798 1344     		add	r3, r3, r2
 3013 079a A833     		adds	r3, r3, #168
 3014 079c 0A46     		mov	r2, r1
 3015 079e 5A71     		strb	r2, [r3, #5]
 675:.\Protocolo.c ****                         j--;
 3016              		.loc 1 675 0 discriminator 3
 3017 07a0 FB68     		ldr	r3, [r7, #12]
 3018 07a2 013B     		subs	r3, r3, #1
 3019 07a4 FB60     		str	r3, [r7, #12]
 673:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 3020              		.loc 1 673 0 discriminator 3
 3021 07a6 BB68     		ldr	r3, [r7, #8]
 3022 07a8 0133     		adds	r3, r3, #1
 3023 07aa BB60     		str	r3, [r7, #8]
 3024              	.L181:
 673:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 3025              		.loc 1 673 0 is_stmt 0 discriminator 1
 3026 07ac BB68     		ldr	r3, [r7, #8]
 3027 07ae 032B     		cmp	r3, #3
 3028 07b0 E6D9     		bls	.L182
 676:.\Protocolo.c ****                     }
 677:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 3029              		.loc 1 677 0 is_stmt 1
 3030 07b2 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 678:.\Protocolo.c **** 					return 3;					
 3031              		.loc 1 678 0
 3032 07b6 0323     		movs	r3, #3
 3033 07b8 01F006BB 		b	.L140
 3034              	.L158:
 679:.\Protocolo.c **** 				}			
 680:.\Protocolo.c **** 				else{
 681:.\Protocolo.c **** 					return 0;
 3035              		.loc 1 681 0
 3036 07bc 0023     		movs	r3, #0
 3037 07be 01F003BB 		b	.L140
 3038              	.L127:
 682:.\Protocolo.c **** 				}			
 683:.\Protocolo.c **** 			break;
 684:.\Protocolo.c **** 				
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 68


 685:.\Protocolo.c **** 			case 46://7 digitos una manguera
 686:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[45]==0xF0)&&(Pum
 3039              		.loc 1 686 0
 3040 07c2 114B     		ldr	r3, .L351
 3041 07c4 1B78     		ldrb	r3, [r3]
 3042 07c6 DBB2     		uxtb	r3, r3
 3043 07c8 FF2B     		cmp	r3, #255
 3044 07ca 40F0A380 		bne	.L183
 3045              		.loc 1 686 0 is_stmt 0 discriminator 1
 3046 07ce 0E4B     		ldr	r3, .L351
 3047 07d0 5B78     		ldrb	r3, [r3, #1]
 3048 07d2 DBB2     		uxtb	r3, r3
 3049 07d4 F62B     		cmp	r3, #246
 3050 07d6 40F09D80 		bne	.L183
 3051              		.loc 1 686 0 discriminator 2
 3052 07da 0B4B     		ldr	r3, .L351
 3053 07dc 93F82D30 		ldrb	r3, [r3, #45]
 3054 07e0 DBB2     		uxtb	r3, r3
 3055 07e2 F02B     		cmp	r3, #240
 3056 07e4 40F09680 		bne	.L183
 3057              		.loc 1 686 0 discriminator 3
 3058 07e8 074B     		ldr	r3, .L351
 3059 07ea DB78     		ldrb	r3, [r3, #3]
 3060 07ec DBB2     		uxtb	r3, r3
 3061 07ee F92B     		cmp	r3, #249
 3062 07f0 40F09080 		bne	.L183
 687:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=13;
 3063              		.loc 1 687 0 is_stmt 1
 3064 07f4 054B     		ldr	r3, .L351+4
 3065 07f6 0D22     		movs	r2, #13
 3066 07f8 83F85D20 		strb	r2, [r3, #93]
 688:.\Protocolo.c **** 					j=13;
 3067              		.loc 1 688 0
 3068 07fc 0D23     		movs	r3, #13
 3069 07fe FB60     		str	r3, [r7, #12]
 689:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3070              		.loc 1 689 0
 3071 0800 0023     		movs	r3, #0
 3072 0802 BB60     		str	r3, [r7, #8]
 3073 0804 3AE0     		b	.L184
 3074              	.L352:
 3075 0806 00BF     		.align	2
 3076              	.L351:
 3077 0808 00000000 		.word	Pump_AL_rxBuffer
 3078 080c 00000000 		.word	bufferLCD1
 3079              	.L187:
 690:.\Protocolo.c **** 						if(x==2){
 3080              		.loc 1 690 0
 3081 0810 BB68     		ldr	r3, [r7, #8]
 3082 0812 022B     		cmp	r3, #2
 3083 0814 1CD1     		bne	.L185
 691:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 3084              		.loc 1 691 0
 3085 0816 A54A     		ldr	r2, .L353
 3086 0818 FB68     		ldr	r3, [r7, #12]
 3087 081a 1344     		add	r3, r3, r2
 3088 081c 5833     		adds	r3, r3, #88
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 69


 3089 081e 2C22     		movs	r2, #44
 3090 0820 5A71     		strb	r2, [r3, #5]
 692:.\Protocolo.c **** 							j--;
 3091              		.loc 1 692 0
 3092 0822 FB68     		ldr	r3, [r7, #12]
 3093 0824 013B     		subs	r3, r3, #1
 3094 0826 FB60     		str	r3, [r7, #12]
 693:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 3095              		.loc 1 693 0
 3096 0828 BB68     		ldr	r3, [r7, #8]
 3097 082a 0433     		adds	r3, r3, #4
 3098 082c A04A     		ldr	r2, .L353+4
 3099 082e D35C     		ldrb	r3, [r2, r3]
 3100 0830 DBB2     		uxtb	r3, r3
 3101 0832 03F00F03 		and	r3, r3, #15
 3102 0836 DBB2     		uxtb	r3, r3
 3103 0838 3033     		adds	r3, r3, #48
 3104 083a D9B2     		uxtb	r1, r3
 3105 083c 9B4A     		ldr	r2, .L353
 3106 083e FB68     		ldr	r3, [r7, #12]
 3107 0840 1344     		add	r3, r3, r2
 3108 0842 5833     		adds	r3, r3, #88
 3109 0844 0A46     		mov	r2, r1
 3110 0846 5A71     		strb	r2, [r3, #5]
 694:.\Protocolo.c **** 							j--;
 3111              		.loc 1 694 0
 3112 0848 FB68     		ldr	r3, [r7, #12]
 3113 084a 013B     		subs	r3, r3, #1
 3114 084c FB60     		str	r3, [r7, #12]
 3115 084e 12E0     		b	.L186
 3116              	.L185:
 695:.\Protocolo.c **** 						}else{
 696:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 3117              		.loc 1 696 0
 3118 0850 BB68     		ldr	r3, [r7, #8]
 3119 0852 0433     		adds	r3, r3, #4
 3120 0854 964A     		ldr	r2, .L353+4
 3121 0856 D35C     		ldrb	r3, [r2, r3]
 3122 0858 DBB2     		uxtb	r3, r3
 3123 085a 03F00F03 		and	r3, r3, #15
 3124 085e DBB2     		uxtb	r3, r3
 3125 0860 3033     		adds	r3, r3, #48
 3126 0862 D9B2     		uxtb	r1, r3
 3127 0864 914A     		ldr	r2, .L353
 3128 0866 FB68     		ldr	r3, [r7, #12]
 3129 0868 1344     		add	r3, r3, r2
 3130 086a 5833     		adds	r3, r3, #88
 3131 086c 0A46     		mov	r2, r1
 3132 086e 5A71     		strb	r2, [r3, #5]
 697:.\Protocolo.c **** 							j--;
 3133              		.loc 1 697 0
 3134 0870 FB68     		ldr	r3, [r7, #12]
 3135 0872 013B     		subs	r3, r3, #1
 3136 0874 FB60     		str	r3, [r7, #12]
 3137              	.L186:
 689:.\Protocolo.c **** 						if(x==2){
 3138              		.loc 1 689 0 discriminator 2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 70


 3139 0876 BB68     		ldr	r3, [r7, #8]
 3140 0878 0133     		adds	r3, r3, #1
 3141 087a BB60     		str	r3, [r7, #8]
 3142              	.L184:
 689:.\Protocolo.c **** 						if(x==2){
 3143              		.loc 1 689 0 is_stmt 0 discriminator 1
 3144 087c BB68     		ldr	r3, [r7, #8]
 3145 087e 0B2B     		cmp	r3, #11
 3146 0880 C6D9     		bls	.L187
 698:.\Protocolo.c **** 						}
 699:.\Protocolo.c **** 					}
 700:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=12;
 3147              		.loc 1 700 0 is_stmt 1
 3148 0882 8A4B     		ldr	r3, .L353
 3149 0884 0C22     		movs	r2, #12
 3150 0886 83F82120 		strb	r2, [r3, #33]
 701:.\Protocolo.c **** 					j=12;
 3151              		.loc 1 701 0
 3152 088a 0C23     		movs	r3, #12
 3153 088c FB60     		str	r3, [r7, #12]
 702:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3154              		.loc 1 702 0
 3155 088e 0023     		movs	r3, #0
 3156 0890 BB60     		str	r3, [r7, #8]
 3157 0892 15E0     		b	.L188
 3158              	.L189:
 703:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[x+17]&0x0F)+0x30;
 3159              		.loc 1 703 0 discriminator 3
 3160 0894 BB68     		ldr	r3, [r7, #8]
 3161 0896 1133     		adds	r3, r3, #17
 3162 0898 854A     		ldr	r2, .L353+4
 3163 089a D35C     		ldrb	r3, [r2, r3]
 3164 089c DBB2     		uxtb	r3, r3
 3165 089e 03F00F03 		and	r3, r3, #15
 3166 08a2 DBB2     		uxtb	r3, r3
 3167 08a4 3033     		adds	r3, r3, #48
 3168 08a6 D9B2     		uxtb	r1, r3
 3169 08a8 804A     		ldr	r2, .L353
 3170 08aa FB68     		ldr	r3, [r7, #12]
 3171 08ac 1344     		add	r3, r3, r2
 3172 08ae 2033     		adds	r3, r3, #32
 3173 08b0 0A46     		mov	r2, r1
 3174 08b2 5A70     		strb	r2, [r3, #1]
 704:.\Protocolo.c **** 						j--;
 3175              		.loc 1 704 0 discriminator 3
 3176 08b4 FB68     		ldr	r3, [r7, #12]
 3177 08b6 013B     		subs	r3, r3, #1
 3178 08b8 FB60     		str	r3, [r7, #12]
 702:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3179              		.loc 1 702 0 discriminator 3
 3180 08ba BB68     		ldr	r3, [r7, #8]
 3181 08bc 0133     		adds	r3, r3, #1
 3182 08be BB60     		str	r3, [r7, #8]
 3183              	.L188:
 702:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3184              		.loc 1 702 0 is_stmt 0 discriminator 1
 3185 08c0 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 71


 3186 08c2 0B2B     		cmp	r3, #11
 3187 08c4 E6D9     		bls	.L189
 705:.\Protocolo.c **** 					}
 706:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=6;
 3188              		.loc 1 706 0 is_stmt 1
 3189 08c6 794B     		ldr	r3, .L353
 3190 08c8 0622     		movs	r2, #6
 3191 08ca 83F89920 		strb	r2, [r3, #153]
 707:.\Protocolo.c ****                     j=6;
 3192              		.loc 1 707 0
 3193 08ce 0623     		movs	r3, #6
 3194 08d0 FB60     		str	r3, [r7, #12]
 708:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3195              		.loc 1 708 0
 3196 08d2 0023     		movs	r3, #0
 3197 08d4 BB60     		str	r3, [r7, #8]
 3198 08d6 15E0     		b	.L190
 3199              	.L191:
 709:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 3200              		.loc 1 709 0 discriminator 3
 3201 08d8 BB68     		ldr	r3, [r7, #8]
 3202 08da 1E33     		adds	r3, r3, #30
 3203 08dc 744A     		ldr	r2, .L353+4
 3204 08de D35C     		ldrb	r3, [r2, r3]
 3205 08e0 DBB2     		uxtb	r3, r3
 3206 08e2 03F00F03 		and	r3, r3, #15
 3207 08e6 DBB2     		uxtb	r3, r3
 3208 08e8 3033     		adds	r3, r3, #48
 3209 08ea D9B2     		uxtb	r1, r3
 3210 08ec 6F4A     		ldr	r2, .L353
 3211 08ee FB68     		ldr	r3, [r7, #12]
 3212 08f0 1344     		add	r3, r3, r2
 3213 08f2 9833     		adds	r3, r3, #152
 3214 08f4 0A46     		mov	r2, r1
 3215 08f6 5A70     		strb	r2, [r3, #1]
 710:.\Protocolo.c ****                         j--;
 3216              		.loc 1 710 0 discriminator 3
 3217 08f8 FB68     		ldr	r3, [r7, #12]
 3218 08fa 013B     		subs	r3, r3, #1
 3219 08fc FB60     		str	r3, [r7, #12]
 708:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3220              		.loc 1 708 0 discriminator 3
 3221 08fe BB68     		ldr	r3, [r7, #8]
 3222 0900 0133     		adds	r3, r3, #1
 3223 0902 BB60     		str	r3, [r7, #8]
 3224              	.L190:
 708:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3225              		.loc 1 708 0 is_stmt 0 discriminator 1
 3226 0904 BB68     		ldr	r3, [r7, #8]
 3227 0906 052B     		cmp	r3, #5
 3228 0908 E6D9     		bls	.L191
 711:.\Protocolo.c ****                     }
 712:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 3229              		.loc 1 712 0 is_stmt 1
 3230 090a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 713:.\Protocolo.c **** 					return 1;
 3231              		.loc 1 713 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 72


 3232 090e 0123     		movs	r3, #1
 3233 0910 01F05ABA 		b	.L140
 3234              	.L183:
 714:.\Protocolo.c **** 				}
 715:.\Protocolo.c **** 				else{
 716:.\Protocolo.c **** 					return 0;
 3235              		.loc 1 716 0
 3236 0914 0023     		movs	r3, #0
 3237 0916 01F057BA 		b	.L140
 3238              	.L130:
 717:.\Protocolo.c **** 				}			
 718:.\Protocolo.c **** 			break;
 719:.\Protocolo.c **** 				
 720:.\Protocolo.c **** 			case 88://7 digitos dos mangueras
 721:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[87]==0xF0)&&(Pum
 3239              		.loc 1 721 0
 3240 091a 654B     		ldr	r3, .L353+4
 3241 091c 1B78     		ldrb	r3, [r3]
 3242 091e DBB2     		uxtb	r3, r3
 3243 0920 FF2B     		cmp	r3, #255
 3244 0922 40F02981 		bne	.L192
 3245              		.loc 1 721 0 is_stmt 0 discriminator 1
 3246 0926 624B     		ldr	r3, .L353+4
 3247 0928 5B78     		ldrb	r3, [r3, #1]
 3248 092a DBB2     		uxtb	r3, r3
 3249 092c F62B     		cmp	r3, #246
 3250 092e 40F02381 		bne	.L192
 3251              		.loc 1 721 0 discriminator 2
 3252 0932 5F4B     		ldr	r3, .L353+4
 3253 0934 93F85730 		ldrb	r3, [r3, #87]
 3254 0938 DBB2     		uxtb	r3, r3
 3255 093a F02B     		cmp	r3, #240
 3256 093c 40F01C81 		bne	.L192
 3257              		.loc 1 721 0 discriminator 3
 3258 0940 5B4B     		ldr	r3, .L353+4
 3259 0942 DB78     		ldrb	r3, [r3, #3]
 3260 0944 DBB2     		uxtb	r3, r3
 3261 0946 F92B     		cmp	r3, #249
 3262 0948 40F01681 		bne	.L192
 722:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=13;
 3263              		.loc 1 722 0 is_stmt 1
 3264 094c 574B     		ldr	r3, .L353
 3265 094e 0D22     		movs	r2, #13
 3266 0950 83F85D20 		strb	r2, [r3, #93]
 723:.\Protocolo.c **** 					j=13;
 3267              		.loc 1 723 0
 3268 0954 0D23     		movs	r3, #13
 3269 0956 FB60     		str	r3, [r7, #12]
 724:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3270              		.loc 1 724 0
 3271 0958 0023     		movs	r3, #0
 3272 095a BB60     		str	r3, [r7, #8]
 3273 095c 35E0     		b	.L193
 3274              	.L196:
 725:.\Protocolo.c **** 						if(x==2){
 3275              		.loc 1 725 0
 3276 095e BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 73


 3277 0960 022B     		cmp	r3, #2
 3278 0962 1CD1     		bne	.L194
 726:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 3279              		.loc 1 726 0
 3280 0964 514A     		ldr	r2, .L353
 3281 0966 FB68     		ldr	r3, [r7, #12]
 3282 0968 1344     		add	r3, r3, r2
 3283 096a 5833     		adds	r3, r3, #88
 3284 096c 2C22     		movs	r2, #44
 3285 096e 5A71     		strb	r2, [r3, #5]
 727:.\Protocolo.c **** 							j--;
 3286              		.loc 1 727 0
 3287 0970 FB68     		ldr	r3, [r7, #12]
 3288 0972 013B     		subs	r3, r3, #1
 3289 0974 FB60     		str	r3, [r7, #12]
 728:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 3290              		.loc 1 728 0
 3291 0976 BB68     		ldr	r3, [r7, #8]
 3292 0978 0433     		adds	r3, r3, #4
 3293 097a 4D4A     		ldr	r2, .L353+4
 3294 097c D35C     		ldrb	r3, [r2, r3]
 3295 097e DBB2     		uxtb	r3, r3
 3296 0980 03F00F03 		and	r3, r3, #15
 3297 0984 DBB2     		uxtb	r3, r3
 3298 0986 3033     		adds	r3, r3, #48
 3299 0988 D9B2     		uxtb	r1, r3
 3300 098a 484A     		ldr	r2, .L353
 3301 098c FB68     		ldr	r3, [r7, #12]
 3302 098e 1344     		add	r3, r3, r2
 3303 0990 5833     		adds	r3, r3, #88
 3304 0992 0A46     		mov	r2, r1
 3305 0994 5A71     		strb	r2, [r3, #5]
 729:.\Protocolo.c **** 							j--;
 3306              		.loc 1 729 0
 3307 0996 FB68     		ldr	r3, [r7, #12]
 3308 0998 013B     		subs	r3, r3, #1
 3309 099a FB60     		str	r3, [r7, #12]
 3310 099c 12E0     		b	.L195
 3311              	.L194:
 730:.\Protocolo.c **** 						}else{
 731:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 3312              		.loc 1 731 0
 3313 099e BB68     		ldr	r3, [r7, #8]
 3314 09a0 0433     		adds	r3, r3, #4
 3315 09a2 434A     		ldr	r2, .L353+4
 3316 09a4 D35C     		ldrb	r3, [r2, r3]
 3317 09a6 DBB2     		uxtb	r3, r3
 3318 09a8 03F00F03 		and	r3, r3, #15
 3319 09ac DBB2     		uxtb	r3, r3
 3320 09ae 3033     		adds	r3, r3, #48
 3321 09b0 D9B2     		uxtb	r1, r3
 3322 09b2 3E4A     		ldr	r2, .L353
 3323 09b4 FB68     		ldr	r3, [r7, #12]
 3324 09b6 1344     		add	r3, r3, r2
 3325 09b8 5833     		adds	r3, r3, #88
 3326 09ba 0A46     		mov	r2, r1
 3327 09bc 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 74


 732:.\Protocolo.c **** 							j--;
 3328              		.loc 1 732 0
 3329 09be FB68     		ldr	r3, [r7, #12]
 3330 09c0 013B     		subs	r3, r3, #1
 3331 09c2 FB60     		str	r3, [r7, #12]
 3332              	.L195:
 724:.\Protocolo.c **** 						if(x==2){
 3333              		.loc 1 724 0 discriminator 2
 3334 09c4 BB68     		ldr	r3, [r7, #8]
 3335 09c6 0133     		adds	r3, r3, #1
 3336 09c8 BB60     		str	r3, [r7, #8]
 3337              	.L193:
 724:.\Protocolo.c **** 						if(x==2){
 3338              		.loc 1 724 0 is_stmt 0 discriminator 1
 3339 09ca BB68     		ldr	r3, [r7, #8]
 3340 09cc 0B2B     		cmp	r3, #11
 3341 09ce C6D9     		bls	.L196
 733:.\Protocolo.c **** 						}
 734:.\Protocolo.c **** 					}
 735:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=12;
 3342              		.loc 1 735 0 is_stmt 1
 3343 09d0 364B     		ldr	r3, .L353
 3344 09d2 0C22     		movs	r2, #12
 3345 09d4 83F82120 		strb	r2, [r3, #33]
 736:.\Protocolo.c **** 					j=12;
 3346              		.loc 1 736 0
 3347 09d8 0C23     		movs	r3, #12
 3348 09da FB60     		str	r3, [r7, #12]
 737:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3349              		.loc 1 737 0
 3350 09dc 0023     		movs	r3, #0
 3351 09de BB60     		str	r3, [r7, #8]
 3352 09e0 15E0     		b	.L197
 3353              	.L198:
 738:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[17+x]&0x0F)+0x30;
 3354              		.loc 1 738 0 discriminator 3
 3355 09e2 BB68     		ldr	r3, [r7, #8]
 3356 09e4 1133     		adds	r3, r3, #17
 3357 09e6 324A     		ldr	r2, .L353+4
 3358 09e8 D35C     		ldrb	r3, [r2, r3]
 3359 09ea DBB2     		uxtb	r3, r3
 3360 09ec 03F00F03 		and	r3, r3, #15
 3361 09f0 DBB2     		uxtb	r3, r3
 3362 09f2 3033     		adds	r3, r3, #48
 3363 09f4 D9B2     		uxtb	r1, r3
 3364 09f6 2D4A     		ldr	r2, .L353
 3365 09f8 FB68     		ldr	r3, [r7, #12]
 3366 09fa 1344     		add	r3, r3, r2
 3367 09fc 2033     		adds	r3, r3, #32
 3368 09fe 0A46     		mov	r2, r1
 3369 0a00 5A70     		strb	r2, [r3, #1]
 739:.\Protocolo.c **** 						j--;
 3370              		.loc 1 739 0 discriminator 3
 3371 0a02 FB68     		ldr	r3, [r7, #12]
 3372 0a04 013B     		subs	r3, r3, #1
 3373 0a06 FB60     		str	r3, [r7, #12]
 737:.\Protocolo.c **** 					for(x=0;x<=11;x++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 75


 3374              		.loc 1 737 0 discriminator 3
 3375 0a08 BB68     		ldr	r3, [r7, #8]
 3376 0a0a 0133     		adds	r3, r3, #1
 3377 0a0c BB60     		str	r3, [r7, #8]
 3378              	.L197:
 737:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3379              		.loc 1 737 0 is_stmt 0 discriminator 1
 3380 0a0e BB68     		ldr	r3, [r7, #8]
 3381 0a10 0B2B     		cmp	r3, #11
 3382 0a12 E6D9     		bls	.L198
 740:.\Protocolo.c **** 					}
 741:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=6;
 3383              		.loc 1 741 0 is_stmt 1
 3384 0a14 254B     		ldr	r3, .L353
 3385 0a16 0622     		movs	r2, #6
 3386 0a18 83F89920 		strb	r2, [r3, #153]
 742:.\Protocolo.c ****                     j=6;
 3387              		.loc 1 742 0
 3388 0a1c 0623     		movs	r3, #6
 3389 0a1e FB60     		str	r3, [r7, #12]
 743:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3390              		.loc 1 743 0
 3391 0a20 0023     		movs	r3, #0
 3392 0a22 BB60     		str	r3, [r7, #8]
 3393 0a24 15E0     		b	.L199
 3394              	.L200:
 744:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 3395              		.loc 1 744 0 discriminator 3
 3396 0a26 BB68     		ldr	r3, [r7, #8]
 3397 0a28 1E33     		adds	r3, r3, #30
 3398 0a2a 214A     		ldr	r2, .L353+4
 3399 0a2c D35C     		ldrb	r3, [r2, r3]
 3400 0a2e DBB2     		uxtb	r3, r3
 3401 0a30 03F00F03 		and	r3, r3, #15
 3402 0a34 DBB2     		uxtb	r3, r3
 3403 0a36 3033     		adds	r3, r3, #48
 3404 0a38 D9B2     		uxtb	r1, r3
 3405 0a3a 1C4A     		ldr	r2, .L353
 3406 0a3c FB68     		ldr	r3, [r7, #12]
 3407 0a3e 1344     		add	r3, r3, r2
 3408 0a40 9833     		adds	r3, r3, #152
 3409 0a42 0A46     		mov	r2, r1
 3410 0a44 5A70     		strb	r2, [r3, #1]
 745:.\Protocolo.c ****                         j--;
 3411              		.loc 1 745 0 discriminator 3
 3412 0a46 FB68     		ldr	r3, [r7, #12]
 3413 0a48 013B     		subs	r3, r3, #1
 3414 0a4a FB60     		str	r3, [r7, #12]
 743:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3415              		.loc 1 743 0 discriminator 3
 3416 0a4c BB68     		ldr	r3, [r7, #8]
 3417 0a4e 0133     		adds	r3, r3, #1
 3418 0a50 BB60     		str	r3, [r7, #8]
 3419              	.L199:
 743:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3420              		.loc 1 743 0 is_stmt 0 discriminator 1
 3421 0a52 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 76


 3422 0a54 052B     		cmp	r3, #5
 3423 0a56 E6D9     		bls	.L200
 746:.\Protocolo.c ****                     }
 747:.\Protocolo.c **** 					bufferLCD1.totalVolume2[0]=13;
 3424              		.loc 1 747 0 is_stmt 1
 3425 0a58 144B     		ldr	r3, .L353
 3426 0a5a 0D22     		movs	r2, #13
 3427 0a5c 83F87120 		strb	r2, [r3, #113]
 748:.\Protocolo.c **** 					j=13;
 3428              		.loc 1 748 0
 3429 0a60 0D23     		movs	r3, #13
 3430 0a62 FB60     		str	r3, [r7, #12]
 749:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3431              		.loc 1 749 0
 3432 0a64 0023     		movs	r3, #0
 3433 0a66 BB60     		str	r3, [r7, #8]
 3434 0a68 3AE0     		b	.L201
 3435              	.L204:
 750:.\Protocolo.c **** 						if(x==2){
 3436              		.loc 1 750 0
 3437 0a6a BB68     		ldr	r3, [r7, #8]
 3438 0a6c 022B     		cmp	r3, #2
 3439 0a6e 21D1     		bne	.L202
 751:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=',';
 3440              		.loc 1 751 0
 3441 0a70 0E4A     		ldr	r2, .L353
 3442 0a72 FB68     		ldr	r3, [r7, #12]
 3443 0a74 1344     		add	r3, r3, r2
 3444 0a76 7033     		adds	r3, r3, #112
 3445 0a78 2C22     		movs	r2, #44
 3446 0a7a 5A70     		strb	r2, [r3, #1]
 752:.\Protocolo.c **** 							j--;
 3447              		.loc 1 752 0
 3448 0a7c FB68     		ldr	r3, [r7, #12]
 3449 0a7e 013B     		subs	r3, r3, #1
 3450 0a80 FB60     		str	r3, [r7, #12]
 753:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 3451              		.loc 1 753 0
 3452 0a82 BB68     		ldr	r3, [r7, #8]
 3453 0a84 2E33     		adds	r3, r3, #46
 3454 0a86 0A4A     		ldr	r2, .L353+4
 3455 0a88 D35C     		ldrb	r3, [r2, r3]
 3456 0a8a DBB2     		uxtb	r3, r3
 3457 0a8c 03F00F03 		and	r3, r3, #15
 3458 0a90 DBB2     		uxtb	r3, r3
 3459 0a92 3033     		adds	r3, r3, #48
 3460 0a94 D9B2     		uxtb	r1, r3
 3461 0a96 054A     		ldr	r2, .L353
 3462 0a98 FB68     		ldr	r3, [r7, #12]
 3463 0a9a 1344     		add	r3, r3, r2
 3464 0a9c 7033     		adds	r3, r3, #112
 3465 0a9e 0A46     		mov	r2, r1
 3466 0aa0 5A70     		strb	r2, [r3, #1]
 754:.\Protocolo.c **** 							j--;
 3467              		.loc 1 754 0
 3468 0aa2 FB68     		ldr	r3, [r7, #12]
 3469 0aa4 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 77


 3470 0aa6 FB60     		str	r3, [r7, #12]
 3471 0aa8 17E0     		b	.L203
 3472              	.L354:
 3473 0aaa 00BF     		.align	2
 3474              	.L353:
 3475 0aac 00000000 		.word	bufferLCD1
 3476 0ab0 00000000 		.word	Pump_AL_rxBuffer
 3477              	.L202:
 755:.\Protocolo.c **** 						}else{
 756:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 3478              		.loc 1 756 0
 3479 0ab4 BB68     		ldr	r3, [r7, #8]
 3480 0ab6 2E33     		adds	r3, r3, #46
 3481 0ab8 A64A     		ldr	r2, .L355
 3482 0aba D35C     		ldrb	r3, [r2, r3]
 3483 0abc DBB2     		uxtb	r3, r3
 3484 0abe 03F00F03 		and	r3, r3, #15
 3485 0ac2 DBB2     		uxtb	r3, r3
 3486 0ac4 3033     		adds	r3, r3, #48
 3487 0ac6 D9B2     		uxtb	r1, r3
 3488 0ac8 A34A     		ldr	r2, .L355+4
 3489 0aca FB68     		ldr	r3, [r7, #12]
 3490 0acc 1344     		add	r3, r3, r2
 3491 0ace 7033     		adds	r3, r3, #112
 3492 0ad0 0A46     		mov	r2, r1
 3493 0ad2 5A70     		strb	r2, [r3, #1]
 757:.\Protocolo.c **** 							j--;
 3494              		.loc 1 757 0
 3495 0ad4 FB68     		ldr	r3, [r7, #12]
 3496 0ad6 013B     		subs	r3, r3, #1
 3497 0ad8 FB60     		str	r3, [r7, #12]
 3498              	.L203:
 749:.\Protocolo.c **** 						if(x==2){
 3499              		.loc 1 749 0 discriminator 2
 3500 0ada BB68     		ldr	r3, [r7, #8]
 3501 0adc 0133     		adds	r3, r3, #1
 3502 0ade BB60     		str	r3, [r7, #8]
 3503              	.L201:
 749:.\Protocolo.c **** 						if(x==2){
 3504              		.loc 1 749 0 is_stmt 0 discriminator 1
 3505 0ae0 BB68     		ldr	r3, [r7, #8]
 3506 0ae2 0B2B     		cmp	r3, #11
 3507 0ae4 C1D9     		bls	.L204
 758:.\Protocolo.c **** 						}
 759:.\Protocolo.c **** 					}
 760:.\Protocolo.c **** 					bufferLCD1.totalMoney2[0]=12;
 3508              		.loc 1 760 0 is_stmt 1
 3509 0ae6 9C4B     		ldr	r3, .L355+4
 3510 0ae8 0C22     		movs	r2, #12
 3511 0aea 83F83520 		strb	r2, [r3, #53]
 761:.\Protocolo.c **** 					j=12;
 3512              		.loc 1 761 0
 3513 0aee 0C23     		movs	r3, #12
 3514 0af0 FB60     		str	r3, [r7, #12]
 762:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3515              		.loc 1 762 0
 3516 0af2 0023     		movs	r3, #0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 78


 3517 0af4 BB60     		str	r3, [r7, #8]
 3518 0af6 15E0     		b	.L205
 3519              	.L206:
 763:.\Protocolo.c **** 						bufferLCD1.totalMoney2[j]=(Pump_AL_rxBuffer[59+x]&0x0F)+0x30;
 3520              		.loc 1 763 0 discriminator 3
 3521 0af8 BB68     		ldr	r3, [r7, #8]
 3522 0afa 3B33     		adds	r3, r3, #59
 3523 0afc 954A     		ldr	r2, .L355
 3524 0afe D35C     		ldrb	r3, [r2, r3]
 3525 0b00 DBB2     		uxtb	r3, r3
 3526 0b02 03F00F03 		and	r3, r3, #15
 3527 0b06 DBB2     		uxtb	r3, r3
 3528 0b08 3033     		adds	r3, r3, #48
 3529 0b0a D9B2     		uxtb	r1, r3
 3530 0b0c 924A     		ldr	r2, .L355+4
 3531 0b0e FB68     		ldr	r3, [r7, #12]
 3532 0b10 1344     		add	r3, r3, r2
 3533 0b12 3033     		adds	r3, r3, #48
 3534 0b14 0A46     		mov	r2, r1
 3535 0b16 5A71     		strb	r2, [r3, #5]
 764:.\Protocolo.c **** 						j--;
 3536              		.loc 1 764 0 discriminator 3
 3537 0b18 FB68     		ldr	r3, [r7, #12]
 3538 0b1a 013B     		subs	r3, r3, #1
 3539 0b1c FB60     		str	r3, [r7, #12]
 762:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3540              		.loc 1 762 0 discriminator 3
 3541 0b1e BB68     		ldr	r3, [r7, #8]
 3542 0b20 0133     		adds	r3, r3, #1
 3543 0b22 BB60     		str	r3, [r7, #8]
 3544              	.L205:
 762:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3545              		.loc 1 762 0 is_stmt 0 discriminator 1
 3546 0b24 BB68     		ldr	r3, [r7, #8]
 3547 0b26 0B2B     		cmp	r3, #11
 3548 0b28 E6D9     		bls	.L206
 765:.\Protocolo.c **** 					}
 766:.\Protocolo.c ****                     bufferLCD1.ppu2[0]=6;
 3549              		.loc 1 766 0 is_stmt 1
 3550 0b2a 8B4B     		ldr	r3, .L355+4
 3551 0b2c 0622     		movs	r2, #6
 3552 0b2e 83F8A320 		strb	r2, [r3, #163]
 767:.\Protocolo.c ****                     j=6;
 3553              		.loc 1 767 0
 3554 0b32 0623     		movs	r3, #6
 3555 0b34 FB60     		str	r3, [r7, #12]
 768:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3556              		.loc 1 768 0
 3557 0b36 0023     		movs	r3, #0
 3558 0b38 BB60     		str	r3, [r7, #8]
 3559 0b3a 15E0     		b	.L207
 3560              	.L208:
 769:.\Protocolo.c ****                         bufferLCD1.ppu2[j]=(Pump_AL_rxBuffer[x+72]&0x0F)+0x30;
 3561              		.loc 1 769 0 discriminator 3
 3562 0b3c BB68     		ldr	r3, [r7, #8]
 3563 0b3e 4833     		adds	r3, r3, #72
 3564 0b40 844A     		ldr	r2, .L355
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 79


 3565 0b42 D35C     		ldrb	r3, [r2, r3]
 3566 0b44 DBB2     		uxtb	r3, r3
 3567 0b46 03F00F03 		and	r3, r3, #15
 3568 0b4a DBB2     		uxtb	r3, r3
 3569 0b4c 3033     		adds	r3, r3, #48
 3570 0b4e D9B2     		uxtb	r1, r3
 3571 0b50 814A     		ldr	r2, .L355+4
 3572 0b52 FB68     		ldr	r3, [r7, #12]
 3573 0b54 1344     		add	r3, r3, r2
 3574 0b56 A033     		adds	r3, r3, #160
 3575 0b58 0A46     		mov	r2, r1
 3576 0b5a DA70     		strb	r2, [r3, #3]
 770:.\Protocolo.c ****                         j--;
 3577              		.loc 1 770 0 discriminator 3
 3578 0b5c FB68     		ldr	r3, [r7, #12]
 3579 0b5e 013B     		subs	r3, r3, #1
 3580 0b60 FB60     		str	r3, [r7, #12]
 768:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3581              		.loc 1 768 0 discriminator 3
 3582 0b62 BB68     		ldr	r3, [r7, #8]
 3583 0b64 0133     		adds	r3, r3, #1
 3584 0b66 BB60     		str	r3, [r7, #8]
 3585              	.L207:
 768:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3586              		.loc 1 768 0 is_stmt 0 discriminator 1
 3587 0b68 BB68     		ldr	r3, [r7, #8]
 3588 0b6a 052B     		cmp	r3, #5
 3589 0b6c E6D9     		bls	.L208
 771:.\Protocolo.c ****                     }
 772:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 3590              		.loc 1 772 0 is_stmt 1
 3591 0b6e FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 773:.\Protocolo.c **** 					return 2;					
 3592              		.loc 1 773 0
 3593 0b72 0223     		movs	r3, #2
 3594 0b74 01F028B9 		b	.L140
 3595              	.L192:
 774:.\Protocolo.c **** 				}			
 775:.\Protocolo.c **** 				else{
 776:.\Protocolo.c **** 					return 0;
 3596              		.loc 1 776 0
 3597 0b78 0023     		movs	r3, #0
 3598 0b7a 01F025B9 		b	.L140
 3599              	.L129:
 777:.\Protocolo.c **** 				}			
 778:.\Protocolo.c **** 			break;
 779:.\Protocolo.c **** 		
 780:.\Protocolo.c **** 			case 130://7 digitos tres mangueras
 781:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[129]==0xF0)&&(Pu
 3600              		.loc 1 781 0
 3601 0b7e 754B     		ldr	r3, .L355
 3602 0b80 1B78     		ldrb	r3, [r3]
 3603 0b82 DBB2     		uxtb	r3, r3
 3604 0b84 FF2B     		cmp	r3, #255
 3605 0b86 40F0AF81 		bne	.L209
 3606              		.loc 1 781 0 is_stmt 0 discriminator 1
 3607 0b8a 724B     		ldr	r3, .L355
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 80


 3608 0b8c 5B78     		ldrb	r3, [r3, #1]
 3609 0b8e DBB2     		uxtb	r3, r3
 3610 0b90 F62B     		cmp	r3, #246
 3611 0b92 40F0A981 		bne	.L209
 3612              		.loc 1 781 0 discriminator 2
 3613 0b96 6F4B     		ldr	r3, .L355
 3614 0b98 93F88130 		ldrb	r3, [r3, #129]
 3615 0b9c DBB2     		uxtb	r3, r3
 3616 0b9e F02B     		cmp	r3, #240
 3617 0ba0 40F0A281 		bne	.L209
 3618              		.loc 1 781 0 discriminator 3
 3619 0ba4 6B4B     		ldr	r3, .L355
 3620 0ba6 DB78     		ldrb	r3, [r3, #3]
 3621 0ba8 DBB2     		uxtb	r3, r3
 3622 0baa F92B     		cmp	r3, #249
 3623 0bac 40F09C81 		bne	.L209
 782:.\Protocolo.c **** 					bufferLCD1.totalVolume1[0]=13;
 3624              		.loc 1 782 0 is_stmt 1
 3625 0bb0 694B     		ldr	r3, .L355+4
 3626 0bb2 0D22     		movs	r2, #13
 3627 0bb4 83F85D20 		strb	r2, [r3, #93]
 783:.\Protocolo.c **** 					j=13;
 3628              		.loc 1 783 0
 3629 0bb8 0D23     		movs	r3, #13
 3630 0bba FB60     		str	r3, [r7, #12]
 784:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3631              		.loc 1 784 0
 3632 0bbc 0023     		movs	r3, #0
 3633 0bbe BB60     		str	r3, [r7, #8]
 3634 0bc0 35E0     		b	.L210
 3635              	.L213:
 785:.\Protocolo.c **** 						if(x==2){
 3636              		.loc 1 785 0
 3637 0bc2 BB68     		ldr	r3, [r7, #8]
 3638 0bc4 022B     		cmp	r3, #2
 3639 0bc6 1CD1     		bne	.L211
 786:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=',';
 3640              		.loc 1 786 0
 3641 0bc8 634A     		ldr	r2, .L355+4
 3642 0bca FB68     		ldr	r3, [r7, #12]
 3643 0bcc 1344     		add	r3, r3, r2
 3644 0bce 5833     		adds	r3, r3, #88
 3645 0bd0 2C22     		movs	r2, #44
 3646 0bd2 5A71     		strb	r2, [r3, #5]
 787:.\Protocolo.c **** 							j--;
 3647              		.loc 1 787 0
 3648 0bd4 FB68     		ldr	r3, [r7, #12]
 3649 0bd6 013B     		subs	r3, r3, #1
 3650 0bd8 FB60     		str	r3, [r7, #12]
 788:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 3651              		.loc 1 788 0
 3652 0bda BB68     		ldr	r3, [r7, #8]
 3653 0bdc 0433     		adds	r3, r3, #4
 3654 0bde 5D4A     		ldr	r2, .L355
 3655 0be0 D35C     		ldrb	r3, [r2, r3]
 3656 0be2 DBB2     		uxtb	r3, r3
 3657 0be4 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 81


 3658 0be8 DBB2     		uxtb	r3, r3
 3659 0bea 3033     		adds	r3, r3, #48
 3660 0bec D9B2     		uxtb	r1, r3
 3661 0bee 5A4A     		ldr	r2, .L355+4
 3662 0bf0 FB68     		ldr	r3, [r7, #12]
 3663 0bf2 1344     		add	r3, r3, r2
 3664 0bf4 5833     		adds	r3, r3, #88
 3665 0bf6 0A46     		mov	r2, r1
 3666 0bf8 5A71     		strb	r2, [r3, #5]
 789:.\Protocolo.c **** 							j--;
 3667              		.loc 1 789 0
 3668 0bfa FB68     		ldr	r3, [r7, #12]
 3669 0bfc 013B     		subs	r3, r3, #1
 3670 0bfe FB60     		str	r3, [r7, #12]
 3671 0c00 12E0     		b	.L212
 3672              	.L211:
 790:.\Protocolo.c **** 						}else{
 791:.\Protocolo.c **** 							bufferLCD1.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 3673              		.loc 1 791 0
 3674 0c02 BB68     		ldr	r3, [r7, #8]
 3675 0c04 0433     		adds	r3, r3, #4
 3676 0c06 534A     		ldr	r2, .L355
 3677 0c08 D35C     		ldrb	r3, [r2, r3]
 3678 0c0a DBB2     		uxtb	r3, r3
 3679 0c0c 03F00F03 		and	r3, r3, #15
 3680 0c10 DBB2     		uxtb	r3, r3
 3681 0c12 3033     		adds	r3, r3, #48
 3682 0c14 D9B2     		uxtb	r1, r3
 3683 0c16 504A     		ldr	r2, .L355+4
 3684 0c18 FB68     		ldr	r3, [r7, #12]
 3685 0c1a 1344     		add	r3, r3, r2
 3686 0c1c 5833     		adds	r3, r3, #88
 3687 0c1e 0A46     		mov	r2, r1
 3688 0c20 5A71     		strb	r2, [r3, #5]
 792:.\Protocolo.c **** 							j--;
 3689              		.loc 1 792 0
 3690 0c22 FB68     		ldr	r3, [r7, #12]
 3691 0c24 013B     		subs	r3, r3, #1
 3692 0c26 FB60     		str	r3, [r7, #12]
 3693              	.L212:
 784:.\Protocolo.c **** 						if(x==2){
 3694              		.loc 1 784 0 discriminator 2
 3695 0c28 BB68     		ldr	r3, [r7, #8]
 3696 0c2a 0133     		adds	r3, r3, #1
 3697 0c2c BB60     		str	r3, [r7, #8]
 3698              	.L210:
 784:.\Protocolo.c **** 						if(x==2){
 3699              		.loc 1 784 0 is_stmt 0 discriminator 1
 3700 0c2e BB68     		ldr	r3, [r7, #8]
 3701 0c30 0B2B     		cmp	r3, #11
 3702 0c32 C6D9     		bls	.L213
 793:.\Protocolo.c **** 						}
 794:.\Protocolo.c **** 					}
 795:.\Protocolo.c **** 					bufferLCD1.totalMoney1[0]=12;
 3703              		.loc 1 795 0 is_stmt 1
 3704 0c34 484B     		ldr	r3, .L355+4
 3705 0c36 0C22     		movs	r2, #12
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 82


 3706 0c38 83F82120 		strb	r2, [r3, #33]
 796:.\Protocolo.c **** 					j=12;
 3707              		.loc 1 796 0
 3708 0c3c 0C23     		movs	r3, #12
 3709 0c3e FB60     		str	r3, [r7, #12]
 797:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3710              		.loc 1 797 0
 3711 0c40 0023     		movs	r3, #0
 3712 0c42 BB60     		str	r3, [r7, #8]
 3713 0c44 15E0     		b	.L214
 3714              	.L215:
 798:.\Protocolo.c **** 						bufferLCD1.totalMoney1[j]=(Pump_AL_rxBuffer[17+x]&0x0F)+0x30;
 3715              		.loc 1 798 0 discriminator 3
 3716 0c46 BB68     		ldr	r3, [r7, #8]
 3717 0c48 1133     		adds	r3, r3, #17
 3718 0c4a 424A     		ldr	r2, .L355
 3719 0c4c D35C     		ldrb	r3, [r2, r3]
 3720 0c4e DBB2     		uxtb	r3, r3
 3721 0c50 03F00F03 		and	r3, r3, #15
 3722 0c54 DBB2     		uxtb	r3, r3
 3723 0c56 3033     		adds	r3, r3, #48
 3724 0c58 D9B2     		uxtb	r1, r3
 3725 0c5a 3F4A     		ldr	r2, .L355+4
 3726 0c5c FB68     		ldr	r3, [r7, #12]
 3727 0c5e 1344     		add	r3, r3, r2
 3728 0c60 2033     		adds	r3, r3, #32
 3729 0c62 0A46     		mov	r2, r1
 3730 0c64 5A70     		strb	r2, [r3, #1]
 799:.\Protocolo.c **** 						j--;
 3731              		.loc 1 799 0 discriminator 3
 3732 0c66 FB68     		ldr	r3, [r7, #12]
 3733 0c68 013B     		subs	r3, r3, #1
 3734 0c6a FB60     		str	r3, [r7, #12]
 797:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3735              		.loc 1 797 0 discriminator 3
 3736 0c6c BB68     		ldr	r3, [r7, #8]
 3737 0c6e 0133     		adds	r3, r3, #1
 3738 0c70 BB60     		str	r3, [r7, #8]
 3739              	.L214:
 797:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3740              		.loc 1 797 0 is_stmt 0 discriminator 1
 3741 0c72 BB68     		ldr	r3, [r7, #8]
 3742 0c74 0B2B     		cmp	r3, #11
 3743 0c76 E6D9     		bls	.L215
 800:.\Protocolo.c **** 					}
 801:.\Protocolo.c ****                     bufferLCD1.ppu1[0]=6;
 3744              		.loc 1 801 0 is_stmt 1
 3745 0c78 374B     		ldr	r3, .L355+4
 3746 0c7a 0622     		movs	r2, #6
 3747 0c7c 83F89920 		strb	r2, [r3, #153]
 802:.\Protocolo.c ****                     j=6;
 3748              		.loc 1 802 0
 3749 0c80 0623     		movs	r3, #6
 3750 0c82 FB60     		str	r3, [r7, #12]
 803:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3751              		.loc 1 803 0
 3752 0c84 0023     		movs	r3, #0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 83


 3753 0c86 BB60     		str	r3, [r7, #8]
 3754 0c88 15E0     		b	.L216
 3755              	.L217:
 804:.\Protocolo.c ****                         bufferLCD1.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 3756              		.loc 1 804 0 discriminator 3
 3757 0c8a BB68     		ldr	r3, [r7, #8]
 3758 0c8c 1E33     		adds	r3, r3, #30
 3759 0c8e 314A     		ldr	r2, .L355
 3760 0c90 D35C     		ldrb	r3, [r2, r3]
 3761 0c92 DBB2     		uxtb	r3, r3
 3762 0c94 03F00F03 		and	r3, r3, #15
 3763 0c98 DBB2     		uxtb	r3, r3
 3764 0c9a 3033     		adds	r3, r3, #48
 3765 0c9c D9B2     		uxtb	r1, r3
 3766 0c9e 2E4A     		ldr	r2, .L355+4
 3767 0ca0 FB68     		ldr	r3, [r7, #12]
 3768 0ca2 1344     		add	r3, r3, r2
 3769 0ca4 9833     		adds	r3, r3, #152
 3770 0ca6 0A46     		mov	r2, r1
 3771 0ca8 5A70     		strb	r2, [r3, #1]
 805:.\Protocolo.c ****                         j--;
 3772              		.loc 1 805 0 discriminator 3
 3773 0caa FB68     		ldr	r3, [r7, #12]
 3774 0cac 013B     		subs	r3, r3, #1
 3775 0cae FB60     		str	r3, [r7, #12]
 803:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3776              		.loc 1 803 0 discriminator 3
 3777 0cb0 BB68     		ldr	r3, [r7, #8]
 3778 0cb2 0133     		adds	r3, r3, #1
 3779 0cb4 BB60     		str	r3, [r7, #8]
 3780              	.L216:
 803:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3781              		.loc 1 803 0 is_stmt 0 discriminator 1
 3782 0cb6 BB68     		ldr	r3, [r7, #8]
 3783 0cb8 052B     		cmp	r3, #5
 3784 0cba E6D9     		bls	.L217
 806:.\Protocolo.c ****                     }
 807:.\Protocolo.c **** 					bufferLCD1.totalVolume2[0]=13;
 3785              		.loc 1 807 0 is_stmt 1
 3786 0cbc 264B     		ldr	r3, .L355+4
 3787 0cbe 0D22     		movs	r2, #13
 3788 0cc0 83F87120 		strb	r2, [r3, #113]
 808:.\Protocolo.c **** 					j=13;
 3789              		.loc 1 808 0
 3790 0cc4 0D23     		movs	r3, #13
 3791 0cc6 FB60     		str	r3, [r7, #12]
 809:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3792              		.loc 1 809 0
 3793 0cc8 0023     		movs	r3, #0
 3794 0cca BB60     		str	r3, [r7, #8]
 3795 0ccc 35E0     		b	.L218
 3796              	.L221:
 810:.\Protocolo.c **** 						if(x==2){
 3797              		.loc 1 810 0
 3798 0cce BB68     		ldr	r3, [r7, #8]
 3799 0cd0 022B     		cmp	r3, #2
 3800 0cd2 1CD1     		bne	.L219
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 84


 811:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=',';
 3801              		.loc 1 811 0
 3802 0cd4 204A     		ldr	r2, .L355+4
 3803 0cd6 FB68     		ldr	r3, [r7, #12]
 3804 0cd8 1344     		add	r3, r3, r2
 3805 0cda 7033     		adds	r3, r3, #112
 3806 0cdc 2C22     		movs	r2, #44
 3807 0cde 5A70     		strb	r2, [r3, #1]
 812:.\Protocolo.c **** 							j--;
 3808              		.loc 1 812 0
 3809 0ce0 FB68     		ldr	r3, [r7, #12]
 3810 0ce2 013B     		subs	r3, r3, #1
 3811 0ce4 FB60     		str	r3, [r7, #12]
 813:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 3812              		.loc 1 813 0
 3813 0ce6 BB68     		ldr	r3, [r7, #8]
 3814 0ce8 2E33     		adds	r3, r3, #46
 3815 0cea 1A4A     		ldr	r2, .L355
 3816 0cec D35C     		ldrb	r3, [r2, r3]
 3817 0cee DBB2     		uxtb	r3, r3
 3818 0cf0 03F00F03 		and	r3, r3, #15
 3819 0cf4 DBB2     		uxtb	r3, r3
 3820 0cf6 3033     		adds	r3, r3, #48
 3821 0cf8 D9B2     		uxtb	r1, r3
 3822 0cfa 174A     		ldr	r2, .L355+4
 3823 0cfc FB68     		ldr	r3, [r7, #12]
 3824 0cfe 1344     		add	r3, r3, r2
 3825 0d00 7033     		adds	r3, r3, #112
 3826 0d02 0A46     		mov	r2, r1
 3827 0d04 5A70     		strb	r2, [r3, #1]
 814:.\Protocolo.c **** 							j--;
 3828              		.loc 1 814 0
 3829 0d06 FB68     		ldr	r3, [r7, #12]
 3830 0d08 013B     		subs	r3, r3, #1
 3831 0d0a FB60     		str	r3, [r7, #12]
 3832 0d0c 12E0     		b	.L220
 3833              	.L219:
 815:.\Protocolo.c **** 						}else{
 816:.\Protocolo.c **** 							bufferLCD1.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 3834              		.loc 1 816 0
 3835 0d0e BB68     		ldr	r3, [r7, #8]
 3836 0d10 2E33     		adds	r3, r3, #46
 3837 0d12 104A     		ldr	r2, .L355
 3838 0d14 D35C     		ldrb	r3, [r2, r3]
 3839 0d16 DBB2     		uxtb	r3, r3
 3840 0d18 03F00F03 		and	r3, r3, #15
 3841 0d1c DBB2     		uxtb	r3, r3
 3842 0d1e 3033     		adds	r3, r3, #48
 3843 0d20 D9B2     		uxtb	r1, r3
 3844 0d22 0D4A     		ldr	r2, .L355+4
 3845 0d24 FB68     		ldr	r3, [r7, #12]
 3846 0d26 1344     		add	r3, r3, r2
 3847 0d28 7033     		adds	r3, r3, #112
 3848 0d2a 0A46     		mov	r2, r1
 3849 0d2c 5A70     		strb	r2, [r3, #1]
 817:.\Protocolo.c **** 							j--;
 3850              		.loc 1 817 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 85


 3851 0d2e FB68     		ldr	r3, [r7, #12]
 3852 0d30 013B     		subs	r3, r3, #1
 3853 0d32 FB60     		str	r3, [r7, #12]
 3854              	.L220:
 809:.\Protocolo.c **** 						if(x==2){
 3855              		.loc 1 809 0 discriminator 2
 3856 0d34 BB68     		ldr	r3, [r7, #8]
 3857 0d36 0133     		adds	r3, r3, #1
 3858 0d38 BB60     		str	r3, [r7, #8]
 3859              	.L218:
 809:.\Protocolo.c **** 						if(x==2){
 3860              		.loc 1 809 0 is_stmt 0 discriminator 1
 3861 0d3a BB68     		ldr	r3, [r7, #8]
 3862 0d3c 0B2B     		cmp	r3, #11
 3863 0d3e C6D9     		bls	.L221
 818:.\Protocolo.c **** 						}
 819:.\Protocolo.c **** 					}
 820:.\Protocolo.c **** 					bufferLCD1.totalMoney2[0]=12;
 3864              		.loc 1 820 0 is_stmt 1
 3865 0d40 054B     		ldr	r3, .L355+4
 3866 0d42 0C22     		movs	r2, #12
 3867 0d44 83F83520 		strb	r2, [r3, #53]
 821:.\Protocolo.c **** 					j=12;
 3868              		.loc 1 821 0
 3869 0d48 0C23     		movs	r3, #12
 3870 0d4a FB60     		str	r3, [r7, #12]
 822:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3871              		.loc 1 822 0
 3872 0d4c 0023     		movs	r3, #0
 3873 0d4e BB60     		str	r3, [r7, #8]
 3874 0d50 1AE0     		b	.L222
 3875              	.L356:
 3876 0d52 00BF     		.align	2
 3877              	.L355:
 3878 0d54 00000000 		.word	Pump_AL_rxBuffer
 3879 0d58 00000000 		.word	bufferLCD1
 3880              	.L223:
 823:.\Protocolo.c **** 						bufferLCD1.totalMoney2[j]=(Pump_AL_rxBuffer[59+x]&0x0F)+0x30;
 3881              		.loc 1 823 0 discriminator 3
 3882 0d5c BB68     		ldr	r3, [r7, #8]
 3883 0d5e 3B33     		adds	r3, r3, #59
 3884 0d60 A64A     		ldr	r2, .L357
 3885 0d62 D35C     		ldrb	r3, [r2, r3]
 3886 0d64 DBB2     		uxtb	r3, r3
 3887 0d66 03F00F03 		and	r3, r3, #15
 3888 0d6a DBB2     		uxtb	r3, r3
 3889 0d6c 3033     		adds	r3, r3, #48
 3890 0d6e D9B2     		uxtb	r1, r3
 3891 0d70 A34A     		ldr	r2, .L357+4
 3892 0d72 FB68     		ldr	r3, [r7, #12]
 3893 0d74 1344     		add	r3, r3, r2
 3894 0d76 3033     		adds	r3, r3, #48
 3895 0d78 0A46     		mov	r2, r1
 3896 0d7a 5A71     		strb	r2, [r3, #5]
 824:.\Protocolo.c **** 						j--;
 3897              		.loc 1 824 0 discriminator 3
 3898 0d7c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 86


 3899 0d7e 013B     		subs	r3, r3, #1
 3900 0d80 FB60     		str	r3, [r7, #12]
 822:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3901              		.loc 1 822 0 discriminator 3
 3902 0d82 BB68     		ldr	r3, [r7, #8]
 3903 0d84 0133     		adds	r3, r3, #1
 3904 0d86 BB60     		str	r3, [r7, #8]
 3905              	.L222:
 822:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3906              		.loc 1 822 0 is_stmt 0 discriminator 1
 3907 0d88 BB68     		ldr	r3, [r7, #8]
 3908 0d8a 0B2B     		cmp	r3, #11
 3909 0d8c E6D9     		bls	.L223
 825:.\Protocolo.c **** 					}
 826:.\Protocolo.c ****                     bufferLCD1.ppu2[0]=6;
 3910              		.loc 1 826 0 is_stmt 1
 3911 0d8e 9C4B     		ldr	r3, .L357+4
 3912 0d90 0622     		movs	r2, #6
 3913 0d92 83F8A320 		strb	r2, [r3, #163]
 827:.\Protocolo.c ****                     j=6;
 3914              		.loc 1 827 0
 3915 0d96 0623     		movs	r3, #6
 3916 0d98 FB60     		str	r3, [r7, #12]
 828:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3917              		.loc 1 828 0
 3918 0d9a 0023     		movs	r3, #0
 3919 0d9c BB60     		str	r3, [r7, #8]
 3920 0d9e 15E0     		b	.L224
 3921              	.L225:
 829:.\Protocolo.c ****                         bufferLCD1.ppu2[j]=(Pump_AL_rxBuffer[x+72]&0x0F)+0x30;
 3922              		.loc 1 829 0 discriminator 3
 3923 0da0 BB68     		ldr	r3, [r7, #8]
 3924 0da2 4833     		adds	r3, r3, #72
 3925 0da4 954A     		ldr	r2, .L357
 3926 0da6 D35C     		ldrb	r3, [r2, r3]
 3927 0da8 DBB2     		uxtb	r3, r3
 3928 0daa 03F00F03 		and	r3, r3, #15
 3929 0dae DBB2     		uxtb	r3, r3
 3930 0db0 3033     		adds	r3, r3, #48
 3931 0db2 D9B2     		uxtb	r1, r3
 3932 0db4 924A     		ldr	r2, .L357+4
 3933 0db6 FB68     		ldr	r3, [r7, #12]
 3934 0db8 1344     		add	r3, r3, r2
 3935 0dba A033     		adds	r3, r3, #160
 3936 0dbc 0A46     		mov	r2, r1
 3937 0dbe DA70     		strb	r2, [r3, #3]
 830:.\Protocolo.c ****                         j--;
 3938              		.loc 1 830 0 discriminator 3
 3939 0dc0 FB68     		ldr	r3, [r7, #12]
 3940 0dc2 013B     		subs	r3, r3, #1
 3941 0dc4 FB60     		str	r3, [r7, #12]
 828:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3942              		.loc 1 828 0 discriminator 3
 3943 0dc6 BB68     		ldr	r3, [r7, #8]
 3944 0dc8 0133     		adds	r3, r3, #1
 3945 0dca BB60     		str	r3, [r7, #8]
 3946              	.L224:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 87


 828:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 3947              		.loc 1 828 0 is_stmt 0 discriminator 1
 3948 0dcc BB68     		ldr	r3, [r7, #8]
 3949 0dce 052B     		cmp	r3, #5
 3950 0dd0 E6D9     		bls	.L225
 831:.\Protocolo.c ****                     }
 832:.\Protocolo.c **** 					bufferLCD1.totalVolume3[0]=13;
 3951              		.loc 1 832 0 is_stmt 1
 3952 0dd2 8B4B     		ldr	r3, .L357+4
 3953 0dd4 0D22     		movs	r2, #13
 3954 0dd6 83F88520 		strb	r2, [r3, #133]
 833:.\Protocolo.c **** 					j=13;
 3955              		.loc 1 833 0
 3956 0dda 0D23     		movs	r3, #13
 3957 0ddc FB60     		str	r3, [r7, #12]
 834:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 3958              		.loc 1 834 0
 3959 0dde 0023     		movs	r3, #0
 3960 0de0 BB60     		str	r3, [r7, #8]
 3961 0de2 35E0     		b	.L226
 3962              	.L229:
 835:.\Protocolo.c **** 						if(x==2){
 3963              		.loc 1 835 0
 3964 0de4 BB68     		ldr	r3, [r7, #8]
 3965 0de6 022B     		cmp	r3, #2
 3966 0de8 1CD1     		bne	.L227
 836:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=',';
 3967              		.loc 1 836 0
 3968 0dea 854A     		ldr	r2, .L357+4
 3969 0dec FB68     		ldr	r3, [r7, #12]
 3970 0dee 1344     		add	r3, r3, r2
 3971 0df0 8033     		adds	r3, r3, #128
 3972 0df2 2C22     		movs	r2, #44
 3973 0df4 5A71     		strb	r2, [r3, #5]
 837:.\Protocolo.c **** 							j--;
 3974              		.loc 1 837 0
 3975 0df6 FB68     		ldr	r3, [r7, #12]
 3976 0df8 013B     		subs	r3, r3, #1
 3977 0dfa FB60     		str	r3, [r7, #12]
 838:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=(Pump_AL_rxBuffer[88+x]&0x0F)+0x30;
 3978              		.loc 1 838 0
 3979 0dfc BB68     		ldr	r3, [r7, #8]
 3980 0dfe 5833     		adds	r3, r3, #88
 3981 0e00 7E4A     		ldr	r2, .L357
 3982 0e02 D35C     		ldrb	r3, [r2, r3]
 3983 0e04 DBB2     		uxtb	r3, r3
 3984 0e06 03F00F03 		and	r3, r3, #15
 3985 0e0a DBB2     		uxtb	r3, r3
 3986 0e0c 3033     		adds	r3, r3, #48
 3987 0e0e D9B2     		uxtb	r1, r3
 3988 0e10 7B4A     		ldr	r2, .L357+4
 3989 0e12 FB68     		ldr	r3, [r7, #12]
 3990 0e14 1344     		add	r3, r3, r2
 3991 0e16 8033     		adds	r3, r3, #128
 3992 0e18 0A46     		mov	r2, r1
 3993 0e1a 5A71     		strb	r2, [r3, #5]
 839:.\Protocolo.c **** 							j--;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 88


 3994              		.loc 1 839 0
 3995 0e1c FB68     		ldr	r3, [r7, #12]
 3996 0e1e 013B     		subs	r3, r3, #1
 3997 0e20 FB60     		str	r3, [r7, #12]
 3998 0e22 12E0     		b	.L228
 3999              	.L227:
 840:.\Protocolo.c **** 						}else{
 841:.\Protocolo.c **** 							bufferLCD1.totalVolume3[j]=(Pump_AL_rxBuffer[88+x]&0x0F)+0x30;
 4000              		.loc 1 841 0
 4001 0e24 BB68     		ldr	r3, [r7, #8]
 4002 0e26 5833     		adds	r3, r3, #88
 4003 0e28 744A     		ldr	r2, .L357
 4004 0e2a D35C     		ldrb	r3, [r2, r3]
 4005 0e2c DBB2     		uxtb	r3, r3
 4006 0e2e 03F00F03 		and	r3, r3, #15
 4007 0e32 DBB2     		uxtb	r3, r3
 4008 0e34 3033     		adds	r3, r3, #48
 4009 0e36 D9B2     		uxtb	r1, r3
 4010 0e38 714A     		ldr	r2, .L357+4
 4011 0e3a FB68     		ldr	r3, [r7, #12]
 4012 0e3c 1344     		add	r3, r3, r2
 4013 0e3e 8033     		adds	r3, r3, #128
 4014 0e40 0A46     		mov	r2, r1
 4015 0e42 5A71     		strb	r2, [r3, #5]
 842:.\Protocolo.c **** 							j--;
 4016              		.loc 1 842 0
 4017 0e44 FB68     		ldr	r3, [r7, #12]
 4018 0e46 013B     		subs	r3, r3, #1
 4019 0e48 FB60     		str	r3, [r7, #12]
 4020              	.L228:
 834:.\Protocolo.c **** 						if(x==2){
 4021              		.loc 1 834 0 discriminator 2
 4022 0e4a BB68     		ldr	r3, [r7, #8]
 4023 0e4c 0133     		adds	r3, r3, #1
 4024 0e4e BB60     		str	r3, [r7, #8]
 4025              	.L226:
 834:.\Protocolo.c **** 						if(x==2){
 4026              		.loc 1 834 0 is_stmt 0 discriminator 1
 4027 0e50 BB68     		ldr	r3, [r7, #8]
 4028 0e52 0B2B     		cmp	r3, #11
 4029 0e54 C6D9     		bls	.L229
 843:.\Protocolo.c **** 						}
 844:.\Protocolo.c **** 					}
 845:.\Protocolo.c **** 					bufferLCD1.totalMoney3[0]=12;
 4030              		.loc 1 845 0 is_stmt 1
 4031 0e56 6A4B     		ldr	r3, .L357+4
 4032 0e58 0C22     		movs	r2, #12
 4033 0e5a 83F84920 		strb	r2, [r3, #73]
 846:.\Protocolo.c **** 					j=12;
 4034              		.loc 1 846 0
 4035 0e5e 0C23     		movs	r3, #12
 4036 0e60 FB60     		str	r3, [r7, #12]
 847:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 4037              		.loc 1 847 0
 4038 0e62 0023     		movs	r3, #0
 4039 0e64 BB60     		str	r3, [r7, #8]
 4040 0e66 15E0     		b	.L230
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 89


 4041              	.L231:
 848:.\Protocolo.c **** 						bufferLCD1.totalMoney3[j]=(Pump_AL_rxBuffer[101+x]&0x0F)+0x30;
 4042              		.loc 1 848 0 discriminator 3
 4043 0e68 BB68     		ldr	r3, [r7, #8]
 4044 0e6a 6533     		adds	r3, r3, #101
 4045 0e6c 634A     		ldr	r2, .L357
 4046 0e6e D35C     		ldrb	r3, [r2, r3]
 4047 0e70 DBB2     		uxtb	r3, r3
 4048 0e72 03F00F03 		and	r3, r3, #15
 4049 0e76 DBB2     		uxtb	r3, r3
 4050 0e78 3033     		adds	r3, r3, #48
 4051 0e7a D9B2     		uxtb	r1, r3
 4052 0e7c 604A     		ldr	r2, .L357+4
 4053 0e7e FB68     		ldr	r3, [r7, #12]
 4054 0e80 1344     		add	r3, r3, r2
 4055 0e82 4833     		adds	r3, r3, #72
 4056 0e84 0A46     		mov	r2, r1
 4057 0e86 5A70     		strb	r2, [r3, #1]
 849:.\Protocolo.c **** 						j--;
 4058              		.loc 1 849 0 discriminator 3
 4059 0e88 FB68     		ldr	r3, [r7, #12]
 4060 0e8a 013B     		subs	r3, r3, #1
 4061 0e8c FB60     		str	r3, [r7, #12]
 847:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 4062              		.loc 1 847 0 discriminator 3
 4063 0e8e BB68     		ldr	r3, [r7, #8]
 4064 0e90 0133     		adds	r3, r3, #1
 4065 0e92 BB60     		str	r3, [r7, #8]
 4066              	.L230:
 847:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 4067              		.loc 1 847 0 is_stmt 0 discriminator 1
 4068 0e94 BB68     		ldr	r3, [r7, #8]
 4069 0e96 0B2B     		cmp	r3, #11
 4070 0e98 E6D9     		bls	.L231
 850:.\Protocolo.c **** 					}
 851:.\Protocolo.c ****                     bufferLCD1.ppu3[0]=6;
 4071              		.loc 1 851 0 is_stmt 1
 4072 0e9a 594B     		ldr	r3, .L357+4
 4073 0e9c 0622     		movs	r2, #6
 4074 0e9e 83F8AD20 		strb	r2, [r3, #173]
 852:.\Protocolo.c ****                     j=6;
 4075              		.loc 1 852 0
 4076 0ea2 0623     		movs	r3, #6
 4077 0ea4 FB60     		str	r3, [r7, #12]
 853:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 4078              		.loc 1 853 0
 4079 0ea6 0023     		movs	r3, #0
 4080 0ea8 BB60     		str	r3, [r7, #8]
 4081 0eaa 15E0     		b	.L232
 4082              	.L233:
 854:.\Protocolo.c ****                         bufferLCD1.ppu3[j]=(Pump_AL_rxBuffer[x+114]&0x0F)+0x30;
 4083              		.loc 1 854 0 discriminator 3
 4084 0eac BB68     		ldr	r3, [r7, #8]
 4085 0eae 7233     		adds	r3, r3, #114
 4086 0eb0 524A     		ldr	r2, .L357
 4087 0eb2 D35C     		ldrb	r3, [r2, r3]
 4088 0eb4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 90


 4089 0eb6 03F00F03 		and	r3, r3, #15
 4090 0eba DBB2     		uxtb	r3, r3
 4091 0ebc 3033     		adds	r3, r3, #48
 4092 0ebe D9B2     		uxtb	r1, r3
 4093 0ec0 4F4A     		ldr	r2, .L357+4
 4094 0ec2 FB68     		ldr	r3, [r7, #12]
 4095 0ec4 1344     		add	r3, r3, r2
 4096 0ec6 A833     		adds	r3, r3, #168
 4097 0ec8 0A46     		mov	r2, r1
 4098 0eca 5A71     		strb	r2, [r3, #5]
 855:.\Protocolo.c ****                         j--;
 4099              		.loc 1 855 0 discriminator 3
 4100 0ecc FB68     		ldr	r3, [r7, #12]
 4101 0ece 013B     		subs	r3, r3, #1
 4102 0ed0 FB60     		str	r3, [r7, #12]
 853:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 4103              		.loc 1 853 0 discriminator 3
 4104 0ed2 BB68     		ldr	r3, [r7, #8]
 4105 0ed4 0133     		adds	r3, r3, #1
 4106 0ed6 BB60     		str	r3, [r7, #8]
 4107              	.L232:
 853:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 4108              		.loc 1 853 0 is_stmt 0 discriminator 1
 4109 0ed8 BB68     		ldr	r3, [r7, #8]
 4110 0eda 052B     		cmp	r3, #5
 4111 0edc E6D9     		bls	.L233
 856:.\Protocolo.c ****                     }
 857:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 4112              		.loc 1 857 0 is_stmt 1
 4113 0ede FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 858:.\Protocolo.c **** 					return 3;
 4114              		.loc 1 858 0
 4115 0ee2 0323     		movs	r3, #3
 4116 0ee4 00F070BF 		b	.L140
 4117              	.L209:
 859:.\Protocolo.c **** 				}
 860:.\Protocolo.c **** 				else{
 861:.\Protocolo.c **** 					return 0;
 4118              		.loc 1 861 0
 4119 0ee8 0023     		movs	r3, #0
 4120 0eea 00F06DBF 		b	.L140
 4121              	.L123:
 862:.\Protocolo.c **** 				}
 863:.\Protocolo.c **** 			break;
 864:.\Protocolo.c **** 				
 865:.\Protocolo.c **** 			default:
 866:.\Protocolo.c **** 				return 0;	
 4122              		.loc 1 866 0
 4123 0eee 0023     		movs	r3, #0
 4124 0ef0 00F06ABF 		b	.L140
 4125              	.L120:
 867:.\Protocolo.c **** 			break;		
 868:.\Protocolo.c **** 		}
 869:.\Protocolo.c **** 	}else if(dir==side.b.dir){
 4126              		.loc 1 869 0
 4127 0ef4 434B     		ldr	r3, .L357+8
 4128 0ef6 93F86931 		ldrb	r3, [r3, #361]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 91


 4129 0efa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4130 0efc 9A42     		cmp	r2, r3
 4131 0efe 40F06287 		bne	.L234
 870:.\Protocolo.c ****         side.b.total[0]=Pump_AL_GetRxBufferSize();
 4132              		.loc 1 870 0
 4133 0f02 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 4134 0f06 0346     		mov	r3, r0
 4135 0f08 DAB2     		uxtb	r2, r3
 4136 0f0a 3E4B     		ldr	r3, .L357+8
 4137 0f0c 83F8CD21 		strb	r2, [r3, #461]
 871:.\Protocolo.c ****         for(x=1;x<=side.b.total[0];x++){
 4138              		.loc 1 871 0
 4139 0f10 0123     		movs	r3, #1
 4140 0f12 BB60     		str	r3, [r7, #8]
 4141 0f14 0EE0     		b	.L235
 4142              	.L236:
 872:.\Protocolo.c ****             side.b.total[x]=Pump_AL_rxBuffer[x-1];
 4143              		.loc 1 872 0 discriminator 3
 4144 0f16 BB68     		ldr	r3, [r7, #8]
 4145 0f18 013B     		subs	r3, r3, #1
 4146 0f1a 384A     		ldr	r2, .L357
 4147 0f1c D35C     		ldrb	r3, [r2, r3]
 4148 0f1e D9B2     		uxtb	r1, r3
 4149 0f20 384A     		ldr	r2, .L357+8
 4150 0f22 BB68     		ldr	r3, [r7, #8]
 4151 0f24 1344     		add	r3, r3, r2
 4152 0f26 03F5E473 		add	r3, r3, #456
 4153 0f2a 0A46     		mov	r2, r1
 4154 0f2c 5A71     		strb	r2, [r3, #5]
 871:.\Protocolo.c ****         for(x=1;x<=side.b.total[0];x++){
 4155              		.loc 1 871 0 discriminator 3
 4156 0f2e BB68     		ldr	r3, [r7, #8]
 4157 0f30 0133     		adds	r3, r3, #1
 4158 0f32 BB60     		str	r3, [r7, #8]
 4159              	.L235:
 871:.\Protocolo.c ****         for(x=1;x<=side.b.total[0];x++){
 4160              		.loc 1 871 0 is_stmt 0 discriminator 1
 4161 0f34 334B     		ldr	r3, .L357+8
 4162 0f36 93F8CD31 		ldrb	r3, [r3, #461]	@ zero_extendqisi2
 4163 0f3a 1A46     		mov	r2, r3
 4164 0f3c BB68     		ldr	r3, [r7, #8]
 4165 0f3e 9A42     		cmp	r2, r3
 4166 0f40 E9D2     		bcs	.L236
 873:.\Protocolo.c ****         }
 874:.\Protocolo.c **** 		switch(side.b.total[0]){
 4167              		.loc 1 874 0 is_stmt 1
 4168 0f42 304B     		ldr	r3, .L357+8
 4169 0f44 93F8CD31 		ldrb	r3, [r3, #461]	@ zero_extendqisi2
 4170 0f48 402B     		cmp	r3, #64
 4171 0f4a 00F0C480 		beq	.L238
 4172 0f4e 402B     		cmp	r3, #64
 4173 0f50 06DC     		bgt	.L239
 4174 0f52 222B     		cmp	r3, #34
 4175 0f54 0FD0     		beq	.L240
 4176 0f56 2E2B     		cmp	r3, #46
 4177 0f58 00F0A583 		beq	.L241
 4178 0f5c 00F031BF 		b	.L237
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 92


 4179              	.L239:
 4180 0f60 5E2B     		cmp	r3, #94
 4181 0f62 00F0EA81 		beq	.L242
 4182 0f66 822B     		cmp	r3, #130
 4183 0f68 00F07185 		beq	.L243
 4184 0f6c 582B     		cmp	r3, #88
 4185 0f6e 00F04384 		beq	.L244
 4186 0f72 00F026BF 		b	.L237
 4187              	.L240:
 875:.\Protocolo.c **** 			case 34://5 digitos una manguera
 876:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[33]==0xF0)&&(Pum
 4188              		.loc 1 876 0
 4189 0f76 214B     		ldr	r3, .L357
 4190 0f78 1B78     		ldrb	r3, [r3]
 4191 0f7a DBB2     		uxtb	r3, r3
 4192 0f7c FF2B     		cmp	r3, #255
 4193 0f7e 40F0A780 		bne	.L245
 4194              		.loc 1 876 0 is_stmt 0 discriminator 1
 4195 0f82 1E4B     		ldr	r3, .L357
 4196 0f84 5B78     		ldrb	r3, [r3, #1]
 4197 0f86 DBB2     		uxtb	r3, r3
 4198 0f88 F62B     		cmp	r3, #246
 4199 0f8a 40F0A180 		bne	.L245
 4200              		.loc 1 876 0 discriminator 2
 4201 0f8e 1B4B     		ldr	r3, .L357
 4202 0f90 93F82130 		ldrb	r3, [r3, #33]
 4203 0f94 DBB2     		uxtb	r3, r3
 4204 0f96 F02B     		cmp	r3, #240
 4205 0f98 40F09A80 		bne	.L245
 4206              		.loc 1 876 0 discriminator 3
 4207 0f9c 174B     		ldr	r3, .L357
 4208 0f9e DB78     		ldrb	r3, [r3, #3]
 4209 0fa0 DBB2     		uxtb	r3, r3
 4210 0fa2 F92B     		cmp	r3, #249
 4211 0fa4 40F09480 		bne	.L245
 877:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=9;
 4212              		.loc 1 877 0 is_stmt 1
 4213 0fa8 174B     		ldr	r3, .L357+12
 4214 0faa 0922     		movs	r2, #9
 4215 0fac 83F85D20 		strb	r2, [r3, #93]
 878:.\Protocolo.c **** 					j=9;
 4216              		.loc 1 878 0
 4217 0fb0 0923     		movs	r3, #9
 4218 0fb2 FB60     		str	r3, [r7, #12]
 879:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4219              		.loc 1 879 0
 4220 0fb4 0023     		movs	r3, #0
 4221 0fb6 BB60     		str	r3, [r7, #8]
 4222 0fb8 3EE0     		b	.L246
 4223              	.L249:
 880:.\Protocolo.c **** 						if(x==2){
 4224              		.loc 1 880 0
 4225 0fba BB68     		ldr	r3, [r7, #8]
 4226 0fbc 022B     		cmp	r3, #2
 4227 0fbe 25D1     		bne	.L247
 881:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 4228              		.loc 1 881 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 93


 4229 0fc0 114A     		ldr	r2, .L357+12
 4230 0fc2 FB68     		ldr	r3, [r7, #12]
 4231 0fc4 1344     		add	r3, r3, r2
 4232 0fc6 5833     		adds	r3, r3, #88
 4233 0fc8 2C22     		movs	r2, #44
 4234 0fca 5A71     		strb	r2, [r3, #5]
 882:.\Protocolo.c **** 							j--;
 4235              		.loc 1 882 0
 4236 0fcc FB68     		ldr	r3, [r7, #12]
 4237 0fce 013B     		subs	r3, r3, #1
 4238 0fd0 FB60     		str	r3, [r7, #12]
 883:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 4239              		.loc 1 883 0
 4240 0fd2 BB68     		ldr	r3, [r7, #8]
 4241 0fd4 0433     		adds	r3, r3, #4
 4242 0fd6 094A     		ldr	r2, .L357
 4243 0fd8 D35C     		ldrb	r3, [r2, r3]
 4244 0fda DBB2     		uxtb	r3, r3
 4245 0fdc 03F00F03 		and	r3, r3, #15
 4246 0fe0 DBB2     		uxtb	r3, r3
 4247 0fe2 3033     		adds	r3, r3, #48
 4248 0fe4 D9B2     		uxtb	r1, r3
 4249 0fe6 084A     		ldr	r2, .L357+12
 4250 0fe8 FB68     		ldr	r3, [r7, #12]
 4251 0fea 1344     		add	r3, r3, r2
 4252 0fec 5833     		adds	r3, r3, #88
 4253 0fee 0A46     		mov	r2, r1
 4254 0ff0 5A71     		strb	r2, [r3, #5]
 884:.\Protocolo.c **** 							j--;
 4255              		.loc 1 884 0
 4256 0ff2 FB68     		ldr	r3, [r7, #12]
 4257 0ff4 013B     		subs	r3, r3, #1
 4258 0ff6 FB60     		str	r3, [r7, #12]
 4259 0ff8 1BE0     		b	.L248
 4260              	.L358:
 4261 0ffa 00BF     		.align	2
 4262              	.L357:
 4263 0ffc 00000000 		.word	Pump_AL_rxBuffer
 4264 1000 00000000 		.word	bufferLCD1
 4265 1004 00000000 		.word	side
 4266 1008 00000000 		.word	bufferLCD2
 4267              	.L247:
 885:.\Protocolo.c **** 						}else{
 886:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 4268              		.loc 1 886 0
 4269 100c BB68     		ldr	r3, [r7, #8]
 4270 100e 0433     		adds	r3, r3, #4
 4271 1010 A64A     		ldr	r2, .L359
 4272 1012 D35C     		ldrb	r3, [r2, r3]
 4273 1014 DBB2     		uxtb	r3, r3
 4274 1016 03F00F03 		and	r3, r3, #15
 4275 101a DBB2     		uxtb	r3, r3
 4276 101c 3033     		adds	r3, r3, #48
 4277 101e D9B2     		uxtb	r1, r3
 4278 1020 A34A     		ldr	r2, .L359+4
 4279 1022 FB68     		ldr	r3, [r7, #12]
 4280 1024 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 94


 4281 1026 5833     		adds	r3, r3, #88
 4282 1028 0A46     		mov	r2, r1
 4283 102a 5A71     		strb	r2, [r3, #5]
 887:.\Protocolo.c **** 							j--;
 4284              		.loc 1 887 0
 4285 102c FB68     		ldr	r3, [r7, #12]
 4286 102e 013B     		subs	r3, r3, #1
 4287 1030 FB60     		str	r3, [r7, #12]
 4288              	.L248:
 879:.\Protocolo.c **** 						if(x==2){
 4289              		.loc 1 879 0 discriminator 2
 4290 1032 BB68     		ldr	r3, [r7, #8]
 4291 1034 0133     		adds	r3, r3, #1
 4292 1036 BB60     		str	r3, [r7, #8]
 4293              	.L246:
 879:.\Protocolo.c **** 						if(x==2){
 4294              		.loc 1 879 0 is_stmt 0 discriminator 1
 4295 1038 BB68     		ldr	r3, [r7, #8]
 4296 103a 072B     		cmp	r3, #7
 4297 103c BDD9     		bls	.L249
 888:.\Protocolo.c **** 						}
 889:.\Protocolo.c **** 					}
 890:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=8;
 4298              		.loc 1 890 0 is_stmt 1
 4299 103e 9C4B     		ldr	r3, .L359+4
 4300 1040 0822     		movs	r2, #8
 4301 1042 83F82120 		strb	r2, [r3, #33]
 891:.\Protocolo.c **** 					j=8;
 4302              		.loc 1 891 0
 4303 1046 0823     		movs	r3, #8
 4304 1048 FB60     		str	r3, [r7, #12]
 892:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4305              		.loc 1 892 0
 4306 104a 0023     		movs	r3, #0
 4307 104c BB60     		str	r3, [r7, #8]
 4308 104e 15E0     		b	.L250
 4309              	.L251:
 893:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[x+13]&0x0F)+0x30;
 4310              		.loc 1 893 0 discriminator 3
 4311 1050 BB68     		ldr	r3, [r7, #8]
 4312 1052 0D33     		adds	r3, r3, #13
 4313 1054 954A     		ldr	r2, .L359
 4314 1056 D35C     		ldrb	r3, [r2, r3]
 4315 1058 DBB2     		uxtb	r3, r3
 4316 105a 03F00F03 		and	r3, r3, #15
 4317 105e DBB2     		uxtb	r3, r3
 4318 1060 3033     		adds	r3, r3, #48
 4319 1062 D9B2     		uxtb	r1, r3
 4320 1064 924A     		ldr	r2, .L359+4
 4321 1066 FB68     		ldr	r3, [r7, #12]
 4322 1068 1344     		add	r3, r3, r2
 4323 106a 2033     		adds	r3, r3, #32
 4324 106c 0A46     		mov	r2, r1
 4325 106e 5A70     		strb	r2, [r3, #1]
 894:.\Protocolo.c **** 						j--;
 4326              		.loc 1 894 0 discriminator 3
 4327 1070 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 95


 4328 1072 013B     		subs	r3, r3, #1
 4329 1074 FB60     		str	r3, [r7, #12]
 892:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4330              		.loc 1 892 0 discriminator 3
 4331 1076 BB68     		ldr	r3, [r7, #8]
 4332 1078 0133     		adds	r3, r3, #1
 4333 107a BB60     		str	r3, [r7, #8]
 4334              	.L250:
 892:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4335              		.loc 1 892 0 is_stmt 0 discriminator 1
 4336 107c BB68     		ldr	r3, [r7, #8]
 4337 107e 072B     		cmp	r3, #7
 4338 1080 E6D9     		bls	.L251
 895:.\Protocolo.c **** 					}
 896:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=4;
 4339              		.loc 1 896 0 is_stmt 1
 4340 1082 8B4B     		ldr	r3, .L359+4
 4341 1084 0422     		movs	r2, #4
 4342 1086 83F89920 		strb	r2, [r3, #153]
 897:.\Protocolo.c ****                     j=4;
 4343              		.loc 1 897 0
 4344 108a 0423     		movs	r3, #4
 4345 108c FB60     		str	r3, [r7, #12]
 898:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4346              		.loc 1 898 0
 4347 108e 0023     		movs	r3, #0
 4348 1090 BB60     		str	r3, [r7, #8]
 4349 1092 15E0     		b	.L252
 4350              	.L253:
 899:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 4351              		.loc 1 899 0 discriminator 3
 4352 1094 BB68     		ldr	r3, [r7, #8]
 4353 1096 1633     		adds	r3, r3, #22
 4354 1098 844A     		ldr	r2, .L359
 4355 109a D35C     		ldrb	r3, [r2, r3]
 4356 109c DBB2     		uxtb	r3, r3
 4357 109e 03F00F03 		and	r3, r3, #15
 4358 10a2 DBB2     		uxtb	r3, r3
 4359 10a4 3033     		adds	r3, r3, #48
 4360 10a6 D9B2     		uxtb	r1, r3
 4361 10a8 814A     		ldr	r2, .L359+4
 4362 10aa FB68     		ldr	r3, [r7, #12]
 4363 10ac 1344     		add	r3, r3, r2
 4364 10ae 9833     		adds	r3, r3, #152
 4365 10b0 0A46     		mov	r2, r1
 4366 10b2 5A70     		strb	r2, [r3, #1]
 900:.\Protocolo.c ****                         j--;
 4367              		.loc 1 900 0 discriminator 3
 4368 10b4 FB68     		ldr	r3, [r7, #12]
 4369 10b6 013B     		subs	r3, r3, #1
 4370 10b8 FB60     		str	r3, [r7, #12]
 898:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4371              		.loc 1 898 0 discriminator 3
 4372 10ba BB68     		ldr	r3, [r7, #8]
 4373 10bc 0133     		adds	r3, r3, #1
 4374 10be BB60     		str	r3, [r7, #8]
 4375              	.L252:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 96


 898:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4376              		.loc 1 898 0 is_stmt 0 discriminator 1
 4377 10c0 BB68     		ldr	r3, [r7, #8]
 4378 10c2 032B     		cmp	r3, #3
 4379 10c4 E6D9     		bls	.L253
 901:.\Protocolo.c ****                     }
 902:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 4380              		.loc 1 902 0 is_stmt 1
 4381 10c6 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 903:.\Protocolo.c **** 					return 1;
 4382              		.loc 1 903 0
 4383 10ca 0123     		movs	r3, #1
 4384 10cc 00F07CBE 		b	.L140
 4385              	.L245:
 904:.\Protocolo.c **** 				}
 905:.\Protocolo.c **** 				else{
 906:.\Protocolo.c **** 					return 0;
 4386              		.loc 1 906 0
 4387 10d0 0023     		movs	r3, #0
 4388 10d2 00F079BE 		b	.L140
 4389              	.L238:
 907:.\Protocolo.c **** 				}
 908:.\Protocolo.c **** 			break;
 909:.\Protocolo.c **** 			
 910:.\Protocolo.c **** 			case 64://5 digitos dos mangueras
 911:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[63]==0xF0)&&(Pum
 4390              		.loc 1 911 0
 4391 10d6 754B     		ldr	r3, .L359
 4392 10d8 1B78     		ldrb	r3, [r3]
 4393 10da DBB2     		uxtb	r3, r3
 4394 10dc FF2B     		cmp	r3, #255
 4395 10de 40F02981 		bne	.L254
 4396              		.loc 1 911 0 is_stmt 0 discriminator 1
 4397 10e2 724B     		ldr	r3, .L359
 4398 10e4 5B78     		ldrb	r3, [r3, #1]
 4399 10e6 DBB2     		uxtb	r3, r3
 4400 10e8 F62B     		cmp	r3, #246
 4401 10ea 40F02381 		bne	.L254
 4402              		.loc 1 911 0 discriminator 2
 4403 10ee 6F4B     		ldr	r3, .L359
 4404 10f0 93F83F30 		ldrb	r3, [r3, #63]
 4405 10f4 DBB2     		uxtb	r3, r3
 4406 10f6 F02B     		cmp	r3, #240
 4407 10f8 40F01C81 		bne	.L254
 4408              		.loc 1 911 0 discriminator 3
 4409 10fc 6B4B     		ldr	r3, .L359
 4410 10fe DB78     		ldrb	r3, [r3, #3]
 4411 1100 DBB2     		uxtb	r3, r3
 4412 1102 F92B     		cmp	r3, #249
 4413 1104 40F01681 		bne	.L254
 912:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=9;
 4414              		.loc 1 912 0 is_stmt 1
 4415 1108 694B     		ldr	r3, .L359+4
 4416 110a 0922     		movs	r2, #9
 4417 110c 83F85D20 		strb	r2, [r3, #93]
 913:.\Protocolo.c **** 					j=9;
 4418              		.loc 1 913 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 97


 4419 1110 0923     		movs	r3, #9
 4420 1112 FB60     		str	r3, [r7, #12]
 914:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4421              		.loc 1 914 0
 4422 1114 0023     		movs	r3, #0
 4423 1116 BB60     		str	r3, [r7, #8]
 4424 1118 35E0     		b	.L255
 4425              	.L258:
 915:.\Protocolo.c **** 						if(x==2){
 4426              		.loc 1 915 0
 4427 111a BB68     		ldr	r3, [r7, #8]
 4428 111c 022B     		cmp	r3, #2
 4429 111e 1CD1     		bne	.L256
 916:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 4430              		.loc 1 916 0
 4431 1120 634A     		ldr	r2, .L359+4
 4432 1122 FB68     		ldr	r3, [r7, #12]
 4433 1124 1344     		add	r3, r3, r2
 4434 1126 5833     		adds	r3, r3, #88
 4435 1128 2C22     		movs	r2, #44
 4436 112a 5A71     		strb	r2, [r3, #5]
 917:.\Protocolo.c **** 							j--;
 4437              		.loc 1 917 0
 4438 112c FB68     		ldr	r3, [r7, #12]
 4439 112e 013B     		subs	r3, r3, #1
 4440 1130 FB60     		str	r3, [r7, #12]
 918:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 4441              		.loc 1 918 0
 4442 1132 BB68     		ldr	r3, [r7, #8]
 4443 1134 0433     		adds	r3, r3, #4
 4444 1136 5D4A     		ldr	r2, .L359
 4445 1138 D35C     		ldrb	r3, [r2, r3]
 4446 113a DBB2     		uxtb	r3, r3
 4447 113c 03F00F03 		and	r3, r3, #15
 4448 1140 DBB2     		uxtb	r3, r3
 4449 1142 3033     		adds	r3, r3, #48
 4450 1144 D9B2     		uxtb	r1, r3
 4451 1146 5A4A     		ldr	r2, .L359+4
 4452 1148 FB68     		ldr	r3, [r7, #12]
 4453 114a 1344     		add	r3, r3, r2
 4454 114c 5833     		adds	r3, r3, #88
 4455 114e 0A46     		mov	r2, r1
 4456 1150 5A71     		strb	r2, [r3, #5]
 919:.\Protocolo.c **** 							j--;
 4457              		.loc 1 919 0
 4458 1152 FB68     		ldr	r3, [r7, #12]
 4459 1154 013B     		subs	r3, r3, #1
 4460 1156 FB60     		str	r3, [r7, #12]
 4461 1158 12E0     		b	.L257
 4462              	.L256:
 920:.\Protocolo.c **** 						}else{
 921:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 4463              		.loc 1 921 0
 4464 115a BB68     		ldr	r3, [r7, #8]
 4465 115c 0433     		adds	r3, r3, #4
 4466 115e 534A     		ldr	r2, .L359
 4467 1160 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 98


 4468 1162 DBB2     		uxtb	r3, r3
 4469 1164 03F00F03 		and	r3, r3, #15
 4470 1168 DBB2     		uxtb	r3, r3
 4471 116a 3033     		adds	r3, r3, #48
 4472 116c D9B2     		uxtb	r1, r3
 4473 116e 504A     		ldr	r2, .L359+4
 4474 1170 FB68     		ldr	r3, [r7, #12]
 4475 1172 1344     		add	r3, r3, r2
 4476 1174 5833     		adds	r3, r3, #88
 4477 1176 0A46     		mov	r2, r1
 4478 1178 5A71     		strb	r2, [r3, #5]
 922:.\Protocolo.c **** 							j--;
 4479              		.loc 1 922 0
 4480 117a FB68     		ldr	r3, [r7, #12]
 4481 117c 013B     		subs	r3, r3, #1
 4482 117e FB60     		str	r3, [r7, #12]
 4483              	.L257:
 914:.\Protocolo.c **** 						if(x==2){
 4484              		.loc 1 914 0 discriminator 2
 4485 1180 BB68     		ldr	r3, [r7, #8]
 4486 1182 0133     		adds	r3, r3, #1
 4487 1184 BB60     		str	r3, [r7, #8]
 4488              	.L255:
 914:.\Protocolo.c **** 						if(x==2){
 4489              		.loc 1 914 0 is_stmt 0 discriminator 1
 4490 1186 BB68     		ldr	r3, [r7, #8]
 4491 1188 072B     		cmp	r3, #7
 4492 118a C6D9     		bls	.L258
 923:.\Protocolo.c **** 						}
 924:.\Protocolo.c **** 					}
 925:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=8;
 4493              		.loc 1 925 0 is_stmt 1
 4494 118c 484B     		ldr	r3, .L359+4
 4495 118e 0822     		movs	r2, #8
 4496 1190 83F82120 		strb	r2, [r3, #33]
 926:.\Protocolo.c **** 					j=8;
 4497              		.loc 1 926 0
 4498 1194 0823     		movs	r3, #8
 4499 1196 FB60     		str	r3, [r7, #12]
 927:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4500              		.loc 1 927 0
 4501 1198 0023     		movs	r3, #0
 4502 119a BB60     		str	r3, [r7, #8]
 4503 119c 15E0     		b	.L259
 4504              	.L260:
 928:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[13+x]&0x0F)+0x30;
 4505              		.loc 1 928 0 discriminator 3
 4506 119e BB68     		ldr	r3, [r7, #8]
 4507 11a0 0D33     		adds	r3, r3, #13
 4508 11a2 424A     		ldr	r2, .L359
 4509 11a4 D35C     		ldrb	r3, [r2, r3]
 4510 11a6 DBB2     		uxtb	r3, r3
 4511 11a8 03F00F03 		and	r3, r3, #15
 4512 11ac DBB2     		uxtb	r3, r3
 4513 11ae 3033     		adds	r3, r3, #48
 4514 11b0 D9B2     		uxtb	r1, r3
 4515 11b2 3F4A     		ldr	r2, .L359+4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 99


 4516 11b4 FB68     		ldr	r3, [r7, #12]
 4517 11b6 1344     		add	r3, r3, r2
 4518 11b8 2033     		adds	r3, r3, #32
 4519 11ba 0A46     		mov	r2, r1
 4520 11bc 5A70     		strb	r2, [r3, #1]
 929:.\Protocolo.c **** 						j--;
 4521              		.loc 1 929 0 discriminator 3
 4522 11be FB68     		ldr	r3, [r7, #12]
 4523 11c0 013B     		subs	r3, r3, #1
 4524 11c2 FB60     		str	r3, [r7, #12]
 927:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4525              		.loc 1 927 0 discriminator 3
 4526 11c4 BB68     		ldr	r3, [r7, #8]
 4527 11c6 0133     		adds	r3, r3, #1
 4528 11c8 BB60     		str	r3, [r7, #8]
 4529              	.L259:
 927:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4530              		.loc 1 927 0 is_stmt 0 discriminator 1
 4531 11ca BB68     		ldr	r3, [r7, #8]
 4532 11cc 072B     		cmp	r3, #7
 4533 11ce E6D9     		bls	.L260
 930:.\Protocolo.c **** 					}
 931:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=4;
 4534              		.loc 1 931 0 is_stmt 1
 4535 11d0 374B     		ldr	r3, .L359+4
 4536 11d2 0422     		movs	r2, #4
 4537 11d4 83F89920 		strb	r2, [r3, #153]
 932:.\Protocolo.c ****                     j=4;
 4538              		.loc 1 932 0
 4539 11d8 0423     		movs	r3, #4
 4540 11da FB60     		str	r3, [r7, #12]
 933:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4541              		.loc 1 933 0
 4542 11dc 0023     		movs	r3, #0
 4543 11de BB60     		str	r3, [r7, #8]
 4544 11e0 15E0     		b	.L261
 4545              	.L262:
 934:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 4546              		.loc 1 934 0 discriminator 3
 4547 11e2 BB68     		ldr	r3, [r7, #8]
 4548 11e4 1633     		adds	r3, r3, #22
 4549 11e6 314A     		ldr	r2, .L359
 4550 11e8 D35C     		ldrb	r3, [r2, r3]
 4551 11ea DBB2     		uxtb	r3, r3
 4552 11ec 03F00F03 		and	r3, r3, #15
 4553 11f0 DBB2     		uxtb	r3, r3
 4554 11f2 3033     		adds	r3, r3, #48
 4555 11f4 D9B2     		uxtb	r1, r3
 4556 11f6 2E4A     		ldr	r2, .L359+4
 4557 11f8 FB68     		ldr	r3, [r7, #12]
 4558 11fa 1344     		add	r3, r3, r2
 4559 11fc 9833     		adds	r3, r3, #152
 4560 11fe 0A46     		mov	r2, r1
 4561 1200 5A70     		strb	r2, [r3, #1]
 935:.\Protocolo.c ****                         j--;
 4562              		.loc 1 935 0 discriminator 3
 4563 1202 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 100


 4564 1204 013B     		subs	r3, r3, #1
 4565 1206 FB60     		str	r3, [r7, #12]
 933:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4566              		.loc 1 933 0 discriminator 3
 4567 1208 BB68     		ldr	r3, [r7, #8]
 4568 120a 0133     		adds	r3, r3, #1
 4569 120c BB60     		str	r3, [r7, #8]
 4570              	.L261:
 933:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4571              		.loc 1 933 0 is_stmt 0 discriminator 1
 4572 120e BB68     		ldr	r3, [r7, #8]
 4573 1210 032B     		cmp	r3, #3
 4574 1212 E6D9     		bls	.L262
 936:.\Protocolo.c ****                     }
 937:.\Protocolo.c **** 					bufferLCD2.totalVolume2[0]=9;
 4575              		.loc 1 937 0 is_stmt 1
 4576 1214 264B     		ldr	r3, .L359+4
 4577 1216 0922     		movs	r2, #9
 4578 1218 83F87120 		strb	r2, [r3, #113]
 938:.\Protocolo.c **** 					j=9;
 4579              		.loc 1 938 0
 4580 121c 0923     		movs	r3, #9
 4581 121e FB60     		str	r3, [r7, #12]
 939:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4582              		.loc 1 939 0
 4583 1220 0023     		movs	r3, #0
 4584 1222 BB60     		str	r3, [r7, #8]
 4585 1224 35E0     		b	.L263
 4586              	.L266:
 940:.\Protocolo.c **** 						if(x==2){
 4587              		.loc 1 940 0
 4588 1226 BB68     		ldr	r3, [r7, #8]
 4589 1228 022B     		cmp	r3, #2
 4590 122a 1CD1     		bne	.L264
 941:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=',';
 4591              		.loc 1 941 0
 4592 122c 204A     		ldr	r2, .L359+4
 4593 122e FB68     		ldr	r3, [r7, #12]
 4594 1230 1344     		add	r3, r3, r2
 4595 1232 7033     		adds	r3, r3, #112
 4596 1234 2C22     		movs	r2, #44
 4597 1236 5A70     		strb	r2, [r3, #1]
 942:.\Protocolo.c **** 							j--;
 4598              		.loc 1 942 0
 4599 1238 FB68     		ldr	r3, [r7, #12]
 4600 123a 013B     		subs	r3, r3, #1
 4601 123c FB60     		str	r3, [r7, #12]
 943:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 4602              		.loc 1 943 0
 4603 123e BB68     		ldr	r3, [r7, #8]
 4604 1240 2233     		adds	r3, r3, #34
 4605 1242 1A4A     		ldr	r2, .L359
 4606 1244 D35C     		ldrb	r3, [r2, r3]
 4607 1246 DBB2     		uxtb	r3, r3
 4608 1248 03F00F03 		and	r3, r3, #15
 4609 124c DBB2     		uxtb	r3, r3
 4610 124e 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 101


 4611 1250 D9B2     		uxtb	r1, r3
 4612 1252 174A     		ldr	r2, .L359+4
 4613 1254 FB68     		ldr	r3, [r7, #12]
 4614 1256 1344     		add	r3, r3, r2
 4615 1258 7033     		adds	r3, r3, #112
 4616 125a 0A46     		mov	r2, r1
 4617 125c 5A70     		strb	r2, [r3, #1]
 944:.\Protocolo.c **** 							j--;
 4618              		.loc 1 944 0
 4619 125e FB68     		ldr	r3, [r7, #12]
 4620 1260 013B     		subs	r3, r3, #1
 4621 1262 FB60     		str	r3, [r7, #12]
 4622 1264 12E0     		b	.L265
 4623              	.L264:
 945:.\Protocolo.c **** 						}else{
 946:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 4624              		.loc 1 946 0
 4625 1266 BB68     		ldr	r3, [r7, #8]
 4626 1268 2233     		adds	r3, r3, #34
 4627 126a 104A     		ldr	r2, .L359
 4628 126c D35C     		ldrb	r3, [r2, r3]
 4629 126e DBB2     		uxtb	r3, r3
 4630 1270 03F00F03 		and	r3, r3, #15
 4631 1274 DBB2     		uxtb	r3, r3
 4632 1276 3033     		adds	r3, r3, #48
 4633 1278 D9B2     		uxtb	r1, r3
 4634 127a 0D4A     		ldr	r2, .L359+4
 4635 127c FB68     		ldr	r3, [r7, #12]
 4636 127e 1344     		add	r3, r3, r2
 4637 1280 7033     		adds	r3, r3, #112
 4638 1282 0A46     		mov	r2, r1
 4639 1284 5A70     		strb	r2, [r3, #1]
 947:.\Protocolo.c **** 							j--;
 4640              		.loc 1 947 0
 4641 1286 FB68     		ldr	r3, [r7, #12]
 4642 1288 013B     		subs	r3, r3, #1
 4643 128a FB60     		str	r3, [r7, #12]
 4644              	.L265:
 939:.\Protocolo.c **** 						if(x==2){
 4645              		.loc 1 939 0 discriminator 2
 4646 128c BB68     		ldr	r3, [r7, #8]
 4647 128e 0133     		adds	r3, r3, #1
 4648 1290 BB60     		str	r3, [r7, #8]
 4649              	.L263:
 939:.\Protocolo.c **** 						if(x==2){
 4650              		.loc 1 939 0 is_stmt 0 discriminator 1
 4651 1292 BB68     		ldr	r3, [r7, #8]
 4652 1294 072B     		cmp	r3, #7
 4653 1296 C6D9     		bls	.L266
 948:.\Protocolo.c **** 						}
 949:.\Protocolo.c **** 					}
 950:.\Protocolo.c **** 					bufferLCD2.totalMoney2[0]=8;
 4654              		.loc 1 950 0 is_stmt 1
 4655 1298 054B     		ldr	r3, .L359+4
 4656 129a 0822     		movs	r2, #8
 4657 129c 83F83520 		strb	r2, [r3, #53]
 951:.\Protocolo.c **** 					j=8;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 102


 4658              		.loc 1 951 0
 4659 12a0 0823     		movs	r3, #8
 4660 12a2 FB60     		str	r3, [r7, #12]
 952:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4661              		.loc 1 952 0
 4662 12a4 0023     		movs	r3, #0
 4663 12a6 BB60     		str	r3, [r7, #8]
 4664 12a8 1AE0     		b	.L267
 4665              	.L360:
 4666 12aa 00BF     		.align	2
 4667              	.L359:
 4668 12ac 00000000 		.word	Pump_AL_rxBuffer
 4669 12b0 00000000 		.word	bufferLCD2
 4670              	.L268:
 953:.\Protocolo.c **** 						bufferLCD2.totalMoney2[j]=(Pump_AL_rxBuffer[43+x]&0x0F)+0x30;
 4671              		.loc 1 953 0 discriminator 3
 4672 12b4 BB68     		ldr	r3, [r7, #8]
 4673 12b6 2B33     		adds	r3, r3, #43
 4674 12b8 A64A     		ldr	r2, .L361
 4675 12ba D35C     		ldrb	r3, [r2, r3]
 4676 12bc DBB2     		uxtb	r3, r3
 4677 12be 03F00F03 		and	r3, r3, #15
 4678 12c2 DBB2     		uxtb	r3, r3
 4679 12c4 3033     		adds	r3, r3, #48
 4680 12c6 D9B2     		uxtb	r1, r3
 4681 12c8 A34A     		ldr	r2, .L361+4
 4682 12ca FB68     		ldr	r3, [r7, #12]
 4683 12cc 1344     		add	r3, r3, r2
 4684 12ce 3033     		adds	r3, r3, #48
 4685 12d0 0A46     		mov	r2, r1
 4686 12d2 5A71     		strb	r2, [r3, #5]
 954:.\Protocolo.c **** 						j--;
 4687              		.loc 1 954 0 discriminator 3
 4688 12d4 FB68     		ldr	r3, [r7, #12]
 4689 12d6 013B     		subs	r3, r3, #1
 4690 12d8 FB60     		str	r3, [r7, #12]
 952:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4691              		.loc 1 952 0 discriminator 3
 4692 12da BB68     		ldr	r3, [r7, #8]
 4693 12dc 0133     		adds	r3, r3, #1
 4694 12de BB60     		str	r3, [r7, #8]
 4695              	.L267:
 952:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4696              		.loc 1 952 0 is_stmt 0 discriminator 1
 4697 12e0 BB68     		ldr	r3, [r7, #8]
 4698 12e2 072B     		cmp	r3, #7
 4699 12e4 E6D9     		bls	.L268
 955:.\Protocolo.c **** 					}
 956:.\Protocolo.c ****                     bufferLCD2.ppu2[0]=4;
 4700              		.loc 1 956 0 is_stmt 1
 4701 12e6 9C4B     		ldr	r3, .L361+4
 4702 12e8 0422     		movs	r2, #4
 4703 12ea 83F8A320 		strb	r2, [r3, #163]
 957:.\Protocolo.c ****                     j=4;
 4704              		.loc 1 957 0
 4705 12ee 0423     		movs	r3, #4
 4706 12f0 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 103


 958:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4707              		.loc 1 958 0
 4708 12f2 0023     		movs	r3, #0
 4709 12f4 BB60     		str	r3, [r7, #8]
 4710 12f6 15E0     		b	.L269
 4711              	.L270:
 959:.\Protocolo.c ****                         bufferLCD2.ppu2[j]=(Pump_AL_rxBuffer[x+52]&0x0F)+0x30;
 4712              		.loc 1 959 0 discriminator 3
 4713 12f8 BB68     		ldr	r3, [r7, #8]
 4714 12fa 3433     		adds	r3, r3, #52
 4715 12fc 954A     		ldr	r2, .L361
 4716 12fe D35C     		ldrb	r3, [r2, r3]
 4717 1300 DBB2     		uxtb	r3, r3
 4718 1302 03F00F03 		and	r3, r3, #15
 4719 1306 DBB2     		uxtb	r3, r3
 4720 1308 3033     		adds	r3, r3, #48
 4721 130a D9B2     		uxtb	r1, r3
 4722 130c 924A     		ldr	r2, .L361+4
 4723 130e FB68     		ldr	r3, [r7, #12]
 4724 1310 1344     		add	r3, r3, r2
 4725 1312 A033     		adds	r3, r3, #160
 4726 1314 0A46     		mov	r2, r1
 4727 1316 DA70     		strb	r2, [r3, #3]
 960:.\Protocolo.c ****                         j--;
 4728              		.loc 1 960 0 discriminator 3
 4729 1318 FB68     		ldr	r3, [r7, #12]
 4730 131a 013B     		subs	r3, r3, #1
 4731 131c FB60     		str	r3, [r7, #12]
 958:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4732              		.loc 1 958 0 discriminator 3
 4733 131e BB68     		ldr	r3, [r7, #8]
 4734 1320 0133     		adds	r3, r3, #1
 4735 1322 BB60     		str	r3, [r7, #8]
 4736              	.L269:
 958:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4737              		.loc 1 958 0 is_stmt 0 discriminator 1
 4738 1324 BB68     		ldr	r3, [r7, #8]
 4739 1326 032B     		cmp	r3, #3
 4740 1328 E6D9     		bls	.L270
 961:.\Protocolo.c ****                     }
 962:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 4741              		.loc 1 962 0 is_stmt 1
 4742 132a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 963:.\Protocolo.c **** 					return 2;
 4743              		.loc 1 963 0
 4744 132e 0223     		movs	r3, #2
 4745 1330 00F04ABD 		b	.L140
 4746              	.L254:
 964:.\Protocolo.c **** 				}			
 965:.\Protocolo.c **** 				else{
 966:.\Protocolo.c **** 					return 0;
 4747              		.loc 1 966 0
 4748 1334 0023     		movs	r3, #0
 4749 1336 00F047BD 		b	.L140
 4750              	.L242:
 967:.\Protocolo.c **** 				}
 968:.\Protocolo.c **** 			break;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 104


 969:.\Protocolo.c **** 				
 970:.\Protocolo.c **** 			case 94://5 digitos tres mangueras
 971:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[93]==0xF0)&&(Pum
 4751              		.loc 1 971 0
 4752 133a 864B     		ldr	r3, .L361
 4753 133c 1B78     		ldrb	r3, [r3]
 4754 133e DBB2     		uxtb	r3, r3
 4755 1340 FF2B     		cmp	r3, #255
 4756 1342 40F0AE81 		bne	.L271
 4757              		.loc 1 971 0 is_stmt 0 discriminator 1
 4758 1346 834B     		ldr	r3, .L361
 4759 1348 5B78     		ldrb	r3, [r3, #1]
 4760 134a DBB2     		uxtb	r3, r3
 4761 134c F62B     		cmp	r3, #246
 4762 134e 40F0A881 		bne	.L271
 4763              		.loc 1 971 0 discriminator 2
 4764 1352 804B     		ldr	r3, .L361
 4765 1354 93F85D30 		ldrb	r3, [r3, #93]
 4766 1358 DBB2     		uxtb	r3, r3
 4767 135a F02B     		cmp	r3, #240
 4768 135c 40F0A181 		bne	.L271
 4769              		.loc 1 971 0 discriminator 3
 4770 1360 7C4B     		ldr	r3, .L361
 4771 1362 DB78     		ldrb	r3, [r3, #3]
 4772 1364 DBB2     		uxtb	r3, r3
 4773 1366 F92B     		cmp	r3, #249
 4774 1368 40F09B81 		bne	.L271
 972:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=9;
 4775              		.loc 1 972 0 is_stmt 1
 4776 136c 7A4B     		ldr	r3, .L361+4
 4777 136e 0922     		movs	r2, #9
 4778 1370 83F85D20 		strb	r2, [r3, #93]
 973:.\Protocolo.c **** 					j=9;
 4779              		.loc 1 973 0
 4780 1374 0923     		movs	r3, #9
 4781 1376 FB60     		str	r3, [r7, #12]
 974:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4782              		.loc 1 974 0
 4783 1378 0023     		movs	r3, #0
 4784 137a BB60     		str	r3, [r7, #8]
 4785 137c 35E0     		b	.L272
 4786              	.L275:
 975:.\Protocolo.c **** 						if(x==2){
 4787              		.loc 1 975 0
 4788 137e BB68     		ldr	r3, [r7, #8]
 4789 1380 022B     		cmp	r3, #2
 4790 1382 1CD1     		bne	.L273
 976:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 4791              		.loc 1 976 0
 4792 1384 744A     		ldr	r2, .L361+4
 4793 1386 FB68     		ldr	r3, [r7, #12]
 4794 1388 1344     		add	r3, r3, r2
 4795 138a 5833     		adds	r3, r3, #88
 4796 138c 2C22     		movs	r2, #44
 4797 138e 5A71     		strb	r2, [r3, #5]
 977:.\Protocolo.c **** 							j--;
 4798              		.loc 1 977 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 105


 4799 1390 FB68     		ldr	r3, [r7, #12]
 4800 1392 013B     		subs	r3, r3, #1
 4801 1394 FB60     		str	r3, [r7, #12]
 978:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 4802              		.loc 1 978 0
 4803 1396 BB68     		ldr	r3, [r7, #8]
 4804 1398 0433     		adds	r3, r3, #4
 4805 139a 6E4A     		ldr	r2, .L361
 4806 139c D35C     		ldrb	r3, [r2, r3]
 4807 139e DBB2     		uxtb	r3, r3
 4808 13a0 03F00F03 		and	r3, r3, #15
 4809 13a4 DBB2     		uxtb	r3, r3
 4810 13a6 3033     		adds	r3, r3, #48
 4811 13a8 D9B2     		uxtb	r1, r3
 4812 13aa 6B4A     		ldr	r2, .L361+4
 4813 13ac FB68     		ldr	r3, [r7, #12]
 4814 13ae 1344     		add	r3, r3, r2
 4815 13b0 5833     		adds	r3, r3, #88
 4816 13b2 0A46     		mov	r2, r1
 4817 13b4 5A71     		strb	r2, [r3, #5]
 979:.\Protocolo.c **** 							j--;
 4818              		.loc 1 979 0
 4819 13b6 FB68     		ldr	r3, [r7, #12]
 4820 13b8 013B     		subs	r3, r3, #1
 4821 13ba FB60     		str	r3, [r7, #12]
 4822 13bc 12E0     		b	.L274
 4823              	.L273:
 980:.\Protocolo.c **** 						}else{
 981:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 4824              		.loc 1 981 0
 4825 13be BB68     		ldr	r3, [r7, #8]
 4826 13c0 0433     		adds	r3, r3, #4
 4827 13c2 644A     		ldr	r2, .L361
 4828 13c4 D35C     		ldrb	r3, [r2, r3]
 4829 13c6 DBB2     		uxtb	r3, r3
 4830 13c8 03F00F03 		and	r3, r3, #15
 4831 13cc DBB2     		uxtb	r3, r3
 4832 13ce 3033     		adds	r3, r3, #48
 4833 13d0 D9B2     		uxtb	r1, r3
 4834 13d2 614A     		ldr	r2, .L361+4
 4835 13d4 FB68     		ldr	r3, [r7, #12]
 4836 13d6 1344     		add	r3, r3, r2
 4837 13d8 5833     		adds	r3, r3, #88
 4838 13da 0A46     		mov	r2, r1
 4839 13dc 5A71     		strb	r2, [r3, #5]
 982:.\Protocolo.c **** 							j--;
 4840              		.loc 1 982 0
 4841 13de FB68     		ldr	r3, [r7, #12]
 4842 13e0 013B     		subs	r3, r3, #1
 4843 13e2 FB60     		str	r3, [r7, #12]
 4844              	.L274:
 974:.\Protocolo.c **** 						if(x==2){
 4845              		.loc 1 974 0 discriminator 2
 4846 13e4 BB68     		ldr	r3, [r7, #8]
 4847 13e6 0133     		adds	r3, r3, #1
 4848 13e8 BB60     		str	r3, [r7, #8]
 4849              	.L272:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 106


 974:.\Protocolo.c **** 						if(x==2){
 4850              		.loc 1 974 0 is_stmt 0 discriminator 1
 4851 13ea BB68     		ldr	r3, [r7, #8]
 4852 13ec 072B     		cmp	r3, #7
 4853 13ee C6D9     		bls	.L275
 983:.\Protocolo.c **** 						}
 984:.\Protocolo.c **** 					}
 985:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=8;
 4854              		.loc 1 985 0 is_stmt 1
 4855 13f0 594B     		ldr	r3, .L361+4
 4856 13f2 0822     		movs	r2, #8
 4857 13f4 83F82120 		strb	r2, [r3, #33]
 986:.\Protocolo.c **** 					j=8;
 4858              		.loc 1 986 0
 4859 13f8 0823     		movs	r3, #8
 4860 13fa FB60     		str	r3, [r7, #12]
 987:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4861              		.loc 1 987 0
 4862 13fc 0023     		movs	r3, #0
 4863 13fe BB60     		str	r3, [r7, #8]
 4864 1400 15E0     		b	.L276
 4865              	.L277:
 988:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[13+x]&0x0F)+0x30;
 4866              		.loc 1 988 0 discriminator 3
 4867 1402 BB68     		ldr	r3, [r7, #8]
 4868 1404 0D33     		adds	r3, r3, #13
 4869 1406 534A     		ldr	r2, .L361
 4870 1408 D35C     		ldrb	r3, [r2, r3]
 4871 140a DBB2     		uxtb	r3, r3
 4872 140c 03F00F03 		and	r3, r3, #15
 4873 1410 DBB2     		uxtb	r3, r3
 4874 1412 3033     		adds	r3, r3, #48
 4875 1414 D9B2     		uxtb	r1, r3
 4876 1416 504A     		ldr	r2, .L361+4
 4877 1418 FB68     		ldr	r3, [r7, #12]
 4878 141a 1344     		add	r3, r3, r2
 4879 141c 2033     		adds	r3, r3, #32
 4880 141e 0A46     		mov	r2, r1
 4881 1420 5A70     		strb	r2, [r3, #1]
 989:.\Protocolo.c **** 						j--;
 4882              		.loc 1 989 0 discriminator 3
 4883 1422 FB68     		ldr	r3, [r7, #12]
 4884 1424 013B     		subs	r3, r3, #1
 4885 1426 FB60     		str	r3, [r7, #12]
 987:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4886              		.loc 1 987 0 discriminator 3
 4887 1428 BB68     		ldr	r3, [r7, #8]
 4888 142a 0133     		adds	r3, r3, #1
 4889 142c BB60     		str	r3, [r7, #8]
 4890              	.L276:
 987:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4891              		.loc 1 987 0 is_stmt 0 discriminator 1
 4892 142e BB68     		ldr	r3, [r7, #8]
 4893 1430 072B     		cmp	r3, #7
 4894 1432 E6D9     		bls	.L277
 990:.\Protocolo.c **** 					}
 991:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=4;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 107


 4895              		.loc 1 991 0 is_stmt 1
 4896 1434 484B     		ldr	r3, .L361+4
 4897 1436 0422     		movs	r2, #4
 4898 1438 83F89920 		strb	r2, [r3, #153]
 992:.\Protocolo.c ****                     j=4;
 4899              		.loc 1 992 0
 4900 143c 0423     		movs	r3, #4
 4901 143e FB60     		str	r3, [r7, #12]
 993:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4902              		.loc 1 993 0
 4903 1440 0023     		movs	r3, #0
 4904 1442 BB60     		str	r3, [r7, #8]
 4905 1444 15E0     		b	.L278
 4906              	.L279:
 994:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+22]&0x0F)+0x30;
 4907              		.loc 1 994 0 discriminator 3
 4908 1446 BB68     		ldr	r3, [r7, #8]
 4909 1448 1633     		adds	r3, r3, #22
 4910 144a 424A     		ldr	r2, .L361
 4911 144c D35C     		ldrb	r3, [r2, r3]
 4912 144e DBB2     		uxtb	r3, r3
 4913 1450 03F00F03 		and	r3, r3, #15
 4914 1454 DBB2     		uxtb	r3, r3
 4915 1456 3033     		adds	r3, r3, #48
 4916 1458 D9B2     		uxtb	r1, r3
 4917 145a 3F4A     		ldr	r2, .L361+4
 4918 145c FB68     		ldr	r3, [r7, #12]
 4919 145e 1344     		add	r3, r3, r2
 4920 1460 9833     		adds	r3, r3, #152
 4921 1462 0A46     		mov	r2, r1
 4922 1464 5A70     		strb	r2, [r3, #1]
 995:.\Protocolo.c ****                         j--;
 4923              		.loc 1 995 0 discriminator 3
 4924 1466 FB68     		ldr	r3, [r7, #12]
 4925 1468 013B     		subs	r3, r3, #1
 4926 146a FB60     		str	r3, [r7, #12]
 993:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4927              		.loc 1 993 0 discriminator 3
 4928 146c BB68     		ldr	r3, [r7, #8]
 4929 146e 0133     		adds	r3, r3, #1
 4930 1470 BB60     		str	r3, [r7, #8]
 4931              	.L278:
 993:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 4932              		.loc 1 993 0 is_stmt 0 discriminator 1
 4933 1472 BB68     		ldr	r3, [r7, #8]
 4934 1474 032B     		cmp	r3, #3
 4935 1476 E6D9     		bls	.L279
 996:.\Protocolo.c ****                     }
 997:.\Protocolo.c **** 					bufferLCD2.totalVolume2[0]=9;
 4936              		.loc 1 997 0 is_stmt 1
 4937 1478 374B     		ldr	r3, .L361+4
 4938 147a 0922     		movs	r2, #9
 4939 147c 83F87120 		strb	r2, [r3, #113]
 998:.\Protocolo.c **** 					j=9;
 4940              		.loc 1 998 0
 4941 1480 0923     		movs	r3, #9
 4942 1482 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 108


 999:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 4943              		.loc 1 999 0
 4944 1484 0023     		movs	r3, #0
 4945 1486 BB60     		str	r3, [r7, #8]
 4946 1488 35E0     		b	.L280
 4947              	.L283:
1000:.\Protocolo.c **** 						if(x==2){
 4948              		.loc 1 1000 0
 4949 148a BB68     		ldr	r3, [r7, #8]
 4950 148c 022B     		cmp	r3, #2
 4951 148e 1CD1     		bne	.L281
1001:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=',';
 4952              		.loc 1 1001 0
 4953 1490 314A     		ldr	r2, .L361+4
 4954 1492 FB68     		ldr	r3, [r7, #12]
 4955 1494 1344     		add	r3, r3, r2
 4956 1496 7033     		adds	r3, r3, #112
 4957 1498 2C22     		movs	r2, #44
 4958 149a 5A70     		strb	r2, [r3, #1]
1002:.\Protocolo.c **** 							j--;
 4959              		.loc 1 1002 0
 4960 149c FB68     		ldr	r3, [r7, #12]
 4961 149e 013B     		subs	r3, r3, #1
 4962 14a0 FB60     		str	r3, [r7, #12]
1003:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 4963              		.loc 1 1003 0
 4964 14a2 BB68     		ldr	r3, [r7, #8]
 4965 14a4 2233     		adds	r3, r3, #34
 4966 14a6 2B4A     		ldr	r2, .L361
 4967 14a8 D35C     		ldrb	r3, [r2, r3]
 4968 14aa DBB2     		uxtb	r3, r3
 4969 14ac 03F00F03 		and	r3, r3, #15
 4970 14b0 DBB2     		uxtb	r3, r3
 4971 14b2 3033     		adds	r3, r3, #48
 4972 14b4 D9B2     		uxtb	r1, r3
 4973 14b6 284A     		ldr	r2, .L361+4
 4974 14b8 FB68     		ldr	r3, [r7, #12]
 4975 14ba 1344     		add	r3, r3, r2
 4976 14bc 7033     		adds	r3, r3, #112
 4977 14be 0A46     		mov	r2, r1
 4978 14c0 5A70     		strb	r2, [r3, #1]
1004:.\Protocolo.c **** 							j--;
 4979              		.loc 1 1004 0
 4980 14c2 FB68     		ldr	r3, [r7, #12]
 4981 14c4 013B     		subs	r3, r3, #1
 4982 14c6 FB60     		str	r3, [r7, #12]
 4983 14c8 12E0     		b	.L282
 4984              	.L281:
1005:.\Protocolo.c **** 						}else{
1006:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[34+x]&0x0F)+0x30;
 4985              		.loc 1 1006 0
 4986 14ca BB68     		ldr	r3, [r7, #8]
 4987 14cc 2233     		adds	r3, r3, #34
 4988 14ce 214A     		ldr	r2, .L361
 4989 14d0 D35C     		ldrb	r3, [r2, r3]
 4990 14d2 DBB2     		uxtb	r3, r3
 4991 14d4 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 109


 4992 14d8 DBB2     		uxtb	r3, r3
 4993 14da 3033     		adds	r3, r3, #48
 4994 14dc D9B2     		uxtb	r1, r3
 4995 14de 1E4A     		ldr	r2, .L361+4
 4996 14e0 FB68     		ldr	r3, [r7, #12]
 4997 14e2 1344     		add	r3, r3, r2
 4998 14e4 7033     		adds	r3, r3, #112
 4999 14e6 0A46     		mov	r2, r1
 5000 14e8 5A70     		strb	r2, [r3, #1]
1007:.\Protocolo.c **** 							j--;
 5001              		.loc 1 1007 0
 5002 14ea FB68     		ldr	r3, [r7, #12]
 5003 14ec 013B     		subs	r3, r3, #1
 5004 14ee FB60     		str	r3, [r7, #12]
 5005              	.L282:
 999:.\Protocolo.c **** 						if(x==2){
 5006              		.loc 1 999 0 discriminator 2
 5007 14f0 BB68     		ldr	r3, [r7, #8]
 5008 14f2 0133     		adds	r3, r3, #1
 5009 14f4 BB60     		str	r3, [r7, #8]
 5010              	.L280:
 999:.\Protocolo.c **** 						if(x==2){
 5011              		.loc 1 999 0 is_stmt 0 discriminator 1
 5012 14f6 BB68     		ldr	r3, [r7, #8]
 5013 14f8 072B     		cmp	r3, #7
 5014 14fa C6D9     		bls	.L283
1008:.\Protocolo.c **** 						}
1009:.\Protocolo.c **** 					}
1010:.\Protocolo.c **** 					bufferLCD2.totalMoney2[0]=8;
 5015              		.loc 1 1010 0 is_stmt 1
 5016 14fc 164B     		ldr	r3, .L361+4
 5017 14fe 0822     		movs	r2, #8
 5018 1500 83F83520 		strb	r2, [r3, #53]
1011:.\Protocolo.c **** 					j=8;
 5019              		.loc 1 1011 0
 5020 1504 0823     		movs	r3, #8
 5021 1506 FB60     		str	r3, [r7, #12]
1012:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5022              		.loc 1 1012 0
 5023 1508 0023     		movs	r3, #0
 5024 150a BB60     		str	r3, [r7, #8]
 5025 150c 15E0     		b	.L284
 5026              	.L285:
1013:.\Protocolo.c **** 						bufferLCD2.totalMoney2[j]=(Pump_AL_rxBuffer[43+x]&0x0F)+0x30;
 5027              		.loc 1 1013 0 discriminator 3
 5028 150e BB68     		ldr	r3, [r7, #8]
 5029 1510 2B33     		adds	r3, r3, #43
 5030 1512 104A     		ldr	r2, .L361
 5031 1514 D35C     		ldrb	r3, [r2, r3]
 5032 1516 DBB2     		uxtb	r3, r3
 5033 1518 03F00F03 		and	r3, r3, #15
 5034 151c DBB2     		uxtb	r3, r3
 5035 151e 3033     		adds	r3, r3, #48
 5036 1520 D9B2     		uxtb	r1, r3
 5037 1522 0D4A     		ldr	r2, .L361+4
 5038 1524 FB68     		ldr	r3, [r7, #12]
 5039 1526 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 110


 5040 1528 3033     		adds	r3, r3, #48
 5041 152a 0A46     		mov	r2, r1
 5042 152c 5A71     		strb	r2, [r3, #5]
1014:.\Protocolo.c **** 						j--;
 5043              		.loc 1 1014 0 discriminator 3
 5044 152e FB68     		ldr	r3, [r7, #12]
 5045 1530 013B     		subs	r3, r3, #1
 5046 1532 FB60     		str	r3, [r7, #12]
1012:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5047              		.loc 1 1012 0 discriminator 3
 5048 1534 BB68     		ldr	r3, [r7, #8]
 5049 1536 0133     		adds	r3, r3, #1
 5050 1538 BB60     		str	r3, [r7, #8]
 5051              	.L284:
1012:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5052              		.loc 1 1012 0 is_stmt 0 discriminator 1
 5053 153a BB68     		ldr	r3, [r7, #8]
 5054 153c 072B     		cmp	r3, #7
 5055 153e E6D9     		bls	.L285
1015:.\Protocolo.c **** 					}
1016:.\Protocolo.c ****                     bufferLCD2.ppu2[0]=4;
 5056              		.loc 1 1016 0 is_stmt 1
 5057 1540 054B     		ldr	r3, .L361+4
 5058 1542 0422     		movs	r2, #4
 5059 1544 83F8A320 		strb	r2, [r3, #163]
1017:.\Protocolo.c ****                     j=4;
 5060              		.loc 1 1017 0
 5061 1548 0423     		movs	r3, #4
 5062 154a FB60     		str	r3, [r7, #12]
1018:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5063              		.loc 1 1018 0
 5064 154c 0023     		movs	r3, #0
 5065 154e BB60     		str	r3, [r7, #8]
 5066 1550 1AE0     		b	.L286
 5067              	.L362:
 5068 1552 00BF     		.align	2
 5069              	.L361:
 5070 1554 00000000 		.word	Pump_AL_rxBuffer
 5071 1558 00000000 		.word	bufferLCD2
 5072              	.L287:
1019:.\Protocolo.c ****                         bufferLCD2.ppu2[j]=(Pump_AL_rxBuffer[x+52]&0x0F)+0x30;
 5073              		.loc 1 1019 0 discriminator 3
 5074 155c BB68     		ldr	r3, [r7, #8]
 5075 155e 3433     		adds	r3, r3, #52
 5076 1560 A34A     		ldr	r2, .L363
 5077 1562 D35C     		ldrb	r3, [r2, r3]
 5078 1564 DBB2     		uxtb	r3, r3
 5079 1566 03F00F03 		and	r3, r3, #15
 5080 156a DBB2     		uxtb	r3, r3
 5081 156c 3033     		adds	r3, r3, #48
 5082 156e D9B2     		uxtb	r1, r3
 5083 1570 A04A     		ldr	r2, .L363+4
 5084 1572 FB68     		ldr	r3, [r7, #12]
 5085 1574 1344     		add	r3, r3, r2
 5086 1576 A033     		adds	r3, r3, #160
 5087 1578 0A46     		mov	r2, r1
 5088 157a DA70     		strb	r2, [r3, #3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 111


1020:.\Protocolo.c ****                         j--;
 5089              		.loc 1 1020 0 discriminator 3
 5090 157c FB68     		ldr	r3, [r7, #12]
 5091 157e 013B     		subs	r3, r3, #1
 5092 1580 FB60     		str	r3, [r7, #12]
1018:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5093              		.loc 1 1018 0 discriminator 3
 5094 1582 BB68     		ldr	r3, [r7, #8]
 5095 1584 0133     		adds	r3, r3, #1
 5096 1586 BB60     		str	r3, [r7, #8]
 5097              	.L286:
1018:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5098              		.loc 1 1018 0 is_stmt 0 discriminator 1
 5099 1588 BB68     		ldr	r3, [r7, #8]
 5100 158a 032B     		cmp	r3, #3
 5101 158c E6D9     		bls	.L287
1021:.\Protocolo.c ****                     }
1022:.\Protocolo.c **** 					bufferLCD2.totalVolume3[0]=9;
 5102              		.loc 1 1022 0 is_stmt 1
 5103 158e 994B     		ldr	r3, .L363+4
 5104 1590 0922     		movs	r2, #9
 5105 1592 83F88520 		strb	r2, [r3, #133]
1023:.\Protocolo.c **** 					j=9;
 5106              		.loc 1 1023 0
 5107 1596 0923     		movs	r3, #9
 5108 1598 FB60     		str	r3, [r7, #12]
1024:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5109              		.loc 1 1024 0
 5110 159a 0023     		movs	r3, #0
 5111 159c BB60     		str	r3, [r7, #8]
 5112 159e 35E0     		b	.L288
 5113              	.L291:
1025:.\Protocolo.c **** 						if(x==2){
 5114              		.loc 1 1025 0
 5115 15a0 BB68     		ldr	r3, [r7, #8]
 5116 15a2 022B     		cmp	r3, #2
 5117 15a4 1CD1     		bne	.L289
1026:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=',';
 5118              		.loc 1 1026 0
 5119 15a6 934A     		ldr	r2, .L363+4
 5120 15a8 FB68     		ldr	r3, [r7, #12]
 5121 15aa 1344     		add	r3, r3, r2
 5122 15ac 8033     		adds	r3, r3, #128
 5123 15ae 2C22     		movs	r2, #44
 5124 15b0 5A71     		strb	r2, [r3, #5]
1027:.\Protocolo.c **** 							j--;
 5125              		.loc 1 1027 0
 5126 15b2 FB68     		ldr	r3, [r7, #12]
 5127 15b4 013B     		subs	r3, r3, #1
 5128 15b6 FB60     		str	r3, [r7, #12]
1028:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=(Pump_AL_rxBuffer[64+x]&0x0F)+0x30;
 5129              		.loc 1 1028 0
 5130 15b8 BB68     		ldr	r3, [r7, #8]
 5131 15ba 4033     		adds	r3, r3, #64
 5132 15bc 8C4A     		ldr	r2, .L363
 5133 15be D35C     		ldrb	r3, [r2, r3]
 5134 15c0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 112


 5135 15c2 03F00F03 		and	r3, r3, #15
 5136 15c6 DBB2     		uxtb	r3, r3
 5137 15c8 3033     		adds	r3, r3, #48
 5138 15ca D9B2     		uxtb	r1, r3
 5139 15cc 894A     		ldr	r2, .L363+4
 5140 15ce FB68     		ldr	r3, [r7, #12]
 5141 15d0 1344     		add	r3, r3, r2
 5142 15d2 8033     		adds	r3, r3, #128
 5143 15d4 0A46     		mov	r2, r1
 5144 15d6 5A71     		strb	r2, [r3, #5]
1029:.\Protocolo.c **** 							j--;
 5145              		.loc 1 1029 0
 5146 15d8 FB68     		ldr	r3, [r7, #12]
 5147 15da 013B     		subs	r3, r3, #1
 5148 15dc FB60     		str	r3, [r7, #12]
 5149 15de 12E0     		b	.L290
 5150              	.L289:
1030:.\Protocolo.c **** 						}else{
1031:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=(Pump_AL_rxBuffer[64+x]&0x0F)+0x30;
 5151              		.loc 1 1031 0
 5152 15e0 BB68     		ldr	r3, [r7, #8]
 5153 15e2 4033     		adds	r3, r3, #64
 5154 15e4 824A     		ldr	r2, .L363
 5155 15e6 D35C     		ldrb	r3, [r2, r3]
 5156 15e8 DBB2     		uxtb	r3, r3
 5157 15ea 03F00F03 		and	r3, r3, #15
 5158 15ee DBB2     		uxtb	r3, r3
 5159 15f0 3033     		adds	r3, r3, #48
 5160 15f2 D9B2     		uxtb	r1, r3
 5161 15f4 7F4A     		ldr	r2, .L363+4
 5162 15f6 FB68     		ldr	r3, [r7, #12]
 5163 15f8 1344     		add	r3, r3, r2
 5164 15fa 8033     		adds	r3, r3, #128
 5165 15fc 0A46     		mov	r2, r1
 5166 15fe 5A71     		strb	r2, [r3, #5]
1032:.\Protocolo.c **** 							j--;
 5167              		.loc 1 1032 0
 5168 1600 FB68     		ldr	r3, [r7, #12]
 5169 1602 013B     		subs	r3, r3, #1
 5170 1604 FB60     		str	r3, [r7, #12]
 5171              	.L290:
1024:.\Protocolo.c **** 						if(x==2){
 5172              		.loc 1 1024 0 discriminator 2
 5173 1606 BB68     		ldr	r3, [r7, #8]
 5174 1608 0133     		adds	r3, r3, #1
 5175 160a BB60     		str	r3, [r7, #8]
 5176              	.L288:
1024:.\Protocolo.c **** 						if(x==2){
 5177              		.loc 1 1024 0 is_stmt 0 discriminator 1
 5178 160c BB68     		ldr	r3, [r7, #8]
 5179 160e 072B     		cmp	r3, #7
 5180 1610 C6D9     		bls	.L291
1033:.\Protocolo.c **** 						}
1034:.\Protocolo.c **** 					}
1035:.\Protocolo.c **** 					bufferLCD2.totalMoney3[0]=8;
 5181              		.loc 1 1035 0 is_stmt 1
 5182 1612 784B     		ldr	r3, .L363+4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 113


 5183 1614 0822     		movs	r2, #8
 5184 1616 83F84920 		strb	r2, [r3, #73]
1036:.\Protocolo.c **** 					j=8;
 5185              		.loc 1 1036 0
 5186 161a 0823     		movs	r3, #8
 5187 161c FB60     		str	r3, [r7, #12]
1037:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5188              		.loc 1 1037 0
 5189 161e 0023     		movs	r3, #0
 5190 1620 BB60     		str	r3, [r7, #8]
 5191 1622 15E0     		b	.L292
 5192              	.L293:
1038:.\Protocolo.c **** 						bufferLCD2.totalMoney3[j]=(Pump_AL_rxBuffer[73+x]&0x0F)+0x30;
 5193              		.loc 1 1038 0 discriminator 3
 5194 1624 BB68     		ldr	r3, [r7, #8]
 5195 1626 4933     		adds	r3, r3, #73
 5196 1628 714A     		ldr	r2, .L363
 5197 162a D35C     		ldrb	r3, [r2, r3]
 5198 162c DBB2     		uxtb	r3, r3
 5199 162e 03F00F03 		and	r3, r3, #15
 5200 1632 DBB2     		uxtb	r3, r3
 5201 1634 3033     		adds	r3, r3, #48
 5202 1636 D9B2     		uxtb	r1, r3
 5203 1638 6E4A     		ldr	r2, .L363+4
 5204 163a FB68     		ldr	r3, [r7, #12]
 5205 163c 1344     		add	r3, r3, r2
 5206 163e 4833     		adds	r3, r3, #72
 5207 1640 0A46     		mov	r2, r1
 5208 1642 5A70     		strb	r2, [r3, #1]
1039:.\Protocolo.c **** 						j--;
 5209              		.loc 1 1039 0 discriminator 3
 5210 1644 FB68     		ldr	r3, [r7, #12]
 5211 1646 013B     		subs	r3, r3, #1
 5212 1648 FB60     		str	r3, [r7, #12]
1037:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5213              		.loc 1 1037 0 discriminator 3
 5214 164a BB68     		ldr	r3, [r7, #8]
 5215 164c 0133     		adds	r3, r3, #1
 5216 164e BB60     		str	r3, [r7, #8]
 5217              	.L292:
1037:.\Protocolo.c **** 					for(x=0;x<=7;x++){
 5218              		.loc 1 1037 0 is_stmt 0 discriminator 1
 5219 1650 BB68     		ldr	r3, [r7, #8]
 5220 1652 072B     		cmp	r3, #7
 5221 1654 E6D9     		bls	.L293
1040:.\Protocolo.c **** 					}
1041:.\Protocolo.c ****                     bufferLCD2.ppu3[0]=4;
 5222              		.loc 1 1041 0 is_stmt 1
 5223 1656 674B     		ldr	r3, .L363+4
 5224 1658 0422     		movs	r2, #4
 5225 165a 83F8AD20 		strb	r2, [r3, #173]
1042:.\Protocolo.c ****                     j=4;
 5226              		.loc 1 1042 0
 5227 165e 0423     		movs	r3, #4
 5228 1660 FB60     		str	r3, [r7, #12]
1043:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5229              		.loc 1 1043 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 114


 5230 1662 0023     		movs	r3, #0
 5231 1664 BB60     		str	r3, [r7, #8]
 5232 1666 15E0     		b	.L294
 5233              	.L295:
1044:.\Protocolo.c ****                         bufferLCD2.ppu3[j]=(Pump_AL_rxBuffer[x+82]&0x0F)+0x30;
 5234              		.loc 1 1044 0 discriminator 3
 5235 1668 BB68     		ldr	r3, [r7, #8]
 5236 166a 5233     		adds	r3, r3, #82
 5237 166c 604A     		ldr	r2, .L363
 5238 166e D35C     		ldrb	r3, [r2, r3]
 5239 1670 DBB2     		uxtb	r3, r3
 5240 1672 03F00F03 		and	r3, r3, #15
 5241 1676 DBB2     		uxtb	r3, r3
 5242 1678 3033     		adds	r3, r3, #48
 5243 167a D9B2     		uxtb	r1, r3
 5244 167c 5D4A     		ldr	r2, .L363+4
 5245 167e FB68     		ldr	r3, [r7, #12]
 5246 1680 1344     		add	r3, r3, r2
 5247 1682 A833     		adds	r3, r3, #168
 5248 1684 0A46     		mov	r2, r1
 5249 1686 5A71     		strb	r2, [r3, #5]
1045:.\Protocolo.c ****                         j--;
 5250              		.loc 1 1045 0 discriminator 3
 5251 1688 FB68     		ldr	r3, [r7, #12]
 5252 168a 013B     		subs	r3, r3, #1
 5253 168c FB60     		str	r3, [r7, #12]
1043:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5254              		.loc 1 1043 0 discriminator 3
 5255 168e BB68     		ldr	r3, [r7, #8]
 5256 1690 0133     		adds	r3, r3, #1
 5257 1692 BB60     		str	r3, [r7, #8]
 5258              	.L294:
1043:.\Protocolo.c ****                     for(x=0;x<=3;x++){
 5259              		.loc 1 1043 0 is_stmt 0 discriminator 1
 5260 1694 BB68     		ldr	r3, [r7, #8]
 5261 1696 032B     		cmp	r3, #3
 5262 1698 E6D9     		bls	.L295
1046:.\Protocolo.c ****                     }
1047:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 5263              		.loc 1 1047 0 is_stmt 1
 5264 169a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1048:.\Protocolo.c **** 					return 3;					
 5265              		.loc 1 1048 0
 5266 169e 0323     		movs	r3, #3
 5267 16a0 92E3     		b	.L140
 5268              	.L271:
1049:.\Protocolo.c **** 				}			
1050:.\Protocolo.c **** 				else{
1051:.\Protocolo.c **** 					return 0;
 5269              		.loc 1 1051 0
 5270 16a2 0023     		movs	r3, #0
 5271 16a4 90E3     		b	.L140
 5272              	.L241:
1052:.\Protocolo.c **** 				}			
1053:.\Protocolo.c **** 			break;
1054:.\Protocolo.c **** 				
1055:.\Protocolo.c **** 			case 46://7 digitos una manguera
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 115


1056:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[45]==0xF0)&&(Pum
 5273              		.loc 1 1056 0
 5274 16a6 524B     		ldr	r3, .L363
 5275 16a8 1B78     		ldrb	r3, [r3]
 5276 16aa DBB2     		uxtb	r3, r3
 5277 16ac FF2B     		cmp	r3, #255
 5278 16ae 40F09D80 		bne	.L296
 5279              		.loc 1 1056 0 is_stmt 0 discriminator 1
 5280 16b2 4F4B     		ldr	r3, .L363
 5281 16b4 5B78     		ldrb	r3, [r3, #1]
 5282 16b6 DBB2     		uxtb	r3, r3
 5283 16b8 F62B     		cmp	r3, #246
 5284 16ba 40F09780 		bne	.L296
 5285              		.loc 1 1056 0 discriminator 2
 5286 16be 4C4B     		ldr	r3, .L363
 5287 16c0 93F82D30 		ldrb	r3, [r3, #45]
 5288 16c4 DBB2     		uxtb	r3, r3
 5289 16c6 F02B     		cmp	r3, #240
 5290 16c8 40F09080 		bne	.L296
 5291              		.loc 1 1056 0 discriminator 3
 5292 16cc 484B     		ldr	r3, .L363
 5293 16ce DB78     		ldrb	r3, [r3, #3]
 5294 16d0 DBB2     		uxtb	r3, r3
 5295 16d2 F92B     		cmp	r3, #249
 5296 16d4 40F08A80 		bne	.L296
1057:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=13;
 5297              		.loc 1 1057 0 is_stmt 1
 5298 16d8 464B     		ldr	r3, .L363+4
 5299 16da 0D22     		movs	r2, #13
 5300 16dc 83F85D20 		strb	r2, [r3, #93]
1058:.\Protocolo.c **** 					j=13;
 5301              		.loc 1 1058 0
 5302 16e0 0D23     		movs	r3, #13
 5303 16e2 FB60     		str	r3, [r7, #12]
1059:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5304              		.loc 1 1059 0
 5305 16e4 0023     		movs	r3, #0
 5306 16e6 BB60     		str	r3, [r7, #8]
 5307 16e8 35E0     		b	.L297
 5308              	.L300:
1060:.\Protocolo.c **** 						if(x==2){
 5309              		.loc 1 1060 0
 5310 16ea BB68     		ldr	r3, [r7, #8]
 5311 16ec 022B     		cmp	r3, #2
 5312 16ee 1CD1     		bne	.L298
1061:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 5313              		.loc 1 1061 0
 5314 16f0 404A     		ldr	r2, .L363+4
 5315 16f2 FB68     		ldr	r3, [r7, #12]
 5316 16f4 1344     		add	r3, r3, r2
 5317 16f6 5833     		adds	r3, r3, #88
 5318 16f8 2C22     		movs	r2, #44
 5319 16fa 5A71     		strb	r2, [r3, #5]
1062:.\Protocolo.c **** 							j--;
 5320              		.loc 1 1062 0
 5321 16fc FB68     		ldr	r3, [r7, #12]
 5322 16fe 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 116


 5323 1700 FB60     		str	r3, [r7, #12]
1063:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 5324              		.loc 1 1063 0
 5325 1702 BB68     		ldr	r3, [r7, #8]
 5326 1704 0433     		adds	r3, r3, #4
 5327 1706 3A4A     		ldr	r2, .L363
 5328 1708 D35C     		ldrb	r3, [r2, r3]
 5329 170a DBB2     		uxtb	r3, r3
 5330 170c 03F00F03 		and	r3, r3, #15
 5331 1710 DBB2     		uxtb	r3, r3
 5332 1712 3033     		adds	r3, r3, #48
 5333 1714 D9B2     		uxtb	r1, r3
 5334 1716 374A     		ldr	r2, .L363+4
 5335 1718 FB68     		ldr	r3, [r7, #12]
 5336 171a 1344     		add	r3, r3, r2
 5337 171c 5833     		adds	r3, r3, #88
 5338 171e 0A46     		mov	r2, r1
 5339 1720 5A71     		strb	r2, [r3, #5]
1064:.\Protocolo.c **** 							j--;
 5340              		.loc 1 1064 0
 5341 1722 FB68     		ldr	r3, [r7, #12]
 5342 1724 013B     		subs	r3, r3, #1
 5343 1726 FB60     		str	r3, [r7, #12]
 5344 1728 12E0     		b	.L299
 5345              	.L298:
1065:.\Protocolo.c **** 						}else{
1066:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[x+4]&0x0F)+0x30;
 5346              		.loc 1 1066 0
 5347 172a BB68     		ldr	r3, [r7, #8]
 5348 172c 0433     		adds	r3, r3, #4
 5349 172e 304A     		ldr	r2, .L363
 5350 1730 D35C     		ldrb	r3, [r2, r3]
 5351 1732 DBB2     		uxtb	r3, r3
 5352 1734 03F00F03 		and	r3, r3, #15
 5353 1738 DBB2     		uxtb	r3, r3
 5354 173a 3033     		adds	r3, r3, #48
 5355 173c D9B2     		uxtb	r1, r3
 5356 173e 2D4A     		ldr	r2, .L363+4
 5357 1740 FB68     		ldr	r3, [r7, #12]
 5358 1742 1344     		add	r3, r3, r2
 5359 1744 5833     		adds	r3, r3, #88
 5360 1746 0A46     		mov	r2, r1
 5361 1748 5A71     		strb	r2, [r3, #5]
1067:.\Protocolo.c **** 							j--;
 5362              		.loc 1 1067 0
 5363 174a FB68     		ldr	r3, [r7, #12]
 5364 174c 013B     		subs	r3, r3, #1
 5365 174e FB60     		str	r3, [r7, #12]
 5366              	.L299:
1059:.\Protocolo.c **** 						if(x==2){
 5367              		.loc 1 1059 0 discriminator 2
 5368 1750 BB68     		ldr	r3, [r7, #8]
 5369 1752 0133     		adds	r3, r3, #1
 5370 1754 BB60     		str	r3, [r7, #8]
 5371              	.L297:
1059:.\Protocolo.c **** 						if(x==2){
 5372              		.loc 1 1059 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 117


 5373 1756 BB68     		ldr	r3, [r7, #8]
 5374 1758 0B2B     		cmp	r3, #11
 5375 175a C6D9     		bls	.L300
1068:.\Protocolo.c **** 						}
1069:.\Protocolo.c **** 					}
1070:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=12;
 5376              		.loc 1 1070 0 is_stmt 1
 5377 175c 254B     		ldr	r3, .L363+4
 5378 175e 0C22     		movs	r2, #12
 5379 1760 83F82120 		strb	r2, [r3, #33]
1071:.\Protocolo.c **** 					j=12;
 5380              		.loc 1 1071 0
 5381 1764 0C23     		movs	r3, #12
 5382 1766 FB60     		str	r3, [r7, #12]
1072:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5383              		.loc 1 1072 0
 5384 1768 0023     		movs	r3, #0
 5385 176a BB60     		str	r3, [r7, #8]
 5386 176c 15E0     		b	.L301
 5387              	.L302:
1073:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[x+17]&0x0F)+0x30;
 5388              		.loc 1 1073 0 discriminator 3
 5389 176e BB68     		ldr	r3, [r7, #8]
 5390 1770 1133     		adds	r3, r3, #17
 5391 1772 1F4A     		ldr	r2, .L363
 5392 1774 D35C     		ldrb	r3, [r2, r3]
 5393 1776 DBB2     		uxtb	r3, r3
 5394 1778 03F00F03 		and	r3, r3, #15
 5395 177c DBB2     		uxtb	r3, r3
 5396 177e 3033     		adds	r3, r3, #48
 5397 1780 D9B2     		uxtb	r1, r3
 5398 1782 1C4A     		ldr	r2, .L363+4
 5399 1784 FB68     		ldr	r3, [r7, #12]
 5400 1786 1344     		add	r3, r3, r2
 5401 1788 2033     		adds	r3, r3, #32
 5402 178a 0A46     		mov	r2, r1
 5403 178c 5A70     		strb	r2, [r3, #1]
1074:.\Protocolo.c **** 						j--;
 5404              		.loc 1 1074 0 discriminator 3
 5405 178e FB68     		ldr	r3, [r7, #12]
 5406 1790 013B     		subs	r3, r3, #1
 5407 1792 FB60     		str	r3, [r7, #12]
1072:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5408              		.loc 1 1072 0 discriminator 3
 5409 1794 BB68     		ldr	r3, [r7, #8]
 5410 1796 0133     		adds	r3, r3, #1
 5411 1798 BB60     		str	r3, [r7, #8]
 5412              	.L301:
1072:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5413              		.loc 1 1072 0 is_stmt 0 discriminator 1
 5414 179a BB68     		ldr	r3, [r7, #8]
 5415 179c 0B2B     		cmp	r3, #11
 5416 179e E6D9     		bls	.L302
1075:.\Protocolo.c **** 					}			
1076:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=6;
 5417              		.loc 1 1076 0 is_stmt 1
 5418 17a0 144B     		ldr	r3, .L363+4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 118


 5419 17a2 0622     		movs	r2, #6
 5420 17a4 83F89920 		strb	r2, [r3, #153]
1077:.\Protocolo.c ****                     j=6;
 5421              		.loc 1 1077 0
 5422 17a8 0623     		movs	r3, #6
 5423 17aa FB60     		str	r3, [r7, #12]
1078:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5424              		.loc 1 1078 0
 5425 17ac 0023     		movs	r3, #0
 5426 17ae BB60     		str	r3, [r7, #8]
 5427 17b0 15E0     		b	.L303
 5428              	.L304:
1079:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 5429              		.loc 1 1079 0 discriminator 3
 5430 17b2 BB68     		ldr	r3, [r7, #8]
 5431 17b4 1E33     		adds	r3, r3, #30
 5432 17b6 0E4A     		ldr	r2, .L363
 5433 17b8 D35C     		ldrb	r3, [r2, r3]
 5434 17ba DBB2     		uxtb	r3, r3
 5435 17bc 03F00F03 		and	r3, r3, #15
 5436 17c0 DBB2     		uxtb	r3, r3
 5437 17c2 3033     		adds	r3, r3, #48
 5438 17c4 D9B2     		uxtb	r1, r3
 5439 17c6 0B4A     		ldr	r2, .L363+4
 5440 17c8 FB68     		ldr	r3, [r7, #12]
 5441 17ca 1344     		add	r3, r3, r2
 5442 17cc 9833     		adds	r3, r3, #152
 5443 17ce 0A46     		mov	r2, r1
 5444 17d0 5A70     		strb	r2, [r3, #1]
1080:.\Protocolo.c ****                         j--;
 5445              		.loc 1 1080 0 discriminator 3
 5446 17d2 FB68     		ldr	r3, [r7, #12]
 5447 17d4 013B     		subs	r3, r3, #1
 5448 17d6 FB60     		str	r3, [r7, #12]
1078:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5449              		.loc 1 1078 0 discriminator 3
 5450 17d8 BB68     		ldr	r3, [r7, #8]
 5451 17da 0133     		adds	r3, r3, #1
 5452 17dc BB60     		str	r3, [r7, #8]
 5453              	.L303:
1078:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5454              		.loc 1 1078 0 is_stmt 0 discriminator 1
 5455 17de BB68     		ldr	r3, [r7, #8]
 5456 17e0 052B     		cmp	r3, #5
 5457 17e2 E6D9     		bls	.L304
1081:.\Protocolo.c ****                     }
1082:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 5458              		.loc 1 1082 0 is_stmt 1
 5459 17e4 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1083:.\Protocolo.c **** 					return 1;
 5460              		.loc 1 1083 0
 5461 17e8 0123     		movs	r3, #1
 5462 17ea EDE2     		b	.L140
 5463              	.L296:
1084:.\Protocolo.c **** 				}
1085:.\Protocolo.c **** 				else{
1086:.\Protocolo.c **** 					return 0;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 119


 5464              		.loc 1 1086 0
 5465 17ec 0023     		movs	r3, #0
 5466 17ee EBE2     		b	.L140
 5467              	.L364:
 5468              		.align	2
 5469              	.L363:
 5470 17f0 00000000 		.word	Pump_AL_rxBuffer
 5471 17f4 00000000 		.word	bufferLCD2
 5472              	.L244:
1087:.\Protocolo.c **** 				}			
1088:.\Protocolo.c **** 			break;
1089:.\Protocolo.c **** 				
1090:.\Protocolo.c **** 			case 88://7 digitos dos mangueras
1091:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[87]==0xF0)&&(Pum
 5473              		.loc 1 1091 0
 5474 17f8 A64B     		ldr	r3, .L365
 5475 17fa 1B78     		ldrb	r3, [r3]
 5476 17fc DBB2     		uxtb	r3, r3
 5477 17fe FF2B     		cmp	r3, #255
 5478 1800 40F02381 		bne	.L305
 5479              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5480 1804 A34B     		ldr	r3, .L365
 5481 1806 5B78     		ldrb	r3, [r3, #1]
 5482 1808 DBB2     		uxtb	r3, r3
 5483 180a F62B     		cmp	r3, #246
 5484 180c 40F01D81 		bne	.L305
 5485              		.loc 1 1091 0 discriminator 2
 5486 1810 A04B     		ldr	r3, .L365
 5487 1812 93F85730 		ldrb	r3, [r3, #87]
 5488 1816 DBB2     		uxtb	r3, r3
 5489 1818 F02B     		cmp	r3, #240
 5490 181a 40F01681 		bne	.L305
 5491              		.loc 1 1091 0 discriminator 3
 5492 181e 9D4B     		ldr	r3, .L365
 5493 1820 DB78     		ldrb	r3, [r3, #3]
 5494 1822 DBB2     		uxtb	r3, r3
 5495 1824 F92B     		cmp	r3, #249
 5496 1826 40F01081 		bne	.L305
1092:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=13;
 5497              		.loc 1 1092 0 is_stmt 1
 5498 182a 9B4B     		ldr	r3, .L365+4
 5499 182c 0D22     		movs	r2, #13
 5500 182e 83F85D20 		strb	r2, [r3, #93]
1093:.\Protocolo.c **** 					j=13;
 5501              		.loc 1 1093 0
 5502 1832 0D23     		movs	r3, #13
 5503 1834 FB60     		str	r3, [r7, #12]
1094:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5504              		.loc 1 1094 0
 5505 1836 0023     		movs	r3, #0
 5506 1838 BB60     		str	r3, [r7, #8]
 5507 183a 35E0     		b	.L306
 5508              	.L309:
1095:.\Protocolo.c **** 						if(x==2){
 5509              		.loc 1 1095 0
 5510 183c BB68     		ldr	r3, [r7, #8]
 5511 183e 022B     		cmp	r3, #2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 120


 5512 1840 1CD1     		bne	.L307
1096:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 5513              		.loc 1 1096 0
 5514 1842 954A     		ldr	r2, .L365+4
 5515 1844 FB68     		ldr	r3, [r7, #12]
 5516 1846 1344     		add	r3, r3, r2
 5517 1848 5833     		adds	r3, r3, #88
 5518 184a 2C22     		movs	r2, #44
 5519 184c 5A71     		strb	r2, [r3, #5]
1097:.\Protocolo.c **** 							j--;
 5520              		.loc 1 1097 0
 5521 184e FB68     		ldr	r3, [r7, #12]
 5522 1850 013B     		subs	r3, r3, #1
 5523 1852 FB60     		str	r3, [r7, #12]
1098:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 5524              		.loc 1 1098 0
 5525 1854 BB68     		ldr	r3, [r7, #8]
 5526 1856 0433     		adds	r3, r3, #4
 5527 1858 8E4A     		ldr	r2, .L365
 5528 185a D35C     		ldrb	r3, [r2, r3]
 5529 185c DBB2     		uxtb	r3, r3
 5530 185e 03F00F03 		and	r3, r3, #15
 5531 1862 DBB2     		uxtb	r3, r3
 5532 1864 3033     		adds	r3, r3, #48
 5533 1866 D9B2     		uxtb	r1, r3
 5534 1868 8B4A     		ldr	r2, .L365+4
 5535 186a FB68     		ldr	r3, [r7, #12]
 5536 186c 1344     		add	r3, r3, r2
 5537 186e 5833     		adds	r3, r3, #88
 5538 1870 0A46     		mov	r2, r1
 5539 1872 5A71     		strb	r2, [r3, #5]
1099:.\Protocolo.c **** 							j--;
 5540              		.loc 1 1099 0
 5541 1874 FB68     		ldr	r3, [r7, #12]
 5542 1876 013B     		subs	r3, r3, #1
 5543 1878 FB60     		str	r3, [r7, #12]
 5544 187a 12E0     		b	.L308
 5545              	.L307:
1100:.\Protocolo.c **** 						}else{
1101:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 5546              		.loc 1 1101 0
 5547 187c BB68     		ldr	r3, [r7, #8]
 5548 187e 0433     		adds	r3, r3, #4
 5549 1880 844A     		ldr	r2, .L365
 5550 1882 D35C     		ldrb	r3, [r2, r3]
 5551 1884 DBB2     		uxtb	r3, r3
 5552 1886 03F00F03 		and	r3, r3, #15
 5553 188a DBB2     		uxtb	r3, r3
 5554 188c 3033     		adds	r3, r3, #48
 5555 188e D9B2     		uxtb	r1, r3
 5556 1890 814A     		ldr	r2, .L365+4
 5557 1892 FB68     		ldr	r3, [r7, #12]
 5558 1894 1344     		add	r3, r3, r2
 5559 1896 5833     		adds	r3, r3, #88
 5560 1898 0A46     		mov	r2, r1
 5561 189a 5A71     		strb	r2, [r3, #5]
1102:.\Protocolo.c **** 							j--;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 121


 5562              		.loc 1 1102 0
 5563 189c FB68     		ldr	r3, [r7, #12]
 5564 189e 013B     		subs	r3, r3, #1
 5565 18a0 FB60     		str	r3, [r7, #12]
 5566              	.L308:
1094:.\Protocolo.c **** 						if(x==2){
 5567              		.loc 1 1094 0 discriminator 2
 5568 18a2 BB68     		ldr	r3, [r7, #8]
 5569 18a4 0133     		adds	r3, r3, #1
 5570 18a6 BB60     		str	r3, [r7, #8]
 5571              	.L306:
1094:.\Protocolo.c **** 						if(x==2){
 5572              		.loc 1 1094 0 is_stmt 0 discriminator 1
 5573 18a8 BB68     		ldr	r3, [r7, #8]
 5574 18aa 0B2B     		cmp	r3, #11
 5575 18ac C6D9     		bls	.L309
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 					}
1105:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=12;
 5576              		.loc 1 1105 0 is_stmt 1
 5577 18ae 7A4B     		ldr	r3, .L365+4
 5578 18b0 0C22     		movs	r2, #12
 5579 18b2 83F82120 		strb	r2, [r3, #33]
1106:.\Protocolo.c **** 					j=12;
 5580              		.loc 1 1106 0
 5581 18b6 0C23     		movs	r3, #12
 5582 18b8 FB60     		str	r3, [r7, #12]
1107:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5583              		.loc 1 1107 0
 5584 18ba 0023     		movs	r3, #0
 5585 18bc BB60     		str	r3, [r7, #8]
 5586 18be 15E0     		b	.L310
 5587              	.L311:
1108:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[17+x]&0x0F)+0x30;
 5588              		.loc 1 1108 0 discriminator 3
 5589 18c0 BB68     		ldr	r3, [r7, #8]
 5590 18c2 1133     		adds	r3, r3, #17
 5591 18c4 734A     		ldr	r2, .L365
 5592 18c6 D35C     		ldrb	r3, [r2, r3]
 5593 18c8 DBB2     		uxtb	r3, r3
 5594 18ca 03F00F03 		and	r3, r3, #15
 5595 18ce DBB2     		uxtb	r3, r3
 5596 18d0 3033     		adds	r3, r3, #48
 5597 18d2 D9B2     		uxtb	r1, r3
 5598 18d4 704A     		ldr	r2, .L365+4
 5599 18d6 FB68     		ldr	r3, [r7, #12]
 5600 18d8 1344     		add	r3, r3, r2
 5601 18da 2033     		adds	r3, r3, #32
 5602 18dc 0A46     		mov	r2, r1
 5603 18de 5A70     		strb	r2, [r3, #1]
1109:.\Protocolo.c **** 						j--;
 5604              		.loc 1 1109 0 discriminator 3
 5605 18e0 FB68     		ldr	r3, [r7, #12]
 5606 18e2 013B     		subs	r3, r3, #1
 5607 18e4 FB60     		str	r3, [r7, #12]
1107:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5608              		.loc 1 1107 0 discriminator 3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 122


 5609 18e6 BB68     		ldr	r3, [r7, #8]
 5610 18e8 0133     		adds	r3, r3, #1
 5611 18ea BB60     		str	r3, [r7, #8]
 5612              	.L310:
1107:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5613              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5614 18ec BB68     		ldr	r3, [r7, #8]
 5615 18ee 0B2B     		cmp	r3, #11
 5616 18f0 E6D9     		bls	.L311
1110:.\Protocolo.c **** 					}
1111:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=6;
 5617              		.loc 1 1111 0 is_stmt 1
 5618 18f2 694B     		ldr	r3, .L365+4
 5619 18f4 0622     		movs	r2, #6
 5620 18f6 83F89920 		strb	r2, [r3, #153]
1112:.\Protocolo.c ****                     j=6;
 5621              		.loc 1 1112 0
 5622 18fa 0623     		movs	r3, #6
 5623 18fc FB60     		str	r3, [r7, #12]
1113:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5624              		.loc 1 1113 0
 5625 18fe 0023     		movs	r3, #0
 5626 1900 BB60     		str	r3, [r7, #8]
 5627 1902 15E0     		b	.L312
 5628              	.L313:
1114:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 5629              		.loc 1 1114 0 discriminator 3
 5630 1904 BB68     		ldr	r3, [r7, #8]
 5631 1906 1E33     		adds	r3, r3, #30
 5632 1908 624A     		ldr	r2, .L365
 5633 190a D35C     		ldrb	r3, [r2, r3]
 5634 190c DBB2     		uxtb	r3, r3
 5635 190e 03F00F03 		and	r3, r3, #15
 5636 1912 DBB2     		uxtb	r3, r3
 5637 1914 3033     		adds	r3, r3, #48
 5638 1916 D9B2     		uxtb	r1, r3
 5639 1918 5F4A     		ldr	r2, .L365+4
 5640 191a FB68     		ldr	r3, [r7, #12]
 5641 191c 1344     		add	r3, r3, r2
 5642 191e 9833     		adds	r3, r3, #152
 5643 1920 0A46     		mov	r2, r1
 5644 1922 5A70     		strb	r2, [r3, #1]
1115:.\Protocolo.c ****                         j--;
 5645              		.loc 1 1115 0 discriminator 3
 5646 1924 FB68     		ldr	r3, [r7, #12]
 5647 1926 013B     		subs	r3, r3, #1
 5648 1928 FB60     		str	r3, [r7, #12]
1113:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5649              		.loc 1 1113 0 discriminator 3
 5650 192a BB68     		ldr	r3, [r7, #8]
 5651 192c 0133     		adds	r3, r3, #1
 5652 192e BB60     		str	r3, [r7, #8]
 5653              	.L312:
1113:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5654              		.loc 1 1113 0 is_stmt 0 discriminator 1
 5655 1930 BB68     		ldr	r3, [r7, #8]
 5656 1932 052B     		cmp	r3, #5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 123


 5657 1934 E6D9     		bls	.L313
1116:.\Protocolo.c ****                     }
1117:.\Protocolo.c **** 					bufferLCD2.totalVolume2[0]=13;
 5658              		.loc 1 1117 0 is_stmt 1
 5659 1936 584B     		ldr	r3, .L365+4
 5660 1938 0D22     		movs	r2, #13
 5661 193a 83F87120 		strb	r2, [r3, #113]
1118:.\Protocolo.c **** 					j=13;
 5662              		.loc 1 1118 0
 5663 193e 0D23     		movs	r3, #13
 5664 1940 FB60     		str	r3, [r7, #12]
1119:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5665              		.loc 1 1119 0
 5666 1942 0023     		movs	r3, #0
 5667 1944 BB60     		str	r3, [r7, #8]
 5668 1946 35E0     		b	.L314
 5669              	.L317:
1120:.\Protocolo.c **** 						if(x==2){
 5670              		.loc 1 1120 0
 5671 1948 BB68     		ldr	r3, [r7, #8]
 5672 194a 022B     		cmp	r3, #2
 5673 194c 1CD1     		bne	.L315
1121:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=',';
 5674              		.loc 1 1121 0
 5675 194e 524A     		ldr	r2, .L365+4
 5676 1950 FB68     		ldr	r3, [r7, #12]
 5677 1952 1344     		add	r3, r3, r2
 5678 1954 7033     		adds	r3, r3, #112
 5679 1956 2C22     		movs	r2, #44
 5680 1958 5A70     		strb	r2, [r3, #1]
1122:.\Protocolo.c **** 							j--;
 5681              		.loc 1 1122 0
 5682 195a FB68     		ldr	r3, [r7, #12]
 5683 195c 013B     		subs	r3, r3, #1
 5684 195e FB60     		str	r3, [r7, #12]
1123:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 5685              		.loc 1 1123 0
 5686 1960 BB68     		ldr	r3, [r7, #8]
 5687 1962 2E33     		adds	r3, r3, #46
 5688 1964 4B4A     		ldr	r2, .L365
 5689 1966 D35C     		ldrb	r3, [r2, r3]
 5690 1968 DBB2     		uxtb	r3, r3
 5691 196a 03F00F03 		and	r3, r3, #15
 5692 196e DBB2     		uxtb	r3, r3
 5693 1970 3033     		adds	r3, r3, #48
 5694 1972 D9B2     		uxtb	r1, r3
 5695 1974 484A     		ldr	r2, .L365+4
 5696 1976 FB68     		ldr	r3, [r7, #12]
 5697 1978 1344     		add	r3, r3, r2
 5698 197a 7033     		adds	r3, r3, #112
 5699 197c 0A46     		mov	r2, r1
 5700 197e 5A70     		strb	r2, [r3, #1]
1124:.\Protocolo.c **** 							j--;
 5701              		.loc 1 1124 0
 5702 1980 FB68     		ldr	r3, [r7, #12]
 5703 1982 013B     		subs	r3, r3, #1
 5704 1984 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 124


 5705 1986 12E0     		b	.L316
 5706              	.L315:
1125:.\Protocolo.c **** 						}else{
1126:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 5707              		.loc 1 1126 0
 5708 1988 BB68     		ldr	r3, [r7, #8]
 5709 198a 2E33     		adds	r3, r3, #46
 5710 198c 414A     		ldr	r2, .L365
 5711 198e D35C     		ldrb	r3, [r2, r3]
 5712 1990 DBB2     		uxtb	r3, r3
 5713 1992 03F00F03 		and	r3, r3, #15
 5714 1996 DBB2     		uxtb	r3, r3
 5715 1998 3033     		adds	r3, r3, #48
 5716 199a D9B2     		uxtb	r1, r3
 5717 199c 3E4A     		ldr	r2, .L365+4
 5718 199e FB68     		ldr	r3, [r7, #12]
 5719 19a0 1344     		add	r3, r3, r2
 5720 19a2 7033     		adds	r3, r3, #112
 5721 19a4 0A46     		mov	r2, r1
 5722 19a6 5A70     		strb	r2, [r3, #1]
1127:.\Protocolo.c **** 							j--;
 5723              		.loc 1 1127 0
 5724 19a8 FB68     		ldr	r3, [r7, #12]
 5725 19aa 013B     		subs	r3, r3, #1
 5726 19ac FB60     		str	r3, [r7, #12]
 5727              	.L316:
1119:.\Protocolo.c **** 						if(x==2){
 5728              		.loc 1 1119 0 discriminator 2
 5729 19ae BB68     		ldr	r3, [r7, #8]
 5730 19b0 0133     		adds	r3, r3, #1
 5731 19b2 BB60     		str	r3, [r7, #8]
 5732              	.L314:
1119:.\Protocolo.c **** 						if(x==2){
 5733              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5734 19b4 BB68     		ldr	r3, [r7, #8]
 5735 19b6 0B2B     		cmp	r3, #11
 5736 19b8 C6D9     		bls	.L317
1128:.\Protocolo.c **** 						}
1129:.\Protocolo.c **** 					}
1130:.\Protocolo.c **** 					bufferLCD2.totalMoney2[0]=12;
 5737              		.loc 1 1130 0 is_stmt 1
 5738 19ba 374B     		ldr	r3, .L365+4
 5739 19bc 0C22     		movs	r2, #12
 5740 19be 83F83520 		strb	r2, [r3, #53]
1131:.\Protocolo.c **** 					j=12;
 5741              		.loc 1 1131 0
 5742 19c2 0C23     		movs	r3, #12
 5743 19c4 FB60     		str	r3, [r7, #12]
1132:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5744              		.loc 1 1132 0
 5745 19c6 0023     		movs	r3, #0
 5746 19c8 BB60     		str	r3, [r7, #8]
 5747 19ca 15E0     		b	.L318
 5748              	.L319:
1133:.\Protocolo.c **** 						bufferLCD2.totalMoney2[j]=(Pump_AL_rxBuffer[59+x]&0x0F)+0x30;
 5749              		.loc 1 1133 0 discriminator 3
 5750 19cc BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 125


 5751 19ce 3B33     		adds	r3, r3, #59
 5752 19d0 304A     		ldr	r2, .L365
 5753 19d2 D35C     		ldrb	r3, [r2, r3]
 5754 19d4 DBB2     		uxtb	r3, r3
 5755 19d6 03F00F03 		and	r3, r3, #15
 5756 19da DBB2     		uxtb	r3, r3
 5757 19dc 3033     		adds	r3, r3, #48
 5758 19de D9B2     		uxtb	r1, r3
 5759 19e0 2D4A     		ldr	r2, .L365+4
 5760 19e2 FB68     		ldr	r3, [r7, #12]
 5761 19e4 1344     		add	r3, r3, r2
 5762 19e6 3033     		adds	r3, r3, #48
 5763 19e8 0A46     		mov	r2, r1
 5764 19ea 5A71     		strb	r2, [r3, #5]
1134:.\Protocolo.c **** 						j--;
 5765              		.loc 1 1134 0 discriminator 3
 5766 19ec FB68     		ldr	r3, [r7, #12]
 5767 19ee 013B     		subs	r3, r3, #1
 5768 19f0 FB60     		str	r3, [r7, #12]
1132:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5769              		.loc 1 1132 0 discriminator 3
 5770 19f2 BB68     		ldr	r3, [r7, #8]
 5771 19f4 0133     		adds	r3, r3, #1
 5772 19f6 BB60     		str	r3, [r7, #8]
 5773              	.L318:
1132:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5774              		.loc 1 1132 0 is_stmt 0 discriminator 1
 5775 19f8 BB68     		ldr	r3, [r7, #8]
 5776 19fa 0B2B     		cmp	r3, #11
 5777 19fc E6D9     		bls	.L319
1135:.\Protocolo.c **** 					}
1136:.\Protocolo.c ****                     bufferLCD2.ppu2[0]=6;
 5778              		.loc 1 1136 0 is_stmt 1
 5779 19fe 264B     		ldr	r3, .L365+4
 5780 1a00 0622     		movs	r2, #6
 5781 1a02 83F8A320 		strb	r2, [r3, #163]
1137:.\Protocolo.c ****                     j=6;
 5782              		.loc 1 1137 0
 5783 1a06 0623     		movs	r3, #6
 5784 1a08 FB60     		str	r3, [r7, #12]
1138:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5785              		.loc 1 1138 0
 5786 1a0a 0023     		movs	r3, #0
 5787 1a0c BB60     		str	r3, [r7, #8]
 5788 1a0e 15E0     		b	.L320
 5789              	.L321:
1139:.\Protocolo.c ****                         bufferLCD2.ppu2[j]=(Pump_AL_rxBuffer[x+72]&0x0F)+0x30;
 5790              		.loc 1 1139 0 discriminator 3
 5791 1a10 BB68     		ldr	r3, [r7, #8]
 5792 1a12 4833     		adds	r3, r3, #72
 5793 1a14 1F4A     		ldr	r2, .L365
 5794 1a16 D35C     		ldrb	r3, [r2, r3]
 5795 1a18 DBB2     		uxtb	r3, r3
 5796 1a1a 03F00F03 		and	r3, r3, #15
 5797 1a1e DBB2     		uxtb	r3, r3
 5798 1a20 3033     		adds	r3, r3, #48
 5799 1a22 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 126


 5800 1a24 1C4A     		ldr	r2, .L365+4
 5801 1a26 FB68     		ldr	r3, [r7, #12]
 5802 1a28 1344     		add	r3, r3, r2
 5803 1a2a A033     		adds	r3, r3, #160
 5804 1a2c 0A46     		mov	r2, r1
 5805 1a2e DA70     		strb	r2, [r3, #3]
1140:.\Protocolo.c ****                         j--;
 5806              		.loc 1 1140 0 discriminator 3
 5807 1a30 FB68     		ldr	r3, [r7, #12]
 5808 1a32 013B     		subs	r3, r3, #1
 5809 1a34 FB60     		str	r3, [r7, #12]
1138:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5810              		.loc 1 1138 0 discriminator 3
 5811 1a36 BB68     		ldr	r3, [r7, #8]
 5812 1a38 0133     		adds	r3, r3, #1
 5813 1a3a BB60     		str	r3, [r7, #8]
 5814              	.L320:
1138:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5815              		.loc 1 1138 0 is_stmt 0 discriminator 1
 5816 1a3c BB68     		ldr	r3, [r7, #8]
 5817 1a3e 052B     		cmp	r3, #5
 5818 1a40 E6D9     		bls	.L321
1141:.\Protocolo.c ****                     }
1142:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 5819              		.loc 1 1142 0 is_stmt 1
 5820 1a42 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1143:.\Protocolo.c **** 					return 2;					
 5821              		.loc 1 1143 0
 5822 1a46 0223     		movs	r3, #2
 5823 1a48 BEE1     		b	.L140
 5824              	.L305:
1144:.\Protocolo.c **** 				}			
1145:.\Protocolo.c **** 				else{
1146:.\Protocolo.c **** 					return 0;
 5825              		.loc 1 1146 0
 5826 1a4a 0023     		movs	r3, #0
 5827 1a4c BCE1     		b	.L140
 5828              	.L243:
1147:.\Protocolo.c **** 				}			
1148:.\Protocolo.c **** 			break;
1149:.\Protocolo.c **** 		
1150:.\Protocolo.c **** 			case 130://7 digitos tres mangueras
1151:.\Protocolo.c **** 				if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[129]==0xF0)&&(Pu
 5829              		.loc 1 1151 0
 5830 1a4e 114B     		ldr	r3, .L365
 5831 1a50 1B78     		ldrb	r3, [r3]
 5832 1a52 DBB2     		uxtb	r3, r3
 5833 1a54 FF2B     		cmp	r3, #255
 5834 1a56 40F0B281 		bne	.L322
 5835              		.loc 1 1151 0 is_stmt 0 discriminator 1
 5836 1a5a 0E4B     		ldr	r3, .L365
 5837 1a5c 5B78     		ldrb	r3, [r3, #1]
 5838 1a5e DBB2     		uxtb	r3, r3
 5839 1a60 F62B     		cmp	r3, #246
 5840 1a62 40F0AC81 		bne	.L322
 5841              		.loc 1 1151 0 discriminator 2
 5842 1a66 0B4B     		ldr	r3, .L365
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 127


 5843 1a68 93F88130 		ldrb	r3, [r3, #129]
 5844 1a6c DBB2     		uxtb	r3, r3
 5845 1a6e F02B     		cmp	r3, #240
 5846 1a70 40F0A581 		bne	.L322
 5847              		.loc 1 1151 0 discriminator 3
 5848 1a74 074B     		ldr	r3, .L365
 5849 1a76 DB78     		ldrb	r3, [r3, #3]
 5850 1a78 DBB2     		uxtb	r3, r3
 5851 1a7a F92B     		cmp	r3, #249
 5852 1a7c 40F09F81 		bne	.L322
1152:.\Protocolo.c **** 					bufferLCD2.totalVolume1[0]=13;
 5853              		.loc 1 1152 0 is_stmt 1
 5854 1a80 054B     		ldr	r3, .L365+4
 5855 1a82 0D22     		movs	r2, #13
 5856 1a84 83F85D20 		strb	r2, [r3, #93]
1153:.\Protocolo.c **** 					j=13;
 5857              		.loc 1 1153 0
 5858 1a88 0D23     		movs	r3, #13
 5859 1a8a FB60     		str	r3, [r7, #12]
1154:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5860              		.loc 1 1154 0
 5861 1a8c 0023     		movs	r3, #0
 5862 1a8e BB60     		str	r3, [r7, #8]
 5863 1a90 3AE0     		b	.L323
 5864              	.L366:
 5865 1a92 00BF     		.align	2
 5866              	.L365:
 5867 1a94 00000000 		.word	Pump_AL_rxBuffer
 5868 1a98 00000000 		.word	bufferLCD2
 5869              	.L326:
1155:.\Protocolo.c **** 						if(x==2){
 5870              		.loc 1 1155 0
 5871 1a9c BB68     		ldr	r3, [r7, #8]
 5872 1a9e 022B     		cmp	r3, #2
 5873 1aa0 1CD1     		bne	.L324
1156:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=',';
 5874              		.loc 1 1156 0
 5875 1aa2 A54A     		ldr	r2, .L367
 5876 1aa4 FB68     		ldr	r3, [r7, #12]
 5877 1aa6 1344     		add	r3, r3, r2
 5878 1aa8 5833     		adds	r3, r3, #88
 5879 1aaa 2C22     		movs	r2, #44
 5880 1aac 5A71     		strb	r2, [r3, #5]
1157:.\Protocolo.c **** 							j--;
 5881              		.loc 1 1157 0
 5882 1aae FB68     		ldr	r3, [r7, #12]
 5883 1ab0 013B     		subs	r3, r3, #1
 5884 1ab2 FB60     		str	r3, [r7, #12]
1158:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 5885              		.loc 1 1158 0
 5886 1ab4 BB68     		ldr	r3, [r7, #8]
 5887 1ab6 0433     		adds	r3, r3, #4
 5888 1ab8 A04A     		ldr	r2, .L367+4
 5889 1aba D35C     		ldrb	r3, [r2, r3]
 5890 1abc DBB2     		uxtb	r3, r3
 5891 1abe 03F00F03 		and	r3, r3, #15
 5892 1ac2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 128


 5893 1ac4 3033     		adds	r3, r3, #48
 5894 1ac6 D9B2     		uxtb	r1, r3
 5895 1ac8 9B4A     		ldr	r2, .L367
 5896 1aca FB68     		ldr	r3, [r7, #12]
 5897 1acc 1344     		add	r3, r3, r2
 5898 1ace 5833     		adds	r3, r3, #88
 5899 1ad0 0A46     		mov	r2, r1
 5900 1ad2 5A71     		strb	r2, [r3, #5]
1159:.\Protocolo.c **** 							j--;
 5901              		.loc 1 1159 0
 5902 1ad4 FB68     		ldr	r3, [r7, #12]
 5903 1ad6 013B     		subs	r3, r3, #1
 5904 1ad8 FB60     		str	r3, [r7, #12]
 5905 1ada 12E0     		b	.L325
 5906              	.L324:
1160:.\Protocolo.c **** 						}else{
1161:.\Protocolo.c **** 							bufferLCD2.totalVolume1[j]=(Pump_AL_rxBuffer[4+x]&0x0F)+0x30;
 5907              		.loc 1 1161 0
 5908 1adc BB68     		ldr	r3, [r7, #8]
 5909 1ade 0433     		adds	r3, r3, #4
 5910 1ae0 964A     		ldr	r2, .L367+4
 5911 1ae2 D35C     		ldrb	r3, [r2, r3]
 5912 1ae4 DBB2     		uxtb	r3, r3
 5913 1ae6 03F00F03 		and	r3, r3, #15
 5914 1aea DBB2     		uxtb	r3, r3
 5915 1aec 3033     		adds	r3, r3, #48
 5916 1aee D9B2     		uxtb	r1, r3
 5917 1af0 914A     		ldr	r2, .L367
 5918 1af2 FB68     		ldr	r3, [r7, #12]
 5919 1af4 1344     		add	r3, r3, r2
 5920 1af6 5833     		adds	r3, r3, #88
 5921 1af8 0A46     		mov	r2, r1
 5922 1afa 5A71     		strb	r2, [r3, #5]
1162:.\Protocolo.c **** 							j--;
 5923              		.loc 1 1162 0
 5924 1afc FB68     		ldr	r3, [r7, #12]
 5925 1afe 013B     		subs	r3, r3, #1
 5926 1b00 FB60     		str	r3, [r7, #12]
 5927              	.L325:
1154:.\Protocolo.c **** 						if(x==2){
 5928              		.loc 1 1154 0 discriminator 2
 5929 1b02 BB68     		ldr	r3, [r7, #8]
 5930 1b04 0133     		adds	r3, r3, #1
 5931 1b06 BB60     		str	r3, [r7, #8]
 5932              	.L323:
1154:.\Protocolo.c **** 						if(x==2){
 5933              		.loc 1 1154 0 is_stmt 0 discriminator 1
 5934 1b08 BB68     		ldr	r3, [r7, #8]
 5935 1b0a 0B2B     		cmp	r3, #11
 5936 1b0c C6D9     		bls	.L326
1163:.\Protocolo.c **** 						}
1164:.\Protocolo.c **** 					}
1165:.\Protocolo.c **** 					bufferLCD2.totalMoney1[0]=12;
 5937              		.loc 1 1165 0 is_stmt 1
 5938 1b0e 8A4B     		ldr	r3, .L367
 5939 1b10 0C22     		movs	r2, #12
 5940 1b12 83F82120 		strb	r2, [r3, #33]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 129


1166:.\Protocolo.c **** 					j=12;
 5941              		.loc 1 1166 0
 5942 1b16 0C23     		movs	r3, #12
 5943 1b18 FB60     		str	r3, [r7, #12]
1167:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5944              		.loc 1 1167 0
 5945 1b1a 0023     		movs	r3, #0
 5946 1b1c BB60     		str	r3, [r7, #8]
 5947 1b1e 15E0     		b	.L327
 5948              	.L328:
1168:.\Protocolo.c **** 						bufferLCD2.totalMoney1[j]=(Pump_AL_rxBuffer[17+x]&0x0F)+0x30;
 5949              		.loc 1 1168 0 discriminator 3
 5950 1b20 BB68     		ldr	r3, [r7, #8]
 5951 1b22 1133     		adds	r3, r3, #17
 5952 1b24 854A     		ldr	r2, .L367+4
 5953 1b26 D35C     		ldrb	r3, [r2, r3]
 5954 1b28 DBB2     		uxtb	r3, r3
 5955 1b2a 03F00F03 		and	r3, r3, #15
 5956 1b2e DBB2     		uxtb	r3, r3
 5957 1b30 3033     		adds	r3, r3, #48
 5958 1b32 D9B2     		uxtb	r1, r3
 5959 1b34 804A     		ldr	r2, .L367
 5960 1b36 FB68     		ldr	r3, [r7, #12]
 5961 1b38 1344     		add	r3, r3, r2
 5962 1b3a 2033     		adds	r3, r3, #32
 5963 1b3c 0A46     		mov	r2, r1
 5964 1b3e 5A70     		strb	r2, [r3, #1]
1169:.\Protocolo.c **** 						j--;
 5965              		.loc 1 1169 0 discriminator 3
 5966 1b40 FB68     		ldr	r3, [r7, #12]
 5967 1b42 013B     		subs	r3, r3, #1
 5968 1b44 FB60     		str	r3, [r7, #12]
1167:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5969              		.loc 1 1167 0 discriminator 3
 5970 1b46 BB68     		ldr	r3, [r7, #8]
 5971 1b48 0133     		adds	r3, r3, #1
 5972 1b4a BB60     		str	r3, [r7, #8]
 5973              	.L327:
1167:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 5974              		.loc 1 1167 0 is_stmt 0 discriminator 1
 5975 1b4c BB68     		ldr	r3, [r7, #8]
 5976 1b4e 0B2B     		cmp	r3, #11
 5977 1b50 E6D9     		bls	.L328
1170:.\Protocolo.c **** 					}
1171:.\Protocolo.c ****                     bufferLCD2.ppu1[0]=6;
 5978              		.loc 1 1171 0 is_stmt 1
 5979 1b52 794B     		ldr	r3, .L367
 5980 1b54 0622     		movs	r2, #6
 5981 1b56 83F89920 		strb	r2, [r3, #153]
1172:.\Protocolo.c ****                     j=6;
 5982              		.loc 1 1172 0
 5983 1b5a 0623     		movs	r3, #6
 5984 1b5c FB60     		str	r3, [r7, #12]
1173:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 5985              		.loc 1 1173 0
 5986 1b5e 0023     		movs	r3, #0
 5987 1b60 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 130


 5988 1b62 15E0     		b	.L329
 5989              	.L330:
1174:.\Protocolo.c ****                         bufferLCD2.ppu1[j]=(Pump_AL_rxBuffer[x+30]&0x0F)+0x30;
 5990              		.loc 1 1174 0 discriminator 3
 5991 1b64 BB68     		ldr	r3, [r7, #8]
 5992 1b66 1E33     		adds	r3, r3, #30
 5993 1b68 744A     		ldr	r2, .L367+4
 5994 1b6a D35C     		ldrb	r3, [r2, r3]
 5995 1b6c DBB2     		uxtb	r3, r3
 5996 1b6e 03F00F03 		and	r3, r3, #15
 5997 1b72 DBB2     		uxtb	r3, r3
 5998 1b74 3033     		adds	r3, r3, #48
 5999 1b76 D9B2     		uxtb	r1, r3
 6000 1b78 6F4A     		ldr	r2, .L367
 6001 1b7a FB68     		ldr	r3, [r7, #12]
 6002 1b7c 1344     		add	r3, r3, r2
 6003 1b7e 9833     		adds	r3, r3, #152
 6004 1b80 0A46     		mov	r2, r1
 6005 1b82 5A70     		strb	r2, [r3, #1]
1175:.\Protocolo.c ****                         j--;
 6006              		.loc 1 1175 0 discriminator 3
 6007 1b84 FB68     		ldr	r3, [r7, #12]
 6008 1b86 013B     		subs	r3, r3, #1
 6009 1b88 FB60     		str	r3, [r7, #12]
1173:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6010              		.loc 1 1173 0 discriminator 3
 6011 1b8a BB68     		ldr	r3, [r7, #8]
 6012 1b8c 0133     		adds	r3, r3, #1
 6013 1b8e BB60     		str	r3, [r7, #8]
 6014              	.L329:
1173:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6015              		.loc 1 1173 0 is_stmt 0 discriminator 1
 6016 1b90 BB68     		ldr	r3, [r7, #8]
 6017 1b92 052B     		cmp	r3, #5
 6018 1b94 E6D9     		bls	.L330
1176:.\Protocolo.c ****                     }
1177:.\Protocolo.c **** 					bufferLCD2.totalVolume2[0]=13;
 6019              		.loc 1 1177 0 is_stmt 1
 6020 1b96 684B     		ldr	r3, .L367
 6021 1b98 0D22     		movs	r2, #13
 6022 1b9a 83F87120 		strb	r2, [r3, #113]
1178:.\Protocolo.c **** 					j=13;
 6023              		.loc 1 1178 0
 6024 1b9e 0D23     		movs	r3, #13
 6025 1ba0 FB60     		str	r3, [r7, #12]
1179:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6026              		.loc 1 1179 0
 6027 1ba2 0023     		movs	r3, #0
 6028 1ba4 BB60     		str	r3, [r7, #8]
 6029 1ba6 35E0     		b	.L331
 6030              	.L334:
1180:.\Protocolo.c **** 						if(x==2){
 6031              		.loc 1 1180 0
 6032 1ba8 BB68     		ldr	r3, [r7, #8]
 6033 1baa 022B     		cmp	r3, #2
 6034 1bac 1CD1     		bne	.L332
1181:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=',';
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 131


 6035              		.loc 1 1181 0
 6036 1bae 624A     		ldr	r2, .L367
 6037 1bb0 FB68     		ldr	r3, [r7, #12]
 6038 1bb2 1344     		add	r3, r3, r2
 6039 1bb4 7033     		adds	r3, r3, #112
 6040 1bb6 2C22     		movs	r2, #44
 6041 1bb8 5A70     		strb	r2, [r3, #1]
1182:.\Protocolo.c **** 							j--;
 6042              		.loc 1 1182 0
 6043 1bba FB68     		ldr	r3, [r7, #12]
 6044 1bbc 013B     		subs	r3, r3, #1
 6045 1bbe FB60     		str	r3, [r7, #12]
1183:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 6046              		.loc 1 1183 0
 6047 1bc0 BB68     		ldr	r3, [r7, #8]
 6048 1bc2 2E33     		adds	r3, r3, #46
 6049 1bc4 5D4A     		ldr	r2, .L367+4
 6050 1bc6 D35C     		ldrb	r3, [r2, r3]
 6051 1bc8 DBB2     		uxtb	r3, r3
 6052 1bca 03F00F03 		and	r3, r3, #15
 6053 1bce DBB2     		uxtb	r3, r3
 6054 1bd0 3033     		adds	r3, r3, #48
 6055 1bd2 D9B2     		uxtb	r1, r3
 6056 1bd4 584A     		ldr	r2, .L367
 6057 1bd6 FB68     		ldr	r3, [r7, #12]
 6058 1bd8 1344     		add	r3, r3, r2
 6059 1bda 7033     		adds	r3, r3, #112
 6060 1bdc 0A46     		mov	r2, r1
 6061 1bde 5A70     		strb	r2, [r3, #1]
1184:.\Protocolo.c **** 							j--;
 6062              		.loc 1 1184 0
 6063 1be0 FB68     		ldr	r3, [r7, #12]
 6064 1be2 013B     		subs	r3, r3, #1
 6065 1be4 FB60     		str	r3, [r7, #12]
 6066 1be6 12E0     		b	.L333
 6067              	.L332:
1185:.\Protocolo.c **** 						}else{
1186:.\Protocolo.c **** 							bufferLCD2.totalVolume2[j]=(Pump_AL_rxBuffer[46+x]&0x0F)+0x30;
 6068              		.loc 1 1186 0
 6069 1be8 BB68     		ldr	r3, [r7, #8]
 6070 1bea 2E33     		adds	r3, r3, #46
 6071 1bec 534A     		ldr	r2, .L367+4
 6072 1bee D35C     		ldrb	r3, [r2, r3]
 6073 1bf0 DBB2     		uxtb	r3, r3
 6074 1bf2 03F00F03 		and	r3, r3, #15
 6075 1bf6 DBB2     		uxtb	r3, r3
 6076 1bf8 3033     		adds	r3, r3, #48
 6077 1bfa D9B2     		uxtb	r1, r3
 6078 1bfc 4E4A     		ldr	r2, .L367
 6079 1bfe FB68     		ldr	r3, [r7, #12]
 6080 1c00 1344     		add	r3, r3, r2
 6081 1c02 7033     		adds	r3, r3, #112
 6082 1c04 0A46     		mov	r2, r1
 6083 1c06 5A70     		strb	r2, [r3, #1]
1187:.\Protocolo.c **** 							j--;
 6084              		.loc 1 1187 0
 6085 1c08 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 132


 6086 1c0a 013B     		subs	r3, r3, #1
 6087 1c0c FB60     		str	r3, [r7, #12]
 6088              	.L333:
1179:.\Protocolo.c **** 						if(x==2){
 6089              		.loc 1 1179 0 discriminator 2
 6090 1c0e BB68     		ldr	r3, [r7, #8]
 6091 1c10 0133     		adds	r3, r3, #1
 6092 1c12 BB60     		str	r3, [r7, #8]
 6093              	.L331:
1179:.\Protocolo.c **** 						if(x==2){
 6094              		.loc 1 1179 0 is_stmt 0 discriminator 1
 6095 1c14 BB68     		ldr	r3, [r7, #8]
 6096 1c16 0B2B     		cmp	r3, #11
 6097 1c18 C6D9     		bls	.L334
1188:.\Protocolo.c **** 						}
1189:.\Protocolo.c **** 					}
1190:.\Protocolo.c **** 					bufferLCD2.totalMoney2[0]=12;
 6098              		.loc 1 1190 0 is_stmt 1
 6099 1c1a 474B     		ldr	r3, .L367
 6100 1c1c 0C22     		movs	r2, #12
 6101 1c1e 83F83520 		strb	r2, [r3, #53]
1191:.\Protocolo.c **** 					j=12;
 6102              		.loc 1 1191 0
 6103 1c22 0C23     		movs	r3, #12
 6104 1c24 FB60     		str	r3, [r7, #12]
1192:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6105              		.loc 1 1192 0
 6106 1c26 0023     		movs	r3, #0
 6107 1c28 BB60     		str	r3, [r7, #8]
 6108 1c2a 15E0     		b	.L335
 6109              	.L336:
1193:.\Protocolo.c **** 						bufferLCD2.totalMoney2[j]=(Pump_AL_rxBuffer[59+x]&0x0F)+0x30;
 6110              		.loc 1 1193 0 discriminator 3
 6111 1c2c BB68     		ldr	r3, [r7, #8]
 6112 1c2e 3B33     		adds	r3, r3, #59
 6113 1c30 424A     		ldr	r2, .L367+4
 6114 1c32 D35C     		ldrb	r3, [r2, r3]
 6115 1c34 DBB2     		uxtb	r3, r3
 6116 1c36 03F00F03 		and	r3, r3, #15
 6117 1c3a DBB2     		uxtb	r3, r3
 6118 1c3c 3033     		adds	r3, r3, #48
 6119 1c3e D9B2     		uxtb	r1, r3
 6120 1c40 3D4A     		ldr	r2, .L367
 6121 1c42 FB68     		ldr	r3, [r7, #12]
 6122 1c44 1344     		add	r3, r3, r2
 6123 1c46 3033     		adds	r3, r3, #48
 6124 1c48 0A46     		mov	r2, r1
 6125 1c4a 5A71     		strb	r2, [r3, #5]
1194:.\Protocolo.c **** 						j--;
 6126              		.loc 1 1194 0 discriminator 3
 6127 1c4c FB68     		ldr	r3, [r7, #12]
 6128 1c4e 013B     		subs	r3, r3, #1
 6129 1c50 FB60     		str	r3, [r7, #12]
1192:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6130              		.loc 1 1192 0 discriminator 3
 6131 1c52 BB68     		ldr	r3, [r7, #8]
 6132 1c54 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 133


 6133 1c56 BB60     		str	r3, [r7, #8]
 6134              	.L335:
1192:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6135              		.loc 1 1192 0 is_stmt 0 discriminator 1
 6136 1c58 BB68     		ldr	r3, [r7, #8]
 6137 1c5a 0B2B     		cmp	r3, #11
 6138 1c5c E6D9     		bls	.L336
1195:.\Protocolo.c **** 					}
1196:.\Protocolo.c ****                     bufferLCD2.ppu2[0]=6;
 6139              		.loc 1 1196 0 is_stmt 1
 6140 1c5e 364B     		ldr	r3, .L367
 6141 1c60 0622     		movs	r2, #6
 6142 1c62 83F8A320 		strb	r2, [r3, #163]
1197:.\Protocolo.c ****                     j=6;
 6143              		.loc 1 1197 0
 6144 1c66 0623     		movs	r3, #6
 6145 1c68 FB60     		str	r3, [r7, #12]
1198:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6146              		.loc 1 1198 0
 6147 1c6a 0023     		movs	r3, #0
 6148 1c6c BB60     		str	r3, [r7, #8]
 6149 1c6e 15E0     		b	.L337
 6150              	.L338:
1199:.\Protocolo.c ****                         bufferLCD2.ppu2[j]=(Pump_AL_rxBuffer[x+72]&0x0F)+0x30;
 6151              		.loc 1 1199 0 discriminator 3
 6152 1c70 BB68     		ldr	r3, [r7, #8]
 6153 1c72 4833     		adds	r3, r3, #72
 6154 1c74 314A     		ldr	r2, .L367+4
 6155 1c76 D35C     		ldrb	r3, [r2, r3]
 6156 1c78 DBB2     		uxtb	r3, r3
 6157 1c7a 03F00F03 		and	r3, r3, #15
 6158 1c7e DBB2     		uxtb	r3, r3
 6159 1c80 3033     		adds	r3, r3, #48
 6160 1c82 D9B2     		uxtb	r1, r3
 6161 1c84 2C4A     		ldr	r2, .L367
 6162 1c86 FB68     		ldr	r3, [r7, #12]
 6163 1c88 1344     		add	r3, r3, r2
 6164 1c8a A033     		adds	r3, r3, #160
 6165 1c8c 0A46     		mov	r2, r1
 6166 1c8e DA70     		strb	r2, [r3, #3]
1200:.\Protocolo.c ****                         j--;
 6167              		.loc 1 1200 0 discriminator 3
 6168 1c90 FB68     		ldr	r3, [r7, #12]
 6169 1c92 013B     		subs	r3, r3, #1
 6170 1c94 FB60     		str	r3, [r7, #12]
1198:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6171              		.loc 1 1198 0 discriminator 3
 6172 1c96 BB68     		ldr	r3, [r7, #8]
 6173 1c98 0133     		adds	r3, r3, #1
 6174 1c9a BB60     		str	r3, [r7, #8]
 6175              	.L337:
1198:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6176              		.loc 1 1198 0 is_stmt 0 discriminator 1
 6177 1c9c BB68     		ldr	r3, [r7, #8]
 6178 1c9e 052B     		cmp	r3, #5
 6179 1ca0 E6D9     		bls	.L338
1201:.\Protocolo.c ****                     }
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 134


1202:.\Protocolo.c **** 					bufferLCD2.totalVolume3[0]=13;
 6180              		.loc 1 1202 0 is_stmt 1
 6181 1ca2 254B     		ldr	r3, .L367
 6182 1ca4 0D22     		movs	r2, #13
 6183 1ca6 83F88520 		strb	r2, [r3, #133]
1203:.\Protocolo.c **** 					j=13;
 6184              		.loc 1 1203 0
 6185 1caa 0D23     		movs	r3, #13
 6186 1cac FB60     		str	r3, [r7, #12]
1204:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6187              		.loc 1 1204 0
 6188 1cae 0023     		movs	r3, #0
 6189 1cb0 BB60     		str	r3, [r7, #8]
 6190 1cb2 35E0     		b	.L339
 6191              	.L342:
1205:.\Protocolo.c **** 						if(x==2){
 6192              		.loc 1 1205 0
 6193 1cb4 BB68     		ldr	r3, [r7, #8]
 6194 1cb6 022B     		cmp	r3, #2
 6195 1cb8 1CD1     		bne	.L340
1206:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=',';
 6196              		.loc 1 1206 0
 6197 1cba 1F4A     		ldr	r2, .L367
 6198 1cbc FB68     		ldr	r3, [r7, #12]
 6199 1cbe 1344     		add	r3, r3, r2
 6200 1cc0 8033     		adds	r3, r3, #128
 6201 1cc2 2C22     		movs	r2, #44
 6202 1cc4 5A71     		strb	r2, [r3, #5]
1207:.\Protocolo.c **** 							j--;
 6203              		.loc 1 1207 0
 6204 1cc6 FB68     		ldr	r3, [r7, #12]
 6205 1cc8 013B     		subs	r3, r3, #1
 6206 1cca FB60     		str	r3, [r7, #12]
1208:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=(Pump_AL_rxBuffer[88+x]&0x0F)+0x30;
 6207              		.loc 1 1208 0
 6208 1ccc BB68     		ldr	r3, [r7, #8]
 6209 1cce 5833     		adds	r3, r3, #88
 6210 1cd0 1A4A     		ldr	r2, .L367+4
 6211 1cd2 D35C     		ldrb	r3, [r2, r3]
 6212 1cd4 DBB2     		uxtb	r3, r3
 6213 1cd6 03F00F03 		and	r3, r3, #15
 6214 1cda DBB2     		uxtb	r3, r3
 6215 1cdc 3033     		adds	r3, r3, #48
 6216 1cde D9B2     		uxtb	r1, r3
 6217 1ce0 154A     		ldr	r2, .L367
 6218 1ce2 FB68     		ldr	r3, [r7, #12]
 6219 1ce4 1344     		add	r3, r3, r2
 6220 1ce6 8033     		adds	r3, r3, #128
 6221 1ce8 0A46     		mov	r2, r1
 6222 1cea 5A71     		strb	r2, [r3, #5]
1209:.\Protocolo.c **** 							j--;
 6223              		.loc 1 1209 0
 6224 1cec FB68     		ldr	r3, [r7, #12]
 6225 1cee 013B     		subs	r3, r3, #1
 6226 1cf0 FB60     		str	r3, [r7, #12]
 6227 1cf2 12E0     		b	.L341
 6228              	.L340:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 135


1210:.\Protocolo.c **** 						}else{
1211:.\Protocolo.c **** 							bufferLCD2.totalVolume3[j]=(Pump_AL_rxBuffer[88+x]&0x0F)+0x30;
 6229              		.loc 1 1211 0
 6230 1cf4 BB68     		ldr	r3, [r7, #8]
 6231 1cf6 5833     		adds	r3, r3, #88
 6232 1cf8 104A     		ldr	r2, .L367+4
 6233 1cfa D35C     		ldrb	r3, [r2, r3]
 6234 1cfc DBB2     		uxtb	r3, r3
 6235 1cfe 03F00F03 		and	r3, r3, #15
 6236 1d02 DBB2     		uxtb	r3, r3
 6237 1d04 3033     		adds	r3, r3, #48
 6238 1d06 D9B2     		uxtb	r1, r3
 6239 1d08 0B4A     		ldr	r2, .L367
 6240 1d0a FB68     		ldr	r3, [r7, #12]
 6241 1d0c 1344     		add	r3, r3, r2
 6242 1d0e 8033     		adds	r3, r3, #128
 6243 1d10 0A46     		mov	r2, r1
 6244 1d12 5A71     		strb	r2, [r3, #5]
1212:.\Protocolo.c **** 							j--;
 6245              		.loc 1 1212 0
 6246 1d14 FB68     		ldr	r3, [r7, #12]
 6247 1d16 013B     		subs	r3, r3, #1
 6248 1d18 FB60     		str	r3, [r7, #12]
 6249              	.L341:
1204:.\Protocolo.c **** 						if(x==2){
 6250              		.loc 1 1204 0 discriminator 2
 6251 1d1a BB68     		ldr	r3, [r7, #8]
 6252 1d1c 0133     		adds	r3, r3, #1
 6253 1d1e BB60     		str	r3, [r7, #8]
 6254              	.L339:
1204:.\Protocolo.c **** 						if(x==2){
 6255              		.loc 1 1204 0 is_stmt 0 discriminator 1
 6256 1d20 BB68     		ldr	r3, [r7, #8]
 6257 1d22 0B2B     		cmp	r3, #11
 6258 1d24 C6D9     		bls	.L342
1213:.\Protocolo.c **** 						}
1214:.\Protocolo.c **** 					}
1215:.\Protocolo.c **** 					bufferLCD2.totalMoney3[0]=12;
 6259              		.loc 1 1215 0 is_stmt 1
 6260 1d26 044B     		ldr	r3, .L367
 6261 1d28 0C22     		movs	r2, #12
 6262 1d2a 83F84920 		strb	r2, [r3, #73]
1216:.\Protocolo.c **** 					j=12;
 6263              		.loc 1 1216 0
 6264 1d2e 0C23     		movs	r3, #12
 6265 1d30 FB60     		str	r3, [r7, #12]
1217:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6266              		.loc 1 1217 0
 6267 1d32 0023     		movs	r3, #0
 6268 1d34 BB60     		str	r3, [r7, #8]
 6269 1d36 19E0     		b	.L343
 6270              	.L368:
 6271              		.align	2
 6272              	.L367:
 6273 1d38 00000000 		.word	bufferLCD2
 6274 1d3c 00000000 		.word	Pump_AL_rxBuffer
 6275              	.L344:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 136


1218:.\Protocolo.c **** 						bufferLCD2.totalMoney3[j]=(Pump_AL_rxBuffer[101+x]&0x0F)+0x30;
 6276              		.loc 1 1218 0 discriminator 3
 6277 1d40 BB68     		ldr	r3, [r7, #8]
 6278 1d42 6533     		adds	r3, r3, #101
 6279 1d44 224A     		ldr	r2, .L369
 6280 1d46 D35C     		ldrb	r3, [r2, r3]
 6281 1d48 DBB2     		uxtb	r3, r3
 6282 1d4a 03F00F03 		and	r3, r3, #15
 6283 1d4e DBB2     		uxtb	r3, r3
 6284 1d50 3033     		adds	r3, r3, #48
 6285 1d52 D9B2     		uxtb	r1, r3
 6286 1d54 1F4A     		ldr	r2, .L369+4
 6287 1d56 FB68     		ldr	r3, [r7, #12]
 6288 1d58 1344     		add	r3, r3, r2
 6289 1d5a 4833     		adds	r3, r3, #72
 6290 1d5c 0A46     		mov	r2, r1
 6291 1d5e 5A70     		strb	r2, [r3, #1]
1219:.\Protocolo.c **** 						j--;
 6292              		.loc 1 1219 0 discriminator 3
 6293 1d60 FB68     		ldr	r3, [r7, #12]
 6294 1d62 013B     		subs	r3, r3, #1
 6295 1d64 FB60     		str	r3, [r7, #12]
1217:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6296              		.loc 1 1217 0 discriminator 3
 6297 1d66 BB68     		ldr	r3, [r7, #8]
 6298 1d68 0133     		adds	r3, r3, #1
 6299 1d6a BB60     		str	r3, [r7, #8]
 6300              	.L343:
1217:.\Protocolo.c **** 					for(x=0;x<=11;x++){
 6301              		.loc 1 1217 0 is_stmt 0 discriminator 1
 6302 1d6c BB68     		ldr	r3, [r7, #8]
 6303 1d6e 0B2B     		cmp	r3, #11
 6304 1d70 E6D9     		bls	.L344
1220:.\Protocolo.c **** 					}
1221:.\Protocolo.c ****                     bufferLCD2.ppu3[0]=6;
 6305              		.loc 1 1221 0 is_stmt 1
 6306 1d72 184B     		ldr	r3, .L369+4
 6307 1d74 0622     		movs	r2, #6
 6308 1d76 83F8AD20 		strb	r2, [r3, #173]
1222:.\Protocolo.c ****                     j=6;
 6309              		.loc 1 1222 0
 6310 1d7a 0623     		movs	r3, #6
 6311 1d7c FB60     		str	r3, [r7, #12]
1223:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6312              		.loc 1 1223 0
 6313 1d7e 0023     		movs	r3, #0
 6314 1d80 BB60     		str	r3, [r7, #8]
 6315 1d82 15E0     		b	.L345
 6316              	.L346:
1224:.\Protocolo.c ****                         bufferLCD2.ppu3[j]=(Pump_AL_rxBuffer[x+114]&0x0F)+0x30;
 6317              		.loc 1 1224 0 discriminator 3
 6318 1d84 BB68     		ldr	r3, [r7, #8]
 6319 1d86 7233     		adds	r3, r3, #114
 6320 1d88 114A     		ldr	r2, .L369
 6321 1d8a D35C     		ldrb	r3, [r2, r3]
 6322 1d8c DBB2     		uxtb	r3, r3
 6323 1d8e 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 137


 6324 1d92 DBB2     		uxtb	r3, r3
 6325 1d94 3033     		adds	r3, r3, #48
 6326 1d96 D9B2     		uxtb	r1, r3
 6327 1d98 0E4A     		ldr	r2, .L369+4
 6328 1d9a FB68     		ldr	r3, [r7, #12]
 6329 1d9c 1344     		add	r3, r3, r2
 6330 1d9e A833     		adds	r3, r3, #168
 6331 1da0 0A46     		mov	r2, r1
 6332 1da2 5A71     		strb	r2, [r3, #5]
1225:.\Protocolo.c ****                         j--;
 6333              		.loc 1 1225 0 discriminator 3
 6334 1da4 FB68     		ldr	r3, [r7, #12]
 6335 1da6 013B     		subs	r3, r3, #1
 6336 1da8 FB60     		str	r3, [r7, #12]
1223:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6337              		.loc 1 1223 0 discriminator 3
 6338 1daa BB68     		ldr	r3, [r7, #8]
 6339 1dac 0133     		adds	r3, r3, #1
 6340 1dae BB60     		str	r3, [r7, #8]
 6341              	.L345:
1223:.\Protocolo.c ****                     for(x=0;x<=5;x++){
 6342              		.loc 1 1223 0 is_stmt 0 discriminator 1
 6343 1db0 BB68     		ldr	r3, [r7, #8]
 6344 1db2 052B     		cmp	r3, #5
 6345 1db4 E6D9     		bls	.L346
1226:.\Protocolo.c ****                     }
1227:.\Protocolo.c **** 					Pump_AL_ClearRxBuffer();
 6346              		.loc 1 1227 0 is_stmt 1
 6347 1db6 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1228:.\Protocolo.c **** 					return 3;
 6348              		.loc 1 1228 0
 6349 1dba 0323     		movs	r3, #3
 6350 1dbc 04E0     		b	.L140
 6351              	.L322:
1229:.\Protocolo.c **** 				}
1230:.\Protocolo.c **** 				else{
1231:.\Protocolo.c **** 					return 0;
 6352              		.loc 1 1231 0
 6353 1dbe 0023     		movs	r3, #0
 6354 1dc0 02E0     		b	.L140
 6355              	.L237:
1232:.\Protocolo.c **** 				}
1233:.\Protocolo.c **** 			break;
1234:.\Protocolo.c **** 				
1235:.\Protocolo.c **** 			default:
1236:.\Protocolo.c **** 				return 0;	
 6356              		.loc 1 1236 0
 6357 1dc2 0023     		movs	r3, #0
 6358 1dc4 00E0     		b	.L140
 6359              	.L234:
1237:.\Protocolo.c **** 			break;	
1238:.\Protocolo.c **** 		}
1239:.\Protocolo.c **** 	}else{
1240:.\Protocolo.c **** 		return 0;
 6360              		.loc 1 1240 0
 6361 1dc6 0023     		movs	r3, #0
 6362              	.L140:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 138


1241:.\Protocolo.c **** 	}
1242:.\Protocolo.c **** }
 6363              		.loc 1 1242 0
 6364 1dc8 1846     		mov	r0, r3
 6365 1dca 1037     		adds	r7, r7, #16
 6366              		.cfi_def_cfa_offset 8
 6367 1dcc BD46     		mov	sp, r7
 6368              		.cfi_def_cfa_register 13
 6369              		@ sp needed
 6370 1dce 80BD     		pop	{r7, pc}
 6371              	.L370:
 6372              		.align	2
 6373              	.L369:
 6374 1dd0 00000000 		.word	Pump_AL_rxBuffer
 6375 1dd4 00000000 		.word	bufferLCD2
 6376              		.cfi_endproc
 6377              	.LFE63:
 6378              		.size	get_total, .-get_total
 6379              		.section	.text.program,"ax",%progbits
 6380              		.align	2
 6381              		.global	program
 6382              		.thumb
 6383              		.thumb_func
 6384              		.type	program, %function
 6385              	program:
 6386              	.LFB64:
1243:.\Protocolo.c **** 
1244:.\Protocolo.c **** /*
1245:.\Protocolo.c **** ***************************************************************************************************
1246:.\Protocolo.c **** *                         program(uint8 dir, uint8 grade, uint8 *value, uint8 preset)
1247:.\Protocolo.c **** *
1248:.\Protocolo.c **** * Description : 
1249:.\Protocolo.c **** *               
1250:.\Protocolo.c **** *
1251:.\Protocolo.c **** * Argument(s) : none
1252:.\Protocolo.c **** *
1253:.\Protocolo.c **** * Return(s)   : none
1254:.\Protocolo.c **** *
1255:.\Protocolo.c **** * Caller(s)   : 
1256:.\Protocolo.c **** *
1257:.\Protocolo.c **** * Note(s)     : none.
1258:.\Protocolo.c **** ***************************************************************************************************
1259:.\Protocolo.c **** */
1260:.\Protocolo.c **** uint8 program(uint8 dir, uint8 grade, uint8 *value, uint8 preset){
 6387              		.loc 1 1260 0
 6388              		.cfi_startproc
 6389              		@ args = 0, pretend = 0, frame = 40
 6390              		@ frame_needed = 1, uses_anonymous_args = 0
 6391 0000 80B5     		push	{r7, lr}
 6392              		.cfi_def_cfa_offset 8
 6393              		.cfi_offset 7, -8
 6394              		.cfi_offset 14, -4
 6395 0002 8AB0     		sub	sp, sp, #40
 6396              		.cfi_def_cfa_offset 48
 6397 0004 00AF     		add	r7, sp, #0
 6398              		.cfi_def_cfa_register 7
 6399 0006 3A60     		str	r2, [r7]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 139


 6400 0008 1A46     		mov	r2, r3
 6401 000a 0346     		mov	r3, r0
 6402 000c FB71     		strb	r3, [r7, #7]
 6403 000e 0B46     		mov	r3, r1
 6404 0010 BB71     		strb	r3, [r7, #6]
 6405 0012 1346     		mov	r3, r2
 6406 0014 7B71     		strb	r3, [r7, #5]
1261:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,decimal=0;
 6407              		.loc 1 1261 0
 6408 0016 07F10803 		add	r3, r7, #8
 6409 001a 0022     		movs	r2, #0
 6410 001c 1A60     		str	r2, [r3]
 6411 001e 0433     		adds	r3, r3, #4
 6412 0020 0022     		movs	r2, #0
 6413 0022 1A60     		str	r2, [r3]
 6414 0024 0433     		adds	r3, r3, #4
 6415 0026 0022     		movs	r2, #0
 6416 0028 1A60     		str	r2, [r3]
 6417 002a 0433     		adds	r3, r3, #4
 6418 002c 0022     		movs	r2, #0
 6419 002e 1A60     		str	r2, [r3]
 6420 0030 0433     		adds	r3, r3, #4
 6421 0032 0022     		movs	r2, #0
 6422 0034 1A80     		strh	r2, [r3]	@ movhi
 6423 0036 0233     		adds	r3, r3, #2
 6424 0038 0023     		movs	r3, #0
 6425 003a 87F82530 		strb	r3, [r7, #37]
1262:.\Protocolo.c ****     uint32 i,j;
1263:.\Protocolo.c **** 	temp=4;
 6426              		.loc 1 1263 0
 6427 003e 0423     		movs	r3, #4
 6428 0040 87F82630 		strb	r3, [r7, #38]
1264:.\Protocolo.c **** 	if(((digits==5)||(digits==6))&&(preset==1)){
 6429              		.loc 1 1264 0
 6430 0044 A84B     		ldr	r3, .L428
 6431 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6432 0048 052B     		cmp	r3, #5
 6433 004a 03D0     		beq	.L372
 6434              		.loc 1 1264 0 is_stmt 0 discriminator 2
 6435 004c A64B     		ldr	r3, .L428
 6436 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6437 0050 062B     		cmp	r3, #6
 6438 0052 05D1     		bne	.L373
 6439              	.L372:
 6440              		.loc 1 1264 0 discriminator 3
 6441 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6442 0056 012B     		cmp	r3, #1
 6443 0058 02D1     		bne	.L373
1265:.\Protocolo.c **** 		temp=3;
 6444              		.loc 1 1265 0 is_stmt 1
 6445 005a 0323     		movs	r3, #3
 6446 005c 87F82630 		strb	r3, [r7, #38]
 6447              	.L373:
1266:.\Protocolo.c **** 	}
1267:.\Protocolo.c **** 	if((digits==5)&&(preset==2)){
 6448              		.loc 1 1267 0
 6449 0060 A14B     		ldr	r3, .L428
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 140


 6450 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6451 0064 052B     		cmp	r3, #5
 6452 0066 05D1     		bne	.L374
 6453              		.loc 1 1267 0 is_stmt 0 discriminator 1
 6454 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6455 006a 022B     		cmp	r3, #2
 6456 006c 02D1     		bne	.L374
1268:.\Protocolo.c **** 		temp=5;
 6457              		.loc 1 1268 0 is_stmt 1
 6458 006e 0523     		movs	r3, #5
 6459 0070 87F82630 		strb	r3, [r7, #38]
 6460              	.L374:
1269:.\Protocolo.c **** 	}
1270:.\Protocolo.c **** 	if((digits==7)&&(preset==1)){
 6461              		.loc 1 1270 0
 6462 0074 9C4B     		ldr	r3, .L428
 6463 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6464 0078 072B     		cmp	r3, #7
 6465 007a 05D1     		bne	.L375
 6466              		.loc 1 1270 0 is_stmt 0 discriminator 1
 6467 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6468 007e 012B     		cmp	r3, #1
 6469 0080 02D1     		bne	.L375
1271:.\Protocolo.c **** 		temp=0;
 6470              		.loc 1 1271 0 is_stmt 1
 6471 0082 0023     		movs	r3, #0
 6472 0084 87F82630 		strb	r3, [r7, #38]
 6473              	.L375:
1272:.\Protocolo.c **** 	}
1273:.\Protocolo.c **** 	if((digits==7)&&(preset==2)){
 6474              		.loc 1 1273 0
 6475 0088 974B     		ldr	r3, .L428
 6476 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6477 008c 072B     		cmp	r3, #7
 6478 008e 05D1     		bne	.L376
 6479              		.loc 1 1273 0 is_stmt 0 discriminator 1
 6480 0090 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6481 0092 022B     		cmp	r3, #2
 6482 0094 02D1     		bne	.L376
1274:.\Protocolo.c **** 		temp=2;
 6483              		.loc 1 1274 0 is_stmt 1
 6484 0096 0223     		movs	r3, #2
 6485 0098 87F82630 		strb	r3, [r7, #38]
 6486              	.L376:
1275:.\Protocolo.c **** 	}	
1276:.\Protocolo.c **** 	decimal=0;
 6487              		.loc 1 1276 0
 6488 009c 0023     		movs	r3, #0
 6489 009e 87F82530 		strb	r3, [r7, #37]
1277:.\Protocolo.c **** 	for(i=1;i<=value[0];i++){
 6490              		.loc 1 1277 0
 6491 00a2 0123     		movs	r3, #1
 6492 00a4 3B62     		str	r3, [r7, #32]
 6493 00a6 28E0     		b	.L377
 6494              	.L380:
1278:.\Protocolo.c **** 		if(decimal>=1){
 6495              		.loc 1 1278 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 141


 6496 00a8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6497 00ac 002B     		cmp	r3, #0
 6498 00ae 0DD0     		beq	.L378
1279:.\Protocolo.c **** 			decimal++;
 6499              		.loc 1 1279 0
 6500 00b0 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6501 00b4 0133     		adds	r3, r3, #1
 6502 00b6 87F82530 		strb	r3, [r7, #37]
1280:.\Protocolo.c **** 			value[i]=value[i+1];
 6503              		.loc 1 1280 0
 6504 00ba 3A68     		ldr	r2, [r7]
 6505 00bc 3B6A     		ldr	r3, [r7, #32]
 6506 00be 1344     		add	r3, r3, r2
 6507 00c0 3A6A     		ldr	r2, [r7, #32]
 6508 00c2 0132     		adds	r2, r2, #1
 6509 00c4 3968     		ldr	r1, [r7]
 6510 00c6 0A44     		add	r2, r2, r1
 6511 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6512 00ca 1A70     		strb	r2, [r3]
 6513              	.L378:
1281:.\Protocolo.c **** 		}				
1282:.\Protocolo.c **** 		if(value[i]==','){
 6514              		.loc 1 1282 0
 6515 00cc 3A68     		ldr	r2, [r7]
 6516 00ce 3B6A     		ldr	r3, [r7, #32]
 6517 00d0 1344     		add	r3, r3, r2
 6518 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6519 00d4 2C2B     		cmp	r3, #44
 6520 00d6 0DD1     		bne	.L379
1283:.\Protocolo.c **** 			decimal++;
 6521              		.loc 1 1283 0
 6522 00d8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6523 00dc 0133     		adds	r3, r3, #1
 6524 00de 87F82530 		strb	r3, [r7, #37]
1284:.\Protocolo.c **** 			value[i]=value[i+1];
 6525              		.loc 1 1284 0
 6526 00e2 3A68     		ldr	r2, [r7]
 6527 00e4 3B6A     		ldr	r3, [r7, #32]
 6528 00e6 1344     		add	r3, r3, r2
 6529 00e8 3A6A     		ldr	r2, [r7, #32]
 6530 00ea 0132     		adds	r2, r2, #1
 6531 00ec 3968     		ldr	r1, [r7]
 6532 00ee 0A44     		add	r2, r2, r1
 6533 00f0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6534 00f2 1A70     		strb	r2, [r3]
 6535              	.L379:
1277:.\Protocolo.c **** 		if(decimal>=1){
 6536              		.loc 1 1277 0 discriminator 2
 6537 00f4 3B6A     		ldr	r3, [r7, #32]
 6538 00f6 0133     		adds	r3, r3, #1
 6539 00f8 3B62     		str	r3, [r7, #32]
 6540              	.L377:
1277:.\Protocolo.c **** 		if(decimal>=1){
 6541              		.loc 1 1277 0 is_stmt 0 discriminator 1
 6542 00fa 3B68     		ldr	r3, [r7]
 6543 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6544 00fe 1A46     		mov	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 142


 6545 0100 3B6A     		ldr	r3, [r7, #32]
 6546 0102 9A42     		cmp	r2, r3
 6547 0104 D0D2     		bcs	.L380
1285:.\Protocolo.c **** 		}
1286:.\Protocolo.c **** 	}
1287:.\Protocolo.c **** 	if(decimal>=1){
 6548              		.loc 1 1287 0 is_stmt 1
 6549 0106 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6550 010a 002B     		cmp	r3, #0
 6551 010c 0AD0     		beq	.L381
1288:.\Protocolo.c **** 		decimal=decimal-1;
 6552              		.loc 1 1288 0
 6553 010e 97F82530 		ldrb	r3, [r7, #37]
 6554 0112 013B     		subs	r3, r3, #1
 6555 0114 87F82530 		strb	r3, [r7, #37]
1289:.\Protocolo.c **** 		value[0]=value[0]-1;
 6556              		.loc 1 1289 0
 6557 0118 3B68     		ldr	r3, [r7]
 6558 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6559 011c 013B     		subs	r3, r3, #1
 6560 011e DAB2     		uxtb	r2, r3
 6561 0120 3B68     		ldr	r3, [r7]
 6562 0122 1A70     		strb	r2, [r3]
 6563              	.L381:
1290:.\Protocolo.c **** 	}	
1291:.\Protocolo.c **** 	if(decimal>=4){
 6564              		.loc 1 1291 0
 6565 0124 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6566 0128 032B     		cmp	r3, #3
 6567 012a 01D9     		bls	.L382
1292:.\Protocolo.c **** 		return 0;
 6568              		.loc 1 1292 0
 6569 012c 0023     		movs	r3, #0
 6570 012e A7E2     		b	.L427
 6571              	.L382:
1293:.\Protocolo.c **** 	}	
1294:.\Protocolo.c **** 	if(digits!=7){		
 6572              		.loc 1 1294 0
 6573 0130 6D4B     		ldr	r3, .L428
 6574 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6575 0134 072B     		cmp	r3, #7
 6576 0136 00F04D81 		beq	.L384
1295:.\Protocolo.c **** 		buffer[0]=0xFF;
 6577              		.loc 1 1295 0
 6578 013a FF23     		movs	r3, #255
 6579 013c 3B72     		strb	r3, [r7, #8]
1296:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 6580              		.loc 1 1296 0
 6581 013e 97F82630 		ldrb	r3, [r7, #38]
 6582 0142 63F01F03 		orn	r3, r3, #31
 6583 0146 DBB2     		uxtb	r3, r3
 6584 0148 7B72     		strb	r3, [r7, #9]
1297:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 6585              		.loc 1 1297 0
 6586 014a 7B79     		ldrb	r3, [r7, #5]
 6587 014c 63F00F03 		orn	r3, r3, #15
 6588 0150 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 143


 6589 0152 BB72     		strb	r3, [r7, #10]
1298:.\Protocolo.c **** 		buffer[3]=0xF4;
 6590              		.loc 1 1298 0
 6591 0154 F423     		movs	r3, #244
 6592 0156 FB72     		strb	r3, [r7, #11]
1299:.\Protocolo.c **** 		buffer[4]=0xF8;	
 6593              		.loc 1 1299 0
 6594 0158 F823     		movs	r3, #248
 6595 015a 3B73     		strb	r3, [r7, #12]
1300:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 6596              		.loc 1 1300 0
 6597 015c 0523     		movs	r3, #5
 6598 015e 3B62     		str	r3, [r7, #32]
 6599 0160 08E0     		b	.L385
 6600              	.L386:
1301:.\Protocolo.c **** 			buffer[i]=0xE0;
 6601              		.loc 1 1301 0 discriminator 3
 6602 0162 07F10802 		add	r2, r7, #8
 6603 0166 3B6A     		ldr	r3, [r7, #32]
 6604 0168 1344     		add	r3, r3, r2
 6605 016a E022     		movs	r2, #224
 6606 016c 1A70     		strb	r2, [r3]
1300:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 6607              		.loc 1 1300 0 discriminator 3
 6608 016e 3B6A     		ldr	r3, [r7, #32]
 6609 0170 0133     		adds	r3, r3, #1
 6610 0172 3B62     		str	r3, [r7, #32]
 6611              	.L385:
1300:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 6612              		.loc 1 1300 0 is_stmt 0 discriminator 1
 6613 0174 5D4B     		ldr	r3, .L428+4
 6614 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6615 0178 5A1D     		adds	r2, r3, #5
 6616 017a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6617 017e D31A     		subs	r3, r2, r3
 6618 0180 1A46     		mov	r2, r3
 6619 0182 3B6A     		ldr	r3, [r7, #32]
 6620 0184 9A42     		cmp	r2, r3
 6621 0186 ECD8     		bhi	.L386
1302:.\Protocolo.c **** 		}
1303:.\Protocolo.c **** 		for(j=i;j<(i+value[0]);j++){
 6622              		.loc 1 1303 0 is_stmt 1
 6623 0188 3B6A     		ldr	r3, [r7, #32]
 6624 018a FB61     		str	r3, [r7, #28]
 6625 018c 1AE0     		b	.L387
 6626              	.L388:
1304:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6627              		.loc 1 1304 0 discriminator 3
 6628 018e 3B68     		ldr	r3, [r7]
 6629 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6630 0192 1946     		mov	r1, r3
 6631 0194 3A6A     		ldr	r2, [r7, #32]
 6632 0196 FB69     		ldr	r3, [r7, #28]
 6633 0198 D31A     		subs	r3, r2, r3
 6634 019a 0B44     		add	r3, r3, r1
 6635 019c 3A68     		ldr	r2, [r7]
 6636 019e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 144


 6637 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6638 01a2 DBB2     		uxtb	r3, r3
 6639 01a4 03F00F03 		and	r3, r3, #15
 6640 01a8 DBB2     		uxtb	r3, r3
 6641 01aa 63F01F03 		orn	r3, r3, #31
 6642 01ae DBB2     		uxtb	r3, r3
 6643 01b0 D9B2     		uxtb	r1, r3
 6644 01b2 07F10802 		add	r2, r7, #8
 6645 01b6 FB69     		ldr	r3, [r7, #28]
 6646 01b8 1344     		add	r3, r3, r2
 6647 01ba 0A46     		mov	r2, r1
 6648 01bc 1A70     		strb	r2, [r3]
1303:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6649              		.loc 1 1303 0 discriminator 3
 6650 01be FB69     		ldr	r3, [r7, #28]
 6651 01c0 0133     		adds	r3, r3, #1
 6652 01c2 FB61     		str	r3, [r7, #28]
 6653              	.L387:
1303:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6654              		.loc 1 1303 0 is_stmt 0 discriminator 1
 6655 01c4 3B68     		ldr	r3, [r7]
 6656 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6657 01c8 1A46     		mov	r2, r3
 6658 01ca 3B6A     		ldr	r3, [r7, #32]
 6659 01cc 1A44     		add	r2, r2, r3
 6660 01ce FB69     		ldr	r3, [r7, #28]
 6661 01d0 9A42     		cmp	r2, r3
 6662 01d2 DCD8     		bhi	.L388
1305:.\Protocolo.c **** 		}
1306:.\Protocolo.c **** 		for(i=j;i<=10;i++){
 6663              		.loc 1 1306 0 is_stmt 1
 6664 01d4 FB69     		ldr	r3, [r7, #28]
 6665 01d6 3B62     		str	r3, [r7, #32]
 6666 01d8 08E0     		b	.L389
 6667              	.L390:
1307:.\Protocolo.c **** 			buffer[i]=0xE0;
 6668              		.loc 1 1307 0 discriminator 3
 6669 01da 07F10802 		add	r2, r7, #8
 6670 01de 3B6A     		ldr	r3, [r7, #32]
 6671 01e0 1344     		add	r3, r3, r2
 6672 01e2 E022     		movs	r2, #224
 6673 01e4 1A70     		strb	r2, [r3]
1306:.\Protocolo.c **** 			buffer[i]=0xE0;
 6674              		.loc 1 1306 0 discriminator 3
 6675 01e6 3B6A     		ldr	r3, [r7, #32]
 6676 01e8 0133     		adds	r3, r3, #1
 6677 01ea 3B62     		str	r3, [r7, #32]
 6678              	.L389:
1306:.\Protocolo.c **** 			buffer[i]=0xE0;
 6679              		.loc 1 1306 0 is_stmt 0 discriminator 1
 6680 01ec 3B6A     		ldr	r3, [r7, #32]
 6681 01ee 0A2B     		cmp	r3, #10
 6682 01f0 F3D9     		bls	.L390
1308:.\Protocolo.c **** 		}
1309:.\Protocolo.c **** 		buffer[11]=0xFB;
 6683              		.loc 1 1309 0 is_stmt 1
 6684 01f2 FB23     		movs	r3, #251
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 145


 6685 01f4 FB74     		strb	r3, [r7, #19]
1310:.\Protocolo.c **** 		buffer[12]=0;
 6686              		.loc 1 1310 0
 6687 01f6 0023     		movs	r3, #0
 6688 01f8 3B75     		strb	r3, [r7, #20]
1311:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 6689              		.loc 1 1311 0
 6690 01fa 0023     		movs	r3, #0
 6691 01fc 3B62     		str	r3, [r7, #32]
 6692 01fe 0EE0     		b	.L391
 6693              	.L392:
1312:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 6694              		.loc 1 1312 0 discriminator 3
 6695 0200 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 6696 0202 07F10801 		add	r1, r7, #8
 6697 0206 3B6A     		ldr	r3, [r7, #32]
 6698 0208 0B44     		add	r3, r3, r1
 6699 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6700 020c 03F00F03 		and	r3, r3, #15
 6701 0210 DBB2     		uxtb	r3, r3
 6702 0212 1344     		add	r3, r3, r2
 6703 0214 DBB2     		uxtb	r3, r3
 6704 0216 3B75     		strb	r3, [r7, #20]
1311:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 6705              		.loc 1 1311 0 discriminator 3
 6706 0218 3B6A     		ldr	r3, [r7, #32]
 6707 021a 0133     		adds	r3, r3, #1
 6708 021c 3B62     		str	r3, [r7, #32]
 6709              	.L391:
1311:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 6710              		.loc 1 1311 0 is_stmt 0 discriminator 1
 6711 021e 3B6A     		ldr	r3, [r7, #32]
 6712 0220 0B2B     		cmp	r3, #11
 6713 0222 EDD9     		bls	.L392
1313:.\Protocolo.c **** 		}
1314:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 6714              		.loc 1 1314 0 is_stmt 1
 6715 0224 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 6716 0226 5B42     		negs	r3, r3
 6717 0228 DBB2     		uxtb	r3, r3
 6718 022a DBB2     		uxtb	r3, r3
 6719 022c 03F00F03 		and	r3, r3, #15
 6720 0230 DBB2     		uxtb	r3, r3
 6721 0232 63F01F03 		orn	r3, r3, #31
 6722 0236 DBB2     		uxtb	r3, r3
 6723 0238 DBB2     		uxtb	r3, r3
 6724 023a 3B75     		strb	r3, [r7, #20]
1315:.\Protocolo.c **** 		buffer[13]=0xF0;
 6725              		.loc 1 1315 0
 6726 023c F023     		movs	r3, #240
 6727 023e 7B75     		strb	r3, [r7, #21]
1316:.\Protocolo.c **** 		size=13;
 6728              		.loc 1 1316 0
 6729 0240 0D23     		movs	r3, #13
 6730 0242 87F82730 		strb	r3, [r7, #39]
1317:.\Protocolo.c **** 		if(digits==5){
 6731              		.loc 1 1317 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 146


 6732 0246 284B     		ldr	r3, .L428
 6733 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6734 024a 052B     		cmp	r3, #5
 6735 024c 29D1     		bne	.L393
1318:.\Protocolo.c **** 			buffer[10]=0xFB;
 6736              		.loc 1 1318 0
 6737 024e FB23     		movs	r3, #251
 6738 0250 BB74     		strb	r3, [r7, #18]
1319:.\Protocolo.c **** 			buffer[11]=0;
 6739              		.loc 1 1319 0
 6740 0252 0023     		movs	r3, #0
 6741 0254 FB74     		strb	r3, [r7, #19]
1320:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 6742              		.loc 1 1320 0
 6743 0256 0023     		movs	r3, #0
 6744 0258 3B62     		str	r3, [r7, #32]
 6745 025a 0EE0     		b	.L394
 6746              	.L395:
1321:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 6747              		.loc 1 1321 0 discriminator 3
 6748 025c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 6749 025e 07F10801 		add	r1, r7, #8
 6750 0262 3B6A     		ldr	r3, [r7, #32]
 6751 0264 0B44     		add	r3, r3, r1
 6752 0266 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6753 0268 03F00F03 		and	r3, r3, #15
 6754 026c DBB2     		uxtb	r3, r3
 6755 026e 1344     		add	r3, r3, r2
 6756 0270 DBB2     		uxtb	r3, r3
 6757 0272 FB74     		strb	r3, [r7, #19]
1320:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 6758              		.loc 1 1320 0 discriminator 3
 6759 0274 3B6A     		ldr	r3, [r7, #32]
 6760 0276 0133     		adds	r3, r3, #1
 6761 0278 3B62     		str	r3, [r7, #32]
 6762              	.L394:
1320:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 6763              		.loc 1 1320 0 is_stmt 0 discriminator 1
 6764 027a 3B6A     		ldr	r3, [r7, #32]
 6765 027c 0A2B     		cmp	r3, #10
 6766 027e EDD9     		bls	.L395
1322:.\Protocolo.c **** 			}
1323:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 6767              		.loc 1 1323 0 is_stmt 1
 6768 0280 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6769 0282 5B42     		negs	r3, r3
 6770 0284 DBB2     		uxtb	r3, r3
 6771 0286 DBB2     		uxtb	r3, r3
 6772 0288 03F00F03 		and	r3, r3, #15
 6773 028c DBB2     		uxtb	r3, r3
 6774 028e 63F01F03 		orn	r3, r3, #31
 6775 0292 DBB2     		uxtb	r3, r3
 6776 0294 DBB2     		uxtb	r3, r3
 6777 0296 FB74     		strb	r3, [r7, #19]
1324:.\Protocolo.c **** 			buffer[12]=0xF0;
 6778              		.loc 1 1324 0
 6779 0298 F023     		movs	r3, #240
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 147


 6780 029a 3B75     		strb	r3, [r7, #20]
1325:.\Protocolo.c **** 			size=12;		
 6781              		.loc 1 1325 0
 6782 029c 0C23     		movs	r3, #12
 6783 029e 87F82730 		strb	r3, [r7, #39]
 6784              	.L393:
1326:.\Protocolo.c **** 		}
1327:.\Protocolo.c **** 		if(preset==1){
 6785              		.loc 1 1327 0
 6786 02a2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6787 02a4 012B     		cmp	r3, #1
 6788 02a6 40F09580 		bne	.L384
1328:.\Protocolo.c **** 			if(decimal==3){
 6789              		.loc 1 1328 0
 6790 02aa 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6791 02ae 032B     		cmp	r3, #3
 6792 02b0 0AD1     		bne	.L396
1329:.\Protocolo.c **** 				value[0]=value[0]-1;
 6793              		.loc 1 1329 0
 6794 02b2 3B68     		ldr	r3, [r7]
 6795 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6796 02b6 013B     		subs	r3, r3, #1
 6797 02b8 DAB2     		uxtb	r2, r3
 6798 02ba 3B68     		ldr	r3, [r7]
 6799 02bc 1A70     		strb	r2, [r3]
1330:.\Protocolo.c **** 				decimal=decimal-1;
 6800              		.loc 1 1330 0
 6801 02be 97F82530 		ldrb	r3, [r7, #37]
 6802 02c2 013B     		subs	r3, r3, #1
 6803 02c4 87F82530 		strb	r3, [r7, #37]
 6804              	.L396:
1331:.\Protocolo.c **** 			}
1332:.\Protocolo.c **** 			buffer[4]=0xF6;
 6805              		.loc 1 1332 0
 6806 02c8 F623     		movs	r3, #246
 6807 02ca 3B73     		strb	r3, [r7, #12]
1333:.\Protocolo.c **** 			buffer[5]=(0xE0|(grade-1));
 6808              		.loc 1 1333 0
 6809 02cc BB79     		ldrb	r3, [r7, #6]
 6810 02ce 013B     		subs	r3, r3, #1
 6811 02d0 DBB2     		uxtb	r3, r3
 6812 02d2 DBB2     		uxtb	r3, r3
 6813 02d4 63F01F03 		orn	r3, r3, #31
 6814 02d8 DBB2     		uxtb	r3, r3
 6815 02da DBB2     		uxtb	r3, r3
 6816 02dc 7B73     		strb	r3, [r7, #13]
1334:.\Protocolo.c **** 			buffer[6]=0xF8;
 6817              		.loc 1 1334 0
 6818 02de F823     		movs	r3, #248
 6819 02e0 BB73     		strb	r3, [r7, #14]
1335:.\Protocolo.c **** 			for(i=7;i<((7+(decimalVolume-1))-decimal);i++){
 6820              		.loc 1 1335 0
 6821 02e2 0723     		movs	r3, #7
 6822 02e4 3B62     		str	r3, [r7, #32]
 6823 02e6 0CE0     		b	.L397
 6824              	.L429:
 6825              		.align	2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 148


 6826              	.L428:
 6827 02e8 00000000 		.word	digits
 6828 02ec 00000000 		.word	decimalMoney
 6829              	.L398:
1336:.\Protocolo.c **** 				buffer[i]=0xE0;
 6830              		.loc 1 1336 0 discriminator 3
 6831 02f0 07F10802 		add	r2, r7, #8
 6832 02f4 3B6A     		ldr	r3, [r7, #32]
 6833 02f6 1344     		add	r3, r3, r2
 6834 02f8 E022     		movs	r2, #224
 6835 02fa 1A70     		strb	r2, [r3]
1335:.\Protocolo.c **** 			for(i=7;i<((7+(decimalVolume-1))-decimal);i++){
 6836              		.loc 1 1335 0 discriminator 3
 6837 02fc 3B6A     		ldr	r3, [r7, #32]
 6838 02fe 0133     		adds	r3, r3, #1
 6839 0300 3B62     		str	r3, [r7, #32]
 6840              	.L397:
1335:.\Protocolo.c **** 			for(i=7;i<((7+(decimalVolume-1))-decimal);i++){
 6841              		.loc 1 1335 0 is_stmt 0 discriminator 1
 6842 0302 AB4B     		ldr	r3, .L430
 6843 0304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6844 0306 9A1D     		adds	r2, r3, #6
 6845 0308 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 6846 030c D31A     		subs	r3, r2, r3
 6847 030e 1A46     		mov	r2, r3
 6848 0310 3B6A     		ldr	r3, [r7, #32]
 6849 0312 9A42     		cmp	r2, r3
 6850 0314 ECD8     		bhi	.L398
1337:.\Protocolo.c **** 			}
1338:.\Protocolo.c **** 			for(j=i;j<(i+value[0]);j++){
 6851              		.loc 1 1338 0 is_stmt 1
 6852 0316 3B6A     		ldr	r3, [r7, #32]
 6853 0318 FB61     		str	r3, [r7, #28]
 6854 031a 1AE0     		b	.L399
 6855              	.L400:
1339:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6856              		.loc 1 1339 0 discriminator 3
 6857 031c 3B68     		ldr	r3, [r7]
 6858 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6859 0320 1946     		mov	r1, r3
 6860 0322 3A6A     		ldr	r2, [r7, #32]
 6861 0324 FB69     		ldr	r3, [r7, #28]
 6862 0326 D31A     		subs	r3, r2, r3
 6863 0328 0B44     		add	r3, r3, r1
 6864 032a 3A68     		ldr	r2, [r7]
 6865 032c 1344     		add	r3, r3, r2
 6866 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6867 0330 DBB2     		uxtb	r3, r3
 6868 0332 03F00F03 		and	r3, r3, #15
 6869 0336 DBB2     		uxtb	r3, r3
 6870 0338 63F01F03 		orn	r3, r3, #31
 6871 033c DBB2     		uxtb	r3, r3
 6872 033e D9B2     		uxtb	r1, r3
 6873 0340 07F10802 		add	r2, r7, #8
 6874 0344 FB69     		ldr	r3, [r7, #28]
 6875 0346 1344     		add	r3, r3, r2
 6876 0348 0A46     		mov	r2, r1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 149


 6877 034a 1A70     		strb	r2, [r3]
1338:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6878              		.loc 1 1338 0 discriminator 3
 6879 034c FB69     		ldr	r3, [r7, #28]
 6880 034e 0133     		adds	r3, r3, #1
 6881 0350 FB61     		str	r3, [r7, #28]
 6882              	.L399:
1338:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 6883              		.loc 1 1338 0 is_stmt 0 discriminator 1
 6884 0352 3B68     		ldr	r3, [r7]
 6885 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6886 0356 1A46     		mov	r2, r3
 6887 0358 3B6A     		ldr	r3, [r7, #32]
 6888 035a 1A44     		add	r2, r2, r3
 6889 035c FB69     		ldr	r3, [r7, #28]
 6890 035e 9A42     		cmp	r2, r3
 6891 0360 DCD8     		bhi	.L400
1340:.\Protocolo.c **** 			}
1341:.\Protocolo.c **** 			for(i=j;i<=11;i++){
 6892              		.loc 1 1341 0 is_stmt 1
 6893 0362 FB69     		ldr	r3, [r7, #28]
 6894 0364 3B62     		str	r3, [r7, #32]
 6895 0366 08E0     		b	.L401
 6896              	.L402:
1342:.\Protocolo.c **** 				buffer[i]=0xE0;
 6897              		.loc 1 1342 0 discriminator 3
 6898 0368 07F10802 		add	r2, r7, #8
 6899 036c 3B6A     		ldr	r3, [r7, #32]
 6900 036e 1344     		add	r3, r3, r2
 6901 0370 E022     		movs	r2, #224
 6902 0372 1A70     		strb	r2, [r3]
1341:.\Protocolo.c **** 				buffer[i]=0xE0;
 6903              		.loc 1 1341 0 discriminator 3
 6904 0374 3B6A     		ldr	r3, [r7, #32]
 6905 0376 0133     		adds	r3, r3, #1
 6906 0378 3B62     		str	r3, [r7, #32]
 6907              	.L401:
1341:.\Protocolo.c **** 				buffer[i]=0xE0;
 6908              		.loc 1 1341 0 is_stmt 0 discriminator 1
 6909 037a 3B6A     		ldr	r3, [r7, #32]
 6910 037c 0B2B     		cmp	r3, #11
 6911 037e F3D9     		bls	.L402
1343:.\Protocolo.c **** 			}			
1344:.\Protocolo.c **** 			buffer[12]=0xFB;
 6912              		.loc 1 1344 0 is_stmt 1
 6913 0380 FB23     		movs	r3, #251
 6914 0382 3B75     		strb	r3, [r7, #20]
1345:.\Protocolo.c **** 			buffer[13]=0;
 6915              		.loc 1 1345 0
 6916 0384 0023     		movs	r3, #0
 6917 0386 7B75     		strb	r3, [r7, #21]
1346:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 6918              		.loc 1 1346 0
 6919 0388 0023     		movs	r3, #0
 6920 038a 3B62     		str	r3, [r7, #32]
 6921 038c 0EE0     		b	.L403
 6922              	.L404:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 150


1347:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 6923              		.loc 1 1347 0 discriminator 3
 6924 038e 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 6925 0390 07F10801 		add	r1, r7, #8
 6926 0394 3B6A     		ldr	r3, [r7, #32]
 6927 0396 0B44     		add	r3, r3, r1
 6928 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6929 039a 03F00F03 		and	r3, r3, #15
 6930 039e DBB2     		uxtb	r3, r3
 6931 03a0 1344     		add	r3, r3, r2
 6932 03a2 DBB2     		uxtb	r3, r3
 6933 03a4 7B75     		strb	r3, [r7, #21]
1346:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 6934              		.loc 1 1346 0 discriminator 3
 6935 03a6 3B6A     		ldr	r3, [r7, #32]
 6936 03a8 0133     		adds	r3, r3, #1
 6937 03aa 3B62     		str	r3, [r7, #32]
 6938              	.L403:
1346:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 6939              		.loc 1 1346 0 is_stmt 0 discriminator 1
 6940 03ac 3B6A     		ldr	r3, [r7, #32]
 6941 03ae 0C2B     		cmp	r3, #12
 6942 03b0 EDD9     		bls	.L404
1348:.\Protocolo.c **** 			}
1349:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 6943              		.loc 1 1349 0 is_stmt 1
 6944 03b2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6945 03b4 5B42     		negs	r3, r3
 6946 03b6 DBB2     		uxtb	r3, r3
 6947 03b8 DBB2     		uxtb	r3, r3
 6948 03ba 03F00F03 		and	r3, r3, #15
 6949 03be DBB2     		uxtb	r3, r3
 6950 03c0 63F01F03 		orn	r3, r3, #31
 6951 03c4 DBB2     		uxtb	r3, r3
 6952 03c6 DBB2     		uxtb	r3, r3
 6953 03c8 7B75     		strb	r3, [r7, #21]
1350:.\Protocolo.c **** 			buffer[14]=0xF0;
 6954              		.loc 1 1350 0
 6955 03ca F023     		movs	r3, #240
 6956 03cc BB75     		strb	r3, [r7, #22]
1351:.\Protocolo.c **** 			size=14;
 6957              		.loc 1 1351 0
 6958 03ce 0E23     		movs	r3, #14
 6959 03d0 87F82730 		strb	r3, [r7, #39]
 6960              	.L384:
1352:.\Protocolo.c **** 		}	
1353:.\Protocolo.c **** 	}	
1354:.\Protocolo.c **** 	if(digits==7){
 6961              		.loc 1 1354 0
 6962 03d4 774B     		ldr	r3, .L430+4
 6963 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6964 03d8 072B     		cmp	r3, #7
 6965 03da 40F01281 		bne	.L405
1355:.\Protocolo.c **** 		buffer[0]=0xFF;
 6966              		.loc 1 1355 0
 6967 03de FF23     		movs	r3, #255
 6968 03e0 3B72     		strb	r3, [r7, #8]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 151


1356:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 6969              		.loc 1 1356 0
 6970 03e2 97F82630 		ldrb	r3, [r7, #38]
 6971 03e6 63F01F03 		orn	r3, r3, #31
 6972 03ea DBB2     		uxtb	r3, r3
 6973 03ec 7B72     		strb	r3, [r7, #9]
1357:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 6974              		.loc 1 1357 0
 6975 03ee 7B79     		ldrb	r3, [r7, #5]
 6976 03f0 63F00F03 		orn	r3, r3, #15
 6977 03f4 DBB2     		uxtb	r3, r3
 6978 03f6 BB72     		strb	r3, [r7, #10]
1358:.\Protocolo.c **** 		buffer[3]=0xF4;
 6979              		.loc 1 1358 0
 6980 03f8 F423     		movs	r3, #244
 6981 03fa FB72     		strb	r3, [r7, #11]
1359:.\Protocolo.c **** 		buffer[4]=0xF8;	
 6982              		.loc 1 1359 0
 6983 03fc F823     		movs	r3, #248
 6984 03fe 3B73     		strb	r3, [r7, #12]
1360:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 6985              		.loc 1 1360 0
 6986 0400 0523     		movs	r3, #5
 6987 0402 3B62     		str	r3, [r7, #32]
 6988 0404 08E0     		b	.L406
 6989              	.L407:
1361:.\Protocolo.c **** 			buffer[i]=0xE0;
 6990              		.loc 1 1361 0 discriminator 3
 6991 0406 07F10802 		add	r2, r7, #8
 6992 040a 3B6A     		ldr	r3, [r7, #32]
 6993 040c 1344     		add	r3, r3, r2
 6994 040e E022     		movs	r2, #224
 6995 0410 1A70     		strb	r2, [r3]
1360:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 6996              		.loc 1 1360 0 discriminator 3
 6997 0412 3B6A     		ldr	r3, [r7, #32]
 6998 0414 0133     		adds	r3, r3, #1
 6999 0416 3B62     		str	r3, [r7, #32]
 7000              	.L406:
1360:.\Protocolo.c **** 		for(i=5;i<((5+decimalMoney)-decimal);i++){
 7001              		.loc 1 1360 0 is_stmt 0 discriminator 1
 7002 0418 674B     		ldr	r3, .L430+8
 7003 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7004 041c 5A1D     		adds	r2, r3, #5
 7005 041e 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 7006 0422 D31A     		subs	r3, r2, r3
 7007 0424 1A46     		mov	r2, r3
 7008 0426 3B6A     		ldr	r3, [r7, #32]
 7009 0428 9A42     		cmp	r2, r3
 7010 042a ECD8     		bhi	.L407
1362:.\Protocolo.c **** 		}
1363:.\Protocolo.c **** 		for(j=i;j<(i+value[0]);j++){
 7011              		.loc 1 1363 0 is_stmt 1
 7012 042c 3B6A     		ldr	r3, [r7, #32]
 7013 042e FB61     		str	r3, [r7, #28]
 7014 0430 1AE0     		b	.L408
 7015              	.L409:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 152


1364:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7016              		.loc 1 1364 0 discriminator 3
 7017 0432 3B68     		ldr	r3, [r7]
 7018 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7019 0436 1946     		mov	r1, r3
 7020 0438 3A6A     		ldr	r2, [r7, #32]
 7021 043a FB69     		ldr	r3, [r7, #28]
 7022 043c D31A     		subs	r3, r2, r3
 7023 043e 0B44     		add	r3, r3, r1
 7024 0440 3A68     		ldr	r2, [r7]
 7025 0442 1344     		add	r3, r3, r2
 7026 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7027 0446 DBB2     		uxtb	r3, r3
 7028 0448 03F00F03 		and	r3, r3, #15
 7029 044c DBB2     		uxtb	r3, r3
 7030 044e 63F01F03 		orn	r3, r3, #31
 7031 0452 DBB2     		uxtb	r3, r3
 7032 0454 D9B2     		uxtb	r1, r3
 7033 0456 07F10802 		add	r2, r7, #8
 7034 045a FB69     		ldr	r3, [r7, #28]
 7035 045c 1344     		add	r3, r3, r2
 7036 045e 0A46     		mov	r2, r1
 7037 0460 1A70     		strb	r2, [r3]
1363:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7038              		.loc 1 1363 0 discriminator 3
 7039 0462 FB69     		ldr	r3, [r7, #28]
 7040 0464 0133     		adds	r3, r3, #1
 7041 0466 FB61     		str	r3, [r7, #28]
 7042              	.L408:
1363:.\Protocolo.c **** 			buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7043              		.loc 1 1363 0 is_stmt 0 discriminator 1
 7044 0468 3B68     		ldr	r3, [r7]
 7045 046a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7046 046c 1A46     		mov	r2, r3
 7047 046e 3B6A     		ldr	r3, [r7, #32]
 7048 0470 1A44     		add	r2, r2, r3
 7049 0472 FB69     		ldr	r3, [r7, #28]
 7050 0474 9A42     		cmp	r2, r3
 7051 0476 DCD8     		bhi	.L409
1365:.\Protocolo.c **** 		}
1366:.\Protocolo.c **** 		for(i=j;i<=12;i++){
 7052              		.loc 1 1366 0 is_stmt 1
 7053 0478 FB69     		ldr	r3, [r7, #28]
 7054 047a 3B62     		str	r3, [r7, #32]
 7055 047c 08E0     		b	.L410
 7056              	.L411:
1367:.\Protocolo.c **** 			buffer[i]=0xE0;
 7057              		.loc 1 1367 0 discriminator 3
 7058 047e 07F10802 		add	r2, r7, #8
 7059 0482 3B6A     		ldr	r3, [r7, #32]
 7060 0484 1344     		add	r3, r3, r2
 7061 0486 E022     		movs	r2, #224
 7062 0488 1A70     		strb	r2, [r3]
1366:.\Protocolo.c **** 			buffer[i]=0xE0;
 7063              		.loc 1 1366 0 discriminator 3
 7064 048a 3B6A     		ldr	r3, [r7, #32]
 7065 048c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 153


 7066 048e 3B62     		str	r3, [r7, #32]
 7067              	.L410:
1366:.\Protocolo.c **** 			buffer[i]=0xE0;
 7068              		.loc 1 1366 0 is_stmt 0 discriminator 1
 7069 0490 3B6A     		ldr	r3, [r7, #32]
 7070 0492 0C2B     		cmp	r3, #12
 7071 0494 F3D9     		bls	.L411
1368:.\Protocolo.c **** 		}
1369:.\Protocolo.c **** 		buffer[13]=0xFB;
 7072              		.loc 1 1369 0 is_stmt 1
 7073 0496 FB23     		movs	r3, #251
 7074 0498 7B75     		strb	r3, [r7, #21]
1370:.\Protocolo.c **** 		buffer[14]=0;
 7075              		.loc 1 1370 0
 7076 049a 0023     		movs	r3, #0
 7077 049c BB75     		strb	r3, [r7, #22]
1371:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 7078              		.loc 1 1371 0
 7079 049e 0023     		movs	r3, #0
 7080 04a0 3B62     		str	r3, [r7, #32]
 7081 04a2 0EE0     		b	.L412
 7082              	.L413:
1372:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 7083              		.loc 1 1372 0 discriminator 3
 7084 04a4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7085 04a6 07F10801 		add	r1, r7, #8
 7086 04aa 3B6A     		ldr	r3, [r7, #32]
 7087 04ac 0B44     		add	r3, r3, r1
 7088 04ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7089 04b0 03F00F03 		and	r3, r3, #15
 7090 04b4 DBB2     		uxtb	r3, r3
 7091 04b6 1344     		add	r3, r3, r2
 7092 04b8 DBB2     		uxtb	r3, r3
 7093 04ba BB75     		strb	r3, [r7, #22]
1371:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 7094              		.loc 1 1371 0 discriminator 3
 7095 04bc 3B6A     		ldr	r3, [r7, #32]
 7096 04be 0133     		adds	r3, r3, #1
 7097 04c0 3B62     		str	r3, [r7, #32]
 7098              	.L412:
1371:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 7099              		.loc 1 1371 0 is_stmt 0 discriminator 1
 7100 04c2 3B6A     		ldr	r3, [r7, #32]
 7101 04c4 0D2B     		cmp	r3, #13
 7102 04c6 EDD9     		bls	.L413
1373:.\Protocolo.c **** 		}
1374:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 7103              		.loc 1 1374 0 is_stmt 1
 7104 04c8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7105 04ca 5B42     		negs	r3, r3
 7106 04cc DBB2     		uxtb	r3, r3
 7107 04ce DBB2     		uxtb	r3, r3
 7108 04d0 03F00F03 		and	r3, r3, #15
 7109 04d4 DBB2     		uxtb	r3, r3
 7110 04d6 63F01F03 		orn	r3, r3, #31
 7111 04da DBB2     		uxtb	r3, r3
 7112 04dc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 154


 7113 04de BB75     		strb	r3, [r7, #22]
1375:.\Protocolo.c **** 		buffer[15]=0xF0;
 7114              		.loc 1 1375 0
 7115 04e0 F023     		movs	r3, #240
 7116 04e2 FB75     		strb	r3, [r7, #23]
1376:.\Protocolo.c **** 		size=15;
 7117              		.loc 1 1376 0
 7118 04e4 0F23     		movs	r3, #15
 7119 04e6 87F82730 		strb	r3, [r7, #39]
1377:.\Protocolo.c **** 		if(preset==1){
 7120              		.loc 1 1377 0
 7121 04ea 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7122 04ec 012B     		cmp	r3, #1
 7123 04ee 40F08880 		bne	.L405
1378:.\Protocolo.c **** 			buffer[4]=0xF6;
 7124              		.loc 1 1378 0
 7125 04f2 F623     		movs	r3, #246
 7126 04f4 3B73     		strb	r3, [r7, #12]
1379:.\Protocolo.c **** 			buffer[5]=(0xE0|(grade-1));
 7127              		.loc 1 1379 0
 7128 04f6 BB79     		ldrb	r3, [r7, #6]
 7129 04f8 013B     		subs	r3, r3, #1
 7130 04fa DBB2     		uxtb	r3, r3
 7131 04fc DBB2     		uxtb	r3, r3
 7132 04fe 63F01F03 		orn	r3, r3, #31
 7133 0502 DBB2     		uxtb	r3, r3
 7134 0504 DBB2     		uxtb	r3, r3
 7135 0506 7B73     		strb	r3, [r7, #13]
1380:.\Protocolo.c **** 			buffer[6]=0xF8;
 7136              		.loc 1 1380 0
 7137 0508 F823     		movs	r3, #248
 7138 050a BB73     		strb	r3, [r7, #14]
1381:.\Protocolo.c **** 			for(i=7;i<((7+decimalVolume)-decimal);i++){
 7139              		.loc 1 1381 0
 7140 050c 0723     		movs	r3, #7
 7141 050e 3B62     		str	r3, [r7, #32]
 7142 0510 08E0     		b	.L414
 7143              	.L415:
1382:.\Protocolo.c **** 				buffer[i]=0xE0;
 7144              		.loc 1 1382 0 discriminator 3
 7145 0512 07F10802 		add	r2, r7, #8
 7146 0516 3B6A     		ldr	r3, [r7, #32]
 7147 0518 1344     		add	r3, r3, r2
 7148 051a E022     		movs	r2, #224
 7149 051c 1A70     		strb	r2, [r3]
1381:.\Protocolo.c **** 			for(i=7;i<((7+decimalVolume)-decimal);i++){
 7150              		.loc 1 1381 0 discriminator 3
 7151 051e 3B6A     		ldr	r3, [r7, #32]
 7152 0520 0133     		adds	r3, r3, #1
 7153 0522 3B62     		str	r3, [r7, #32]
 7154              	.L414:
1381:.\Protocolo.c **** 			for(i=7;i<((7+decimalVolume)-decimal);i++){
 7155              		.loc 1 1381 0 is_stmt 0 discriminator 1
 7156 0524 224B     		ldr	r3, .L430
 7157 0526 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7158 0528 DA1D     		adds	r2, r3, #7
 7159 052a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 155


 7160 052e D31A     		subs	r3, r2, r3
 7161 0530 1A46     		mov	r2, r3
 7162 0532 3B6A     		ldr	r3, [r7, #32]
 7163 0534 9A42     		cmp	r2, r3
 7164 0536 ECD8     		bhi	.L415
1383:.\Protocolo.c **** 			}
1384:.\Protocolo.c **** 			for(j=i;j<(i+value[0]);j++){
 7165              		.loc 1 1384 0 is_stmt 1
 7166 0538 3B6A     		ldr	r3, [r7, #32]
 7167 053a FB61     		str	r3, [r7, #28]
 7168 053c 1AE0     		b	.L416
 7169              	.L417:
1385:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7170              		.loc 1 1385 0 discriminator 3
 7171 053e 3B68     		ldr	r3, [r7]
 7172 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7173 0542 1946     		mov	r1, r3
 7174 0544 3A6A     		ldr	r2, [r7, #32]
 7175 0546 FB69     		ldr	r3, [r7, #28]
 7176 0548 D31A     		subs	r3, r2, r3
 7177 054a 0B44     		add	r3, r3, r1
 7178 054c 3A68     		ldr	r2, [r7]
 7179 054e 1344     		add	r3, r3, r2
 7180 0550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7181 0552 DBB2     		uxtb	r3, r3
 7182 0554 03F00F03 		and	r3, r3, #15
 7183 0558 DBB2     		uxtb	r3, r3
 7184 055a 63F01F03 		orn	r3, r3, #31
 7185 055e DBB2     		uxtb	r3, r3
 7186 0560 D9B2     		uxtb	r1, r3
 7187 0562 07F10802 		add	r2, r7, #8
 7188 0566 FB69     		ldr	r3, [r7, #28]
 7189 0568 1344     		add	r3, r3, r2
 7190 056a 0A46     		mov	r2, r1
 7191 056c 1A70     		strb	r2, [r3]
1384:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7192              		.loc 1 1384 0 discriminator 3
 7193 056e FB69     		ldr	r3, [r7, #28]
 7194 0570 0133     		adds	r3, r3, #1
 7195 0572 FB61     		str	r3, [r7, #28]
 7196              	.L416:
1384:.\Protocolo.c **** 				buffer[j]=(0xE0|(value[value[0]-(j-i)]&0x0F));	
 7197              		.loc 1 1384 0 is_stmt 0 discriminator 1
 7198 0574 3B68     		ldr	r3, [r7]
 7199 0576 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7200 0578 1A46     		mov	r2, r3
 7201 057a 3B6A     		ldr	r3, [r7, #32]
 7202 057c 1A44     		add	r2, r2, r3
 7203 057e FB69     		ldr	r3, [r7, #28]
 7204 0580 9A42     		cmp	r2, r3
 7205 0582 DCD8     		bhi	.L417
1386:.\Protocolo.c **** 			}
1387:.\Protocolo.c **** 			for(i=j;i<=14;i++){
 7206              		.loc 1 1387 0 is_stmt 1
 7207 0584 FB69     		ldr	r3, [r7, #28]
 7208 0586 3B62     		str	r3, [r7, #32]
 7209 0588 08E0     		b	.L418
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 156


 7210              	.L419:
1388:.\Protocolo.c **** 				buffer[i]=0xE0;
 7211              		.loc 1 1388 0 discriminator 3
 7212 058a 07F10802 		add	r2, r7, #8
 7213 058e 3B6A     		ldr	r3, [r7, #32]
 7214 0590 1344     		add	r3, r3, r2
 7215 0592 E022     		movs	r2, #224
 7216 0594 1A70     		strb	r2, [r3]
1387:.\Protocolo.c **** 				buffer[i]=0xE0;
 7217              		.loc 1 1387 0 discriminator 3
 7218 0596 3B6A     		ldr	r3, [r7, #32]
 7219 0598 0133     		adds	r3, r3, #1
 7220 059a 3B62     		str	r3, [r7, #32]
 7221              	.L418:
1387:.\Protocolo.c **** 				buffer[i]=0xE0;
 7222              		.loc 1 1387 0 is_stmt 0 discriminator 1
 7223 059c 3B6A     		ldr	r3, [r7, #32]
 7224 059e 0E2B     		cmp	r3, #14
 7225 05a0 F3D9     		bls	.L419
1389:.\Protocolo.c **** 			}			
1390:.\Protocolo.c **** 			buffer[15]=0xFB;
 7226              		.loc 1 1390 0 is_stmt 1
 7227 05a2 FB23     		movs	r3, #251
 7228 05a4 FB75     		strb	r3, [r7, #23]
1391:.\Protocolo.c **** 			buffer[16]=0;
 7229              		.loc 1 1391 0
 7230 05a6 0023     		movs	r3, #0
 7231 05a8 3B76     		strb	r3, [r7, #24]
1392:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 7232              		.loc 1 1392 0
 7233 05aa 0023     		movs	r3, #0
 7234 05ac 3B62     		str	r3, [r7, #32]
 7235 05ae 14E0     		b	.L420
 7236              	.L431:
 7237              		.align	2
 7238              	.L430:
 7239 05b0 00000000 		.word	decimalVolume
 7240 05b4 00000000 		.word	digits
 7241 05b8 00000000 		.word	decimalMoney
 7242              	.L421:
1393:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 7243              		.loc 1 1393 0 discriminator 3
 7244 05bc 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 7245 05be 07F10801 		add	r1, r7, #8
 7246 05c2 3B6A     		ldr	r3, [r7, #32]
 7247 05c4 0B44     		add	r3, r3, r1
 7248 05c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7249 05c8 03F00F03 		and	r3, r3, #15
 7250 05cc DBB2     		uxtb	r3, r3
 7251 05ce 1344     		add	r3, r3, r2
 7252 05d0 DBB2     		uxtb	r3, r3
 7253 05d2 3B76     		strb	r3, [r7, #24]
1392:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 7254              		.loc 1 1392 0 discriminator 3
 7255 05d4 3B6A     		ldr	r3, [r7, #32]
 7256 05d6 0133     		adds	r3, r3, #1
 7257 05d8 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 157


 7258              	.L420:
1392:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 7259              		.loc 1 1392 0 is_stmt 0 discriminator 1
 7260 05da 3B6A     		ldr	r3, [r7, #32]
 7261 05dc 0F2B     		cmp	r3, #15
 7262 05de EDD9     		bls	.L421
1394:.\Protocolo.c **** 			}
1395:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 7263              		.loc 1 1395 0 is_stmt 1
 7264 05e0 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 7265 05e2 5B42     		negs	r3, r3
 7266 05e4 DBB2     		uxtb	r3, r3
 7267 05e6 DBB2     		uxtb	r3, r3
 7268 05e8 03F00F03 		and	r3, r3, #15
 7269 05ec DBB2     		uxtb	r3, r3
 7270 05ee 63F01F03 		orn	r3, r3, #31
 7271 05f2 DBB2     		uxtb	r3, r3
 7272 05f4 DBB2     		uxtb	r3, r3
 7273 05f6 3B76     		strb	r3, [r7, #24]
1396:.\Protocolo.c **** 			buffer[17]=0xF0;
 7274              		.loc 1 1396 0
 7275 05f8 F023     		movs	r3, #240
 7276 05fa 7B76     		strb	r3, [r7, #25]
1397:.\Protocolo.c **** 			size=17;
 7277              		.loc 1 1397 0
 7278 05fc 1123     		movs	r3, #17
 7279 05fe 87F82730 		strb	r3, [r7, #39]
 7280              	.L405:
1398:.\Protocolo.c **** 		}		
1399:.\Protocolo.c **** 	}	
1400:.\Protocolo.c **** 	Pump_AL_PutChar(0x20|dir);	
 7281              		.loc 1 1400 0
 7282 0602 FB79     		ldrb	r3, [r7, #7]
 7283 0604 43F02003 		orr	r3, r3, #32
 7284 0608 DBB2     		uxtb	r3, r3
 7285 060a 1846     		mov	r0, r3
 7286 060c FFF7FEFF 		bl	Pump_AL_PutChar
1401:.\Protocolo.c ****     CyDelay(50);
 7287              		.loc 1 1401 0
 7288 0610 3220     		movs	r0, #50
 7289 0612 FFF7FEFF 		bl	CyDelay
1402:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()>=1){
 7290              		.loc 1 1402 0
 7291 0616 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 7292 061a 0346     		mov	r3, r0
 7293 061c 002B     		cmp	r3, #0
 7294 061e 2ED0     		beq	.L422
1403:.\Protocolo.c **** 		if(Pump_AL_ReadRxData()==(0xD0|dir)){
 7295              		.loc 1 1403 0
 7296 0620 FFF7FEFF 		bl	Pump_AL_ReadRxData
 7297 0624 0346     		mov	r3, r0
 7298 0626 1A46     		mov	r2, r3
 7299 0628 FB79     		ldrb	r3, [r7, #7]
 7300 062a 63F02F03 		orn	r3, r3, #47
 7301 062e DBB2     		uxtb	r3, r3
 7302 0630 9A42     		cmp	r2, r3
 7303 0632 22D1     		bne	.L423
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 158


1404:.\Protocolo.c ****             Pump_AL_ClearRxBuffer();
 7304              		.loc 1 1404 0
 7305 0634 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1405:.\Protocolo.c ****             for(i=0;i<=size;i++){
 7306              		.loc 1 1405 0
 7307 0638 0023     		movs	r3, #0
 7308 063a 3B62     		str	r3, [r7, #32]
 7309 063c 0AE0     		b	.L424
 7310              	.L425:
1406:.\Protocolo.c ****                	Pump_AL_PutChar(buffer[i]);
 7311              		.loc 1 1406 0 discriminator 3
 7312 063e 07F10802 		add	r2, r7, #8
 7313 0642 3B6A     		ldr	r3, [r7, #32]
 7314 0644 1344     		add	r3, r3, r2
 7315 0646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7316 0648 1846     		mov	r0, r3
 7317 064a FFF7FEFF 		bl	Pump_AL_PutChar
1405:.\Protocolo.c ****             for(i=0;i<=size;i++){
 7318              		.loc 1 1405 0 discriminator 3
 7319 064e 3B6A     		ldr	r3, [r7, #32]
 7320 0650 0133     		adds	r3, r3, #1
 7321 0652 3B62     		str	r3, [r7, #32]
 7322              	.L424:
1405:.\Protocolo.c ****             for(i=0;i<=size;i++){
 7323              		.loc 1 1405 0 is_stmt 0 discriminator 1
 7324 0654 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 7325 0658 3B6A     		ldr	r3, [r7, #32]
 7326 065a 9A42     		cmp	r2, r3
 7327 065c EFD2     		bcs	.L425
1407:.\Protocolo.c ****             }
1408:.\Protocolo.c **** 			CyDelay(50);
 7328              		.loc 1 1408 0 is_stmt 1
 7329 065e 3220     		movs	r0, #50
 7330 0660 FFF7FEFF 		bl	CyDelay
1409:.\Protocolo.c **** 			if(get_state(dir)==0){
 7331              		.loc 1 1409 0
 7332 0664 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7333 0666 1846     		mov	r0, r3
 7334 0668 FFF7FEFF 		bl	get_state
 7335 066c 0346     		mov	r3, r0
 7336 066e 002B     		cmp	r3, #0
 7337 0670 01D1     		bne	.L426
1410:.\Protocolo.c **** 				return 0;
 7338              		.loc 1 1410 0
 7339 0672 0023     		movs	r3, #0
 7340 0674 04E0     		b	.L427
 7341              	.L426:
1411:.\Protocolo.c **** 			}
1412:.\Protocolo.c **** 			else{
1413:.\Protocolo.c **** 				return 1;
 7342              		.loc 1 1413 0
 7343 0676 0123     		movs	r3, #1
 7344 0678 02E0     		b	.L427
 7345              	.L423:
1414:.\Protocolo.c **** 			}
1415:.\Protocolo.c **** 		}
1416:.\Protocolo.c **** 		else{
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 159


1417:.\Protocolo.c **** 			return 0;
 7346              		.loc 1 1417 0
 7347 067a 0023     		movs	r3, #0
 7348 067c 00E0     		b	.L427
 7349              	.L422:
1418:.\Protocolo.c **** 		}
1419:.\Protocolo.c **** 	}
1420:.\Protocolo.c **** 	else{
1421:.\Protocolo.c **** 		return 0;	
 7350              		.loc 1 1421 0
 7351 067e 0023     		movs	r3, #0
 7352              	.L427:
1422:.\Protocolo.c **** 	}
1423:.\Protocolo.c **** }
 7353              		.loc 1 1423 0 discriminator 1
 7354 0680 1846     		mov	r0, r3
 7355 0682 2837     		adds	r7, r7, #40
 7356              		.cfi_def_cfa_offset 8
 7357 0684 BD46     		mov	sp, r7
 7358              		.cfi_def_cfa_register 13
 7359              		@ sp needed
 7360 0686 80BD     		pop	{r7, pc}
 7361              		.cfi_endproc
 7362              	.LFE64:
 7363              		.size	program, .-program
 7364              		.section	.text.price_change,"ax",%progbits
 7365              		.align	2
 7366              		.global	price_change
 7367              		.thumb
 7368              		.thumb_func
 7369              		.type	price_change, %function
 7370              	price_change:
 7371              	.LFB65:
1424:.\Protocolo.c **** 
1425:.\Protocolo.c **** /*
1426:.\Protocolo.c **** ***************************************************************************************************
1427:.\Protocolo.c **** *                                         uint8 price_change(uint8 dir)
1428:.\Protocolo.c **** *
1429:.\Protocolo.c **** * Description : 
1430:.\Protocolo.c **** *               
1431:.\Protocolo.c **** *
1432:.\Protocolo.c **** * Argument(s) : none
1433:.\Protocolo.c **** *
1434:.\Protocolo.c **** * Return(s)   : none
1435:.\Protocolo.c **** *
1436:.\Protocolo.c **** * Caller(s)   : 
1437:.\Protocolo.c **** *
1438:.\Protocolo.c **** * Note(s)     : none.
1439:.\Protocolo.c **** ***************************************************************************************************
1440:.\Protocolo.c **** */
1441:.\Protocolo.c **** uint8 price_change(uint8 dir){
 7372              		.loc 1 1441 0
 7373              		.cfi_startproc
 7374              		@ args = 0, pretend = 0, frame = 40
 7375              		@ frame_needed = 1, uses_anonymous_args = 0
 7376 0000 80B5     		push	{r7, lr}
 7377              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 160


 7378              		.cfi_offset 7, -8
 7379              		.cfi_offset 14, -4
 7380 0002 8AB0     		sub	sp, sp, #40
 7381              		.cfi_def_cfa_offset 48
 7382 0004 00AF     		add	r7, sp, #0
 7383              		.cfi_def_cfa_register 7
 7384 0006 0346     		mov	r3, r0
 7385 0008 FB71     		strb	r3, [r7, #7]
1442:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size;
 7386              		.loc 1 1442 0
 7387 000a 0023     		movs	r3, #0
 7388 000c 3B73     		strb	r3, [r7, #12]
 7389 000e 0023     		movs	r3, #0
 7390 0010 7B73     		strb	r3, [r7, #13]
 7391 0012 0023     		movs	r3, #0
 7392 0014 BB73     		strb	r3, [r7, #14]
 7393 0016 0023     		movs	r3, #0
 7394 0018 FB73     		strb	r3, [r7, #15]
 7395 001a 0023     		movs	r3, #0
 7396 001c 3B74     		strb	r3, [r7, #16]
 7397 001e 0023     		movs	r3, #0
 7398 0020 7B74     		strb	r3, [r7, #17]
 7399 0022 0023     		movs	r3, #0
 7400 0024 BB74     		strb	r3, [r7, #18]
 7401 0026 0023     		movs	r3, #0
 7402 0028 FB74     		strb	r3, [r7, #19]
 7403 002a 0023     		movs	r3, #0
 7404 002c 3B75     		strb	r3, [r7, #20]
 7405 002e 0023     		movs	r3, #0
 7406 0030 7B75     		strb	r3, [r7, #21]
 7407 0032 0023     		movs	r3, #0
 7408 0034 BB75     		strb	r3, [r7, #22]
 7409 0036 0023     		movs	r3, #0
 7410 0038 FB75     		strb	r3, [r7, #23]
 7411 003a 0023     		movs	r3, #0
 7412 003c 3B76     		strb	r3, [r7, #24]
 7413 003e 0023     		movs	r3, #0
 7414 0040 7B76     		strb	r3, [r7, #25]
 7415 0042 0023     		movs	r3, #0
 7416 0044 BB76     		strb	r3, [r7, #26]
1443:.\Protocolo.c ****     uint32 x,y;
1444:.\Protocolo.c **** 	if(digits!=7){
 7417              		.loc 1 1444 0
 7418 0046 AE4B     		ldr	r3, .L458
 7419 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7420 004a 072B     		cmp	r3, #7
 7421 004c 00F09F80 		beq	.L433
1445:.\Protocolo.c **** 		buffer[0]=0xFF;
 7422              		.loc 1 1445 0
 7423 0050 FF23     		movs	r3, #255
 7424 0052 3B73     		strb	r3, [r7, #12]
1446:.\Protocolo.c **** 		buffer[1]=0xE5;
 7425              		.loc 1 1446 0
 7426 0054 E523     		movs	r3, #229
 7427 0056 7B73     		strb	r3, [r7, #13]
1447:.\Protocolo.c **** 		buffer[2]=0xF4;
 7428              		.loc 1 1447 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 161


 7429 0058 F423     		movs	r3, #244
 7430 005a BB73     		strb	r3, [r7, #14]
1448:.\Protocolo.c **** 		buffer[3]=0xF6;
 7431              		.loc 1 1448 0
 7432 005c F623     		movs	r3, #246
 7433 005e FB73     		strb	r3, [r7, #15]
1449:.\Protocolo.c **** 		buffer[4]=(0xE0|((bSale.product&0x0f)-1));
 7434              		.loc 1 1449 0
 7435 0060 A84B     		ldr	r3, .L458+4
 7436 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7437 0064 03F00F03 		and	r3, r3, #15
 7438 0068 DBB2     		uxtb	r3, r3
 7439 006a 013B     		subs	r3, r3, #1
 7440 006c DBB2     		uxtb	r3, r3
 7441 006e DBB2     		uxtb	r3, r3
 7442 0070 63F01F03 		orn	r3, r3, #31
 7443 0074 DBB2     		uxtb	r3, r3
 7444 0076 DBB2     		uxtb	r3, r3
 7445 0078 3B74     		strb	r3, [r7, #16]
1450:.\Protocolo.c **** 		buffer[5]=0xF7;	
 7446              		.loc 1 1450 0
 7447 007a F723     		movs	r3, #247
 7448 007c 7B74     		strb	r3, [r7, #17]
1451:.\Protocolo.c **** 		if(ppux10==0){
 7449              		.loc 1 1451 0
 7450 007e A24B     		ldr	r3, .L458+8
 7451 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7452 0082 002B     		cmp	r3, #0
 7453 0084 23D1     		bne	.L434
1452:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
 7454              		.loc 1 1452 0
 7455 0086 0623     		movs	r3, #6
 7456 0088 3B62     		str	r3, [r7, #32]
 7457 008a 18E0     		b	.L435
 7458              	.L436:
1453:.\Protocolo.c **** 				buffer[x]=(0xE0|(valuePPU[valuePPU[0]-(x-6)]&0x0F));
 7459              		.loc 1 1453 0 discriminator 3
 7460 008c 9F4B     		ldr	r3, .L458+12
 7461 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7462 0090 1A46     		mov	r2, r3
 7463 0092 3B6A     		ldr	r3, [r7, #32]
 7464 0094 D31A     		subs	r3, r2, r3
 7465 0096 0633     		adds	r3, r3, #6
 7466 0098 9C4A     		ldr	r2, .L458+12
 7467 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7468 009c DBB2     		uxtb	r3, r3
 7469 009e 03F00F03 		and	r3, r3, #15
 7470 00a2 DBB2     		uxtb	r3, r3
 7471 00a4 63F01F03 		orn	r3, r3, #31
 7472 00a8 DBB2     		uxtb	r3, r3
 7473 00aa D9B2     		uxtb	r1, r3
 7474 00ac 07F10C02 		add	r2, r7, #12
 7475 00b0 3B6A     		ldr	r3, [r7, #32]
 7476 00b2 1344     		add	r3, r3, r2
 7477 00b4 0A46     		mov	r2, r1
 7478 00b6 1A70     		strb	r2, [r3]
1452:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 162


 7479              		.loc 1 1452 0 discriminator 3
 7480 00b8 3B6A     		ldr	r3, [r7, #32]
 7481 00ba 0133     		adds	r3, r3, #1
 7482 00bc 3B62     		str	r3, [r7, #32]
 7483              	.L435:
1452:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
 7484              		.loc 1 1452 0 is_stmt 0 discriminator 1
 7485 00be 934B     		ldr	r3, .L458+12
 7486 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7487 00c2 0633     		adds	r3, r3, #6
 7488 00c4 1A46     		mov	r2, r3
 7489 00c6 3B6A     		ldr	r3, [r7, #32]
 7490 00c8 9A42     		cmp	r2, r3
 7491 00ca DFD8     		bhi	.L436
 7492 00cc 28E0     		b	.L437
 7493              	.L434:
1454:.\Protocolo.c **** 			}
1455:.\Protocolo.c **** 		}
1456:.\Protocolo.c **** 		else{
1457:.\Protocolo.c **** 			valuePPU[0]=valuePPU[0]-1;
 7494              		.loc 1 1457 0 is_stmt 1
 7495 00ce 8F4B     		ldr	r3, .L458+12
 7496 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7497 00d2 013B     		subs	r3, r3, #1
 7498 00d4 DAB2     		uxtb	r2, r3
 7499 00d6 8D4B     		ldr	r3, .L458+12
 7500 00d8 1A70     		strb	r2, [r3]
1458:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
 7501              		.loc 1 1458 0
 7502 00da 0623     		movs	r3, #6
 7503 00dc 3B62     		str	r3, [r7, #32]
 7504 00de 18E0     		b	.L438
 7505              	.L439:
1459:.\Protocolo.c **** 				buffer[x]=(0xE0|(valuePPU[valuePPU[0]-(x-6)]&0x0F));
 7506              		.loc 1 1459 0 discriminator 3
 7507 00e0 8A4B     		ldr	r3, .L458+12
 7508 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7509 00e4 1A46     		mov	r2, r3
 7510 00e6 3B6A     		ldr	r3, [r7, #32]
 7511 00e8 D31A     		subs	r3, r2, r3
 7512 00ea 0633     		adds	r3, r3, #6
 7513 00ec 874A     		ldr	r2, .L458+12
 7514 00ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7515 00f0 DBB2     		uxtb	r3, r3
 7516 00f2 03F00F03 		and	r3, r3, #15
 7517 00f6 DBB2     		uxtb	r3, r3
 7518 00f8 63F01F03 		orn	r3, r3, #31
 7519 00fc DBB2     		uxtb	r3, r3
 7520 00fe D9B2     		uxtb	r1, r3
 7521 0100 07F10C02 		add	r2, r7, #12
 7522 0104 3B6A     		ldr	r3, [r7, #32]
 7523 0106 1344     		add	r3, r3, r2
 7524 0108 0A46     		mov	r2, r1
 7525 010a 1A70     		strb	r2, [r3]
1458:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
 7526              		.loc 1 1458 0 discriminator 3
 7527 010c 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 163


 7528 010e 0133     		adds	r3, r3, #1
 7529 0110 3B62     		str	r3, [r7, #32]
 7530              	.L438:
1458:.\Protocolo.c **** 			for(x=6;x<(6+valuePPU[0]);x++){
 7531              		.loc 1 1458 0 is_stmt 0 discriminator 1
 7532 0112 7E4B     		ldr	r3, .L458+12
 7533 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7534 0116 0633     		adds	r3, r3, #6
 7535 0118 1A46     		mov	r2, r3
 7536 011a 3B6A     		ldr	r3, [r7, #32]
 7537 011c 9A42     		cmp	r2, r3
 7538 011e DFD8     		bhi	.L439
 7539              	.L437:
1460:.\Protocolo.c **** 			}	
1461:.\Protocolo.c **** 		}
1462:.\Protocolo.c **** 		for(y=x;y<=9;y++){
 7540              		.loc 1 1462 0 is_stmt 1
 7541 0120 3B6A     		ldr	r3, [r7, #32]
 7542 0122 FB61     		str	r3, [r7, #28]
 7543 0124 08E0     		b	.L440
 7544              	.L441:
1463:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7545              		.loc 1 1463 0 discriminator 3
 7546 0126 07F10C02 		add	r2, r7, #12
 7547 012a FB69     		ldr	r3, [r7, #28]
 7548 012c 1344     		add	r3, r3, r2
 7549 012e E022     		movs	r2, #224
 7550 0130 1A70     		strb	r2, [r3]
1462:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7551              		.loc 1 1462 0 discriminator 3
 7552 0132 FB69     		ldr	r3, [r7, #28]
 7553 0134 0133     		adds	r3, r3, #1
 7554 0136 FB61     		str	r3, [r7, #28]
 7555              	.L440:
1462:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7556              		.loc 1 1462 0 is_stmt 0 discriminator 1
 7557 0138 FB69     		ldr	r3, [r7, #28]
 7558 013a 092B     		cmp	r3, #9
 7559 013c F3D9     		bls	.L441
1464:.\Protocolo.c **** 		}
1465:.\Protocolo.c **** 		buffer[10]=0xFB;
 7560              		.loc 1 1465 0 is_stmt 1
 7561 013e FB23     		movs	r3, #251
 7562 0140 BB75     		strb	r3, [r7, #22]
1466:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 7563              		.loc 1 1466 0
 7564 0142 0023     		movs	r3, #0
 7565 0144 3B62     		str	r3, [r7, #32]
 7566 0146 0EE0     		b	.L442
 7567              	.L443:
1467:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 7568              		.loc 1 1467 0 discriminator 3
 7569 0148 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7570 014a 07F10C01 		add	r1, r7, #12
 7571 014e 3B6A     		ldr	r3, [r7, #32]
 7572 0150 0B44     		add	r3, r3, r1
 7573 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 164


 7574 0154 03F00F03 		and	r3, r3, #15
 7575 0158 DBB2     		uxtb	r3, r3
 7576 015a 1344     		add	r3, r3, r2
 7577 015c DBB2     		uxtb	r3, r3
 7578 015e FB75     		strb	r3, [r7, #23]
1466:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 7579              		.loc 1 1466 0 discriminator 3
 7580 0160 3B6A     		ldr	r3, [r7, #32]
 7581 0162 0133     		adds	r3, r3, #1
 7582 0164 3B62     		str	r3, [r7, #32]
 7583              	.L442:
1466:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 7584              		.loc 1 1466 0 is_stmt 0 discriminator 1
 7585 0166 3B6A     		ldr	r3, [r7, #32]
 7586 0168 0A2B     		cmp	r3, #10
 7587 016a EDD9     		bls	.L443
1468:.\Protocolo.c **** 		}
1469:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 7588              		.loc 1 1469 0 is_stmt 1
 7589 016c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7590 016e 5B42     		negs	r3, r3
 7591 0170 DBB2     		uxtb	r3, r3
 7592 0172 DBB2     		uxtb	r3, r3
 7593 0174 03F00F03 		and	r3, r3, #15
 7594 0178 DBB2     		uxtb	r3, r3
 7595 017a 63F01F03 		orn	r3, r3, #31
 7596 017e DBB2     		uxtb	r3, r3
 7597 0180 DBB2     		uxtb	r3, r3
 7598 0182 FB75     		strb	r3, [r7, #23]
1470:.\Protocolo.c **** 		buffer[12]=0xF0;
 7599              		.loc 1 1470 0
 7600 0184 F023     		movs	r3, #240
 7601 0186 3B76     		strb	r3, [r7, #24]
1471:.\Protocolo.c **** 		size=12;
 7602              		.loc 1 1471 0
 7603 0188 0C23     		movs	r3, #12
 7604 018a 87F82730 		strb	r3, [r7, #39]
 7605              	.L433:
1472:.\Protocolo.c **** 	}
1473:.\Protocolo.c **** 	if(digits==7){
 7606              		.loc 1 1473 0
 7607 018e 5C4B     		ldr	r3, .L458
 7608 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7609 0192 072B     		cmp	r3, #7
 7610 0194 70D1     		bne	.L444
1474:.\Protocolo.c **** 		buffer[0]=0xFF;
 7611              		.loc 1 1474 0
 7612 0196 FF23     		movs	r3, #255
 7613 0198 3B73     		strb	r3, [r7, #12]
1475:.\Protocolo.c **** 		buffer[1]=0xE3;
 7614              		.loc 1 1475 0
 7615 019a E323     		movs	r3, #227
 7616 019c 7B73     		strb	r3, [r7, #13]
1476:.\Protocolo.c **** 		buffer[2]=0xF4;
 7617              		.loc 1 1476 0
 7618 019e F423     		movs	r3, #244
 7619 01a0 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 165


1477:.\Protocolo.c **** 		buffer[3]=0xF6;
 7620              		.loc 1 1477 0
 7621 01a2 F623     		movs	r3, #246
 7622 01a4 FB73     		strb	r3, [r7, #15]
1478:.\Protocolo.c **** 		buffer[4]=(0xE0|((bSale.product&0x0f)-1));
 7623              		.loc 1 1478 0
 7624 01a6 574B     		ldr	r3, .L458+4
 7625 01a8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7626 01aa 03F00F03 		and	r3, r3, #15
 7627 01ae DBB2     		uxtb	r3, r3
 7628 01b0 013B     		subs	r3, r3, #1
 7629 01b2 DBB2     		uxtb	r3, r3
 7630 01b4 DBB2     		uxtb	r3, r3
 7631 01b6 63F01F03 		orn	r3, r3, #31
 7632 01ba DBB2     		uxtb	r3, r3
 7633 01bc DBB2     		uxtb	r3, r3
 7634 01be 3B74     		strb	r3, [r7, #16]
1479:.\Protocolo.c **** 		buffer[5]=0xF7;		
 7635              		.loc 1 1479 0
 7636 01c0 F723     		movs	r3, #247
 7637 01c2 7B74     		strb	r3, [r7, #17]
1480:.\Protocolo.c **** 		for(x=6;x<(6+valuePPU[0]);x++){
 7638              		.loc 1 1480 0
 7639 01c4 0623     		movs	r3, #6
 7640 01c6 3B62     		str	r3, [r7, #32]
 7641 01c8 18E0     		b	.L445
 7642              	.L446:
1481:.\Protocolo.c **** 			buffer[x]=(0xE0|(valuePPU[valuePPU[0]-(x-6)]&0x0F));
 7643              		.loc 1 1481 0 discriminator 3
 7644 01ca 504B     		ldr	r3, .L458+12
 7645 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7646 01ce 1A46     		mov	r2, r3
 7647 01d0 3B6A     		ldr	r3, [r7, #32]
 7648 01d2 D31A     		subs	r3, r2, r3
 7649 01d4 0633     		adds	r3, r3, #6
 7650 01d6 4D4A     		ldr	r2, .L458+12
 7651 01d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7652 01da DBB2     		uxtb	r3, r3
 7653 01dc 03F00F03 		and	r3, r3, #15
 7654 01e0 DBB2     		uxtb	r3, r3
 7655 01e2 63F01F03 		orn	r3, r3, #31
 7656 01e6 DBB2     		uxtb	r3, r3
 7657 01e8 D9B2     		uxtb	r1, r3
 7658 01ea 07F10C02 		add	r2, r7, #12
 7659 01ee 3B6A     		ldr	r3, [r7, #32]
 7660 01f0 1344     		add	r3, r3, r2
 7661 01f2 0A46     		mov	r2, r1
 7662 01f4 1A70     		strb	r2, [r3]
1480:.\Protocolo.c **** 		for(x=6;x<(6+valuePPU[0]);x++){
 7663              		.loc 1 1480 0 discriminator 3
 7664 01f6 3B6A     		ldr	r3, [r7, #32]
 7665 01f8 0133     		adds	r3, r3, #1
 7666 01fa 3B62     		str	r3, [r7, #32]
 7667              	.L445:
1480:.\Protocolo.c **** 		for(x=6;x<(6+valuePPU[0]);x++){
 7668              		.loc 1 1480 0 is_stmt 0 discriminator 1
 7669 01fc 434B     		ldr	r3, .L458+12
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 166


 7670 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7671 0200 0633     		adds	r3, r3, #6
 7672 0202 1A46     		mov	r2, r3
 7673 0204 3B6A     		ldr	r3, [r7, #32]
 7674 0206 9A42     		cmp	r2, r3
 7675 0208 DFD8     		bhi	.L446
1482:.\Protocolo.c **** 		}	
1483:.\Protocolo.c **** 		for(y=x;y<=11;y++){
 7676              		.loc 1 1483 0 is_stmt 1
 7677 020a 3B6A     		ldr	r3, [r7, #32]
 7678 020c FB61     		str	r3, [r7, #28]
 7679 020e 08E0     		b	.L447
 7680              	.L448:
1484:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7681              		.loc 1 1484 0 discriminator 3
 7682 0210 07F10C02 		add	r2, r7, #12
 7683 0214 FB69     		ldr	r3, [r7, #28]
 7684 0216 1344     		add	r3, r3, r2
 7685 0218 E022     		movs	r2, #224
 7686 021a 1A70     		strb	r2, [r3]
1483:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7687              		.loc 1 1483 0 discriminator 3
 7688 021c FB69     		ldr	r3, [r7, #28]
 7689 021e 0133     		adds	r3, r3, #1
 7690 0220 FB61     		str	r3, [r7, #28]
 7691              	.L447:
1483:.\Protocolo.c **** 			buffer[y]=0xE0;	
 7692              		.loc 1 1483 0 is_stmt 0 discriminator 1
 7693 0222 FB69     		ldr	r3, [r7, #28]
 7694 0224 0B2B     		cmp	r3, #11
 7695 0226 F3D9     		bls	.L448
1485:.\Protocolo.c **** 		}		
1486:.\Protocolo.c **** 		buffer[12]=0xFB;
 7696              		.loc 1 1486 0 is_stmt 1
 7697 0228 FB23     		movs	r3, #251
 7698 022a 3B76     		strb	r3, [r7, #24]
1487:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 7699              		.loc 1 1487 0
 7700 022c 0023     		movs	r3, #0
 7701 022e 3B62     		str	r3, [r7, #32]
 7702 0230 0EE0     		b	.L449
 7703              	.L450:
1488:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 7704              		.loc 1 1488 0 discriminator 3
 7705 0232 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 7706 0234 07F10C01 		add	r1, r7, #12
 7707 0238 3B6A     		ldr	r3, [r7, #32]
 7708 023a 0B44     		add	r3, r3, r1
 7709 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7710 023e 03F00F03 		and	r3, r3, #15
 7711 0242 DBB2     		uxtb	r3, r3
 7712 0244 1344     		add	r3, r3, r2
 7713 0246 DBB2     		uxtb	r3, r3
 7714 0248 7B76     		strb	r3, [r7, #25]
1487:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 7715              		.loc 1 1487 0 discriminator 3
 7716 024a 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 167


 7717 024c 0133     		adds	r3, r3, #1
 7718 024e 3B62     		str	r3, [r7, #32]
 7719              	.L449:
1487:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 7720              		.loc 1 1487 0 is_stmt 0 discriminator 1
 7721 0250 3B6A     		ldr	r3, [r7, #32]
 7722 0252 0C2B     		cmp	r3, #12
 7723 0254 EDD9     		bls	.L450
1489:.\Protocolo.c **** 		}
1490:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 7724              		.loc 1 1490 0 is_stmt 1
 7725 0256 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 7726 0258 5B42     		negs	r3, r3
 7727 025a DBB2     		uxtb	r3, r3
 7728 025c DBB2     		uxtb	r3, r3
 7729 025e 03F00F03 		and	r3, r3, #15
 7730 0262 DBB2     		uxtb	r3, r3
 7731 0264 63F01F03 		orn	r3, r3, #31
 7732 0268 DBB2     		uxtb	r3, r3
 7733 026a DBB2     		uxtb	r3, r3
 7734 026c 7B76     		strb	r3, [r7, #25]
1491:.\Protocolo.c **** 		buffer[14]=0xF0;
 7735              		.loc 1 1491 0
 7736 026e F023     		movs	r3, #240
 7737 0270 BB76     		strb	r3, [r7, #26]
1492:.\Protocolo.c **** 		size=14;
 7738              		.loc 1 1492 0
 7739 0272 0E23     		movs	r3, #14
 7740 0274 87F82730 		strb	r3, [r7, #39]
 7741              	.L444:
1493:.\Protocolo.c **** 	}	
1494:.\Protocolo.c **** 	Pump_AL_PutChar(0x20|dir);	
 7742              		.loc 1 1494 0
 7743 0278 FB79     		ldrb	r3, [r7, #7]
 7744 027a 43F02003 		orr	r3, r3, #32
 7745 027e DBB2     		uxtb	r3, r3
 7746 0280 1846     		mov	r0, r3
 7747 0282 FFF7FEFF 		bl	Pump_AL_PutChar
1495:.\Protocolo.c ****     CyDelay(100);
 7748              		.loc 1 1495 0
 7749 0286 6420     		movs	r0, #100
 7750 0288 FFF7FEFF 		bl	CyDelay
1496:.\Protocolo.c ****     if(Pump_AL_GetRxBufferSize()>=1){
 7751              		.loc 1 1496 0
 7752 028c FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 7753 0290 0346     		mov	r3, r0
 7754 0292 002B     		cmp	r3, #0
 7755 0294 2ED0     		beq	.L451
1497:.\Protocolo.c **** 		if(Pump_AL_ReadRxData()==(0xD0|dir)){
 7756              		.loc 1 1497 0
 7757 0296 FFF7FEFF 		bl	Pump_AL_ReadRxData
 7758 029a 0346     		mov	r3, r0
 7759 029c 1A46     		mov	r2, r3
 7760 029e FB79     		ldrb	r3, [r7, #7]
 7761 02a0 63F02F03 		orn	r3, r3, #47
 7762 02a4 DBB2     		uxtb	r3, r3
 7763 02a6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 168


 7764 02a8 22D1     		bne	.L452
1498:.\Protocolo.c ****             Pump_AL_ClearRxBuffer();
 7765              		.loc 1 1498 0
 7766 02aa FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
1499:.\Protocolo.c ****             for(x=0;x<=size;x++){
 7767              		.loc 1 1499 0
 7768 02ae 0023     		movs	r3, #0
 7769 02b0 3B62     		str	r3, [r7, #32]
 7770 02b2 0AE0     		b	.L453
 7771              	.L454:
1500:.\Protocolo.c ****                	Pump_AL_PutChar(buffer[x]); 	
 7772              		.loc 1 1500 0 discriminator 3
 7773 02b4 07F10C02 		add	r2, r7, #12
 7774 02b8 3B6A     		ldr	r3, [r7, #32]
 7775 02ba 1344     		add	r3, r3, r2
 7776 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7777 02be 1846     		mov	r0, r3
 7778 02c0 FFF7FEFF 		bl	Pump_AL_PutChar
1499:.\Protocolo.c ****             for(x=0;x<=size;x++){
 7779              		.loc 1 1499 0 discriminator 3
 7780 02c4 3B6A     		ldr	r3, [r7, #32]
 7781 02c6 0133     		adds	r3, r3, #1
 7782 02c8 3B62     		str	r3, [r7, #32]
 7783              	.L453:
1499:.\Protocolo.c ****             for(x=0;x<=size;x++){
 7784              		.loc 1 1499 0 is_stmt 0 discriminator 1
 7785 02ca 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 7786 02ce 3B6A     		ldr	r3, [r7, #32]
 7787 02d0 9A42     		cmp	r2, r3
 7788 02d2 EFD2     		bcs	.L454
1501:.\Protocolo.c ****             }
1502:.\Protocolo.c **** 			CyDelay(50);
 7789              		.loc 1 1502 0 is_stmt 1
 7790 02d4 3220     		movs	r0, #50
 7791 02d6 FFF7FEFF 		bl	CyDelay
1503:.\Protocolo.c **** 			if(get_state(dir)==0){
 7792              		.loc 1 1503 0
 7793 02da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7794 02dc 1846     		mov	r0, r3
 7795 02de FFF7FEFF 		bl	get_state
 7796 02e2 0346     		mov	r3, r0
 7797 02e4 002B     		cmp	r3, #0
 7798 02e6 01D1     		bne	.L455
1504:.\Protocolo.c **** 				return 0;
 7799              		.loc 1 1504 0
 7800 02e8 0023     		movs	r3, #0
 7801 02ea 04E0     		b	.L457
 7802              	.L455:
1505:.\Protocolo.c **** 			}
1506:.\Protocolo.c **** 			else{
1507:.\Protocolo.c **** 				return 1;
 7803              		.loc 1 1507 0
 7804 02ec 0123     		movs	r3, #1
 7805 02ee 02E0     		b	.L457
 7806              	.L452:
1508:.\Protocolo.c **** 			}
1509:.\Protocolo.c **** 		}
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 169


1510:.\Protocolo.c **** 		else{
1511:.\Protocolo.c **** 			return 0;
 7807              		.loc 1 1511 0
 7808 02f0 0023     		movs	r3, #0
 7809 02f2 00E0     		b	.L457
 7810              	.L451:
1512:.\Protocolo.c **** 		}
1513:.\Protocolo.c **** 	}
1514:.\Protocolo.c **** 	else{
1515:.\Protocolo.c **** 		return 0;	
 7811              		.loc 1 1515 0
 7812 02f4 0023     		movs	r3, #0
 7813              	.L457:
1516:.\Protocolo.c **** 	}
1517:.\Protocolo.c **** }
 7814              		.loc 1 1517 0 discriminator 1
 7815 02f6 1846     		mov	r0, r3
 7816 02f8 2837     		adds	r7, r7, #40
 7817              		.cfi_def_cfa_offset 8
 7818 02fa BD46     		mov	sp, r7
 7819              		.cfi_def_cfa_register 13
 7820              		@ sp needed
 7821 02fc 80BD     		pop	{r7, pc}
 7822              	.L459:
 7823 02fe 00BF     		.align	2
 7824              	.L458:
 7825 0300 00000000 		.word	digits
 7826 0304 00000000 		.word	bSale
 7827 0308 00000000 		.word	ppux10
 7828 030c 00000000 		.word	valuePPU
 7829              		.cfi_endproc
 7830              	.LFE65:
 7831              		.size	price_change, .-price_change
 7832              		.text
 7833              	.Letext0:
 7834              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7835              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7836              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 7837              		.file 5 "./variables.h"
 7838              		.file 6 "Generated_Source\\PSoC5/Pump_AL.h"
 7839              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 7840              		.section	.debug_info,"",%progbits
 7841              	.Ldebug_info0:
 7842 0000 1C0A0000 		.4byte	0xa1c
 7843 0004 0400     		.2byte	0x4
 7844 0006 00000000 		.4byte	.Ldebug_abbrev0
 7845 000a 04       		.byte	0x4
 7846 000b 01       		.uleb128 0x1
 7847 000c 7D020000 		.4byte	.LASF113
 7848 0010 01       		.byte	0x1
 7849 0011 FF000000 		.4byte	.LASF114
 7850 0015 10030000 		.4byte	.LASF115
 7851 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7852 001d 00000000 		.4byte	0
 7853 0021 00000000 		.4byte	.Ldebug_line0
 7854 0025 02       		.uleb128 0x2
 7855 0026 01       		.byte	0x1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 170


 7856 0027 06       		.byte	0x6
 7857 0028 86040000 		.4byte	.LASF0
 7858 002c 02       		.uleb128 0x2
 7859 002d 01       		.byte	0x1
 7860 002e 08       		.byte	0x8
 7861 002f 3D040000 		.4byte	.LASF1
 7862 0033 02       		.uleb128 0x2
 7863 0034 02       		.byte	0x2
 7864 0035 05       		.byte	0x5
 7865 0036 C8030000 		.4byte	.LASF2
 7866 003a 02       		.uleb128 0x2
 7867 003b 02       		.byte	0x2
 7868 003c 07       		.byte	0x7
 7869 003d 92040000 		.4byte	.LASF3
 7870 0041 03       		.uleb128 0x3
 7871 0042 55000000 		.4byte	.LASF9
 7872 0046 02       		.byte	0x2
 7873 0047 3F       		.byte	0x3f
 7874 0048 4C000000 		.4byte	0x4c
 7875 004c 02       		.uleb128 0x2
 7876 004d 04       		.byte	0x4
 7877 004e 05       		.byte	0x5
 7878 004f D2030000 		.4byte	.LASF4
 7879 0053 02       		.uleb128 0x2
 7880 0054 04       		.byte	0x4
 7881 0055 07       		.byte	0x7
 7882 0056 16040000 		.4byte	.LASF5
 7883 005a 02       		.uleb128 0x2
 7884 005b 08       		.byte	0x8
 7885 005c 05       		.byte	0x5
 7886 005d 40020000 		.4byte	.LASF6
 7887 0061 02       		.uleb128 0x2
 7888 0062 08       		.byte	0x8
 7889 0063 07       		.byte	0x7
 7890 0064 E2000000 		.4byte	.LASF7
 7891 0068 04       		.uleb128 0x4
 7892 0069 04       		.byte	0x4
 7893 006a 05       		.byte	0x5
 7894 006b 696E7400 		.ascii	"int\000"
 7895 006f 02       		.uleb128 0x2
 7896 0070 04       		.byte	0x4
 7897 0071 07       		.byte	0x7
 7898 0072 41000000 		.4byte	.LASF8
 7899 0076 03       		.uleb128 0x3
 7900 0077 30040000 		.4byte	.LASF10
 7901 007b 03       		.byte	0x3
 7902 007c 2C       		.byte	0x2c
 7903 007d 41000000 		.4byte	0x41
 7904 0081 03       		.uleb128 0x3
 7905 0082 CB040000 		.4byte	.LASF11
 7906 0086 04       		.byte	0x4
 7907 0087 A1       		.byte	0xa1
 7908 0088 2C000000 		.4byte	0x2c
 7909 008c 03       		.uleb128 0x3
 7910 008d 7A030000 		.4byte	.LASF12
 7911 0091 04       		.byte	0x4
 7912 0092 A3       		.byte	0xa3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 171


 7913 0093 53000000 		.4byte	0x53
 7914 0097 02       		.uleb128 0x2
 7915 0098 04       		.byte	0x4
 7916 0099 04       		.byte	0x4
 7917 009a C3000000 		.4byte	.LASF13
 7918 009e 02       		.uleb128 0x2
 7919 009f 08       		.byte	0x8
 7920 00a0 04       		.byte	0x4
 7921 00a1 D1040000 		.4byte	.LASF14
 7922 00a5 03       		.uleb128 0x3
 7923 00a6 ED030000 		.4byte	.LASF15
 7924 00aa 04       		.byte	0x4
 7925 00ab AD       		.byte	0xad
 7926 00ac 61000000 		.4byte	0x61
 7927 00b0 02       		.uleb128 0x2
 7928 00b1 01       		.byte	0x1
 7929 00b2 08       		.byte	0x8
 7930 00b3 DD010000 		.4byte	.LASF16
 7931 00b7 02       		.uleb128 0x2
 7932 00b8 04       		.byte	0x4
 7933 00b9 07       		.byte	0x7
 7934 00ba 0D040000 		.4byte	.LASF17
 7935 00be 05       		.uleb128 0x5
 7936 00bf 1F000000 		.4byte	.LASF31
 7937 00c3 B7       		.byte	0xb7
 7938 00c4 05       		.byte	0x5
 7939 00c5 5B       		.byte	0x5b
 7940 00c6 67010000 		.4byte	0x167
 7941 00ca 06       		.uleb128 0x6
 7942 00cb D3010000 		.4byte	.LASF18
 7943 00cf 05       		.byte	0x5
 7944 00d0 5C       		.byte	0x5c
 7945 00d1 67010000 		.4byte	0x167
 7946 00d5 00       		.byte	0
 7947 00d6 06       		.uleb128 0x6
 7948 00d7 7B040000 		.4byte	.LASF19
 7949 00db 05       		.byte	0x5
 7950 00dc 5D       		.byte	0x5d
 7951 00dd 81000000 		.4byte	0x81
 7952 00e1 15       		.byte	0x15
 7953 00e2 06       		.uleb128 0x6
 7954 00e3 BE010000 		.4byte	.LASF20
 7955 00e7 05       		.byte	0x5
 7956 00e8 5E       		.byte	0x5e
 7957 00e9 77010000 		.4byte	0x177
 7958 00ed 16       		.byte	0x16
 7959 00ee 06       		.uleb128 0x6
 7960 00ef 31010000 		.4byte	.LASF21
 7961 00f3 05       		.byte	0x5
 7962 00f4 5F       		.byte	0x5f
 7963 00f5 81000000 		.4byte	0x81
 7964 00f9 20       		.byte	0x20
 7965 00fa 06       		.uleb128 0x6
 7966 00fb B7000000 		.4byte	.LASF22
 7967 00ff 05       		.byte	0x5
 7968 0100 64       		.byte	0x64
 7969 0101 87010000 		.4byte	0x187
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 172


 7970 0105 21       		.byte	0x21
 7971 0106 06       		.uleb128 0x6
 7972 0107 F4030000 		.4byte	.LASF23
 7973 010b 05       		.byte	0x5
 7974 010c 65       		.byte	0x65
 7975 010d 87010000 		.4byte	0x187
 7976 0111 35       		.byte	0x35
 7977 0112 06       		.uleb128 0x6
 7978 0113 C9000000 		.4byte	.LASF24
 7979 0117 05       		.byte	0x5
 7980 0118 66       		.byte	0x66
 7981 0119 87010000 		.4byte	0x187
 7982 011d 49       		.byte	0x49
 7983 011e 06       		.uleb128 0x6
 7984 011f 6C000000 		.4byte	.LASF25
 7985 0123 05       		.byte	0x5
 7986 0124 67       		.byte	0x67
 7987 0125 87010000 		.4byte	0x187
 7988 0129 5D       		.byte	0x5d
 7989 012a 06       		.uleb128 0x6
 7990 012b 79000000 		.4byte	.LASF26
 7991 012f 05       		.byte	0x5
 7992 0130 68       		.byte	0x68
 7993 0131 87010000 		.4byte	0x187
 7994 0135 71       		.byte	0x71
 7995 0136 06       		.uleb128 0x6
 7996 0137 86000000 		.4byte	.LASF27
 7997 013b 05       		.byte	0x5
 7998 013c 69       		.byte	0x69
 7999 013d 87010000 		.4byte	0x187
 8000 0141 85       		.byte	0x85
 8001 0142 06       		.uleb128 0x6
 8002 0143 75010000 		.4byte	.LASF28
 8003 0147 05       		.byte	0x5
 8004 0148 6A       		.byte	0x6a
 8005 0149 77010000 		.4byte	0x177
 8006 014d 99       		.byte	0x99
 8007 014e 06       		.uleb128 0x6
 8008 014f 7A010000 		.4byte	.LASF29
 8009 0153 05       		.byte	0x5
 8010 0154 6B       		.byte	0x6b
 8011 0155 77010000 		.4byte	0x177
 8012 0159 A3       		.byte	0xa3
 8013 015a 06       		.uleb128 0x6
 8014 015b 7F010000 		.4byte	.LASF30
 8015 015f 05       		.byte	0x5
 8016 0160 6C       		.byte	0x6c
 8017 0161 77010000 		.4byte	0x177
 8018 0165 AD       		.byte	0xad
 8019 0166 00       		.byte	0
 8020 0167 07       		.uleb128 0x7
 8021 0168 81000000 		.4byte	0x81
 8022 016c 77010000 		.4byte	0x177
 8023 0170 08       		.uleb128 0x8
 8024 0171 B7000000 		.4byte	0xb7
 8025 0175 14       		.byte	0x14
 8026 0176 00       		.byte	0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 173


 8027 0177 07       		.uleb128 0x7
 8028 0178 81000000 		.4byte	0x81
 8029 017c 87010000 		.4byte	0x187
 8030 0180 08       		.uleb128 0x8
 8031 0181 B7000000 		.4byte	0xb7
 8032 0185 09       		.byte	0x9
 8033 0186 00       		.byte	0
 8034 0187 07       		.uleb128 0x7
 8035 0188 81000000 		.4byte	0x81
 8036 018c 97010000 		.4byte	0x197
 8037 0190 08       		.uleb128 0x8
 8038 0191 B7000000 		.4byte	0xb7
 8039 0195 13       		.byte	0x13
 8040 0196 00       		.byte	0
 8041 0197 05       		.uleb128 0x5
 8042 0198 0C020000 		.4byte	.LASF32
 8043 019c A2       		.byte	0xa2
 8044 019d 05       		.byte	0x5
 8045 019e 79       		.byte	0x79
 8046 019f F8010000 		.4byte	0x1f8
 8047 01a3 06       		.uleb128 0x6
 8048 01a4 17000000 		.4byte	.LASF33
 8049 01a8 05       		.byte	0x5
 8050 01a9 7E       		.byte	0x7e
 8051 01aa F8010000 		.4byte	0x1f8
 8052 01ae 00       		.byte	0
 8053 01af 09       		.uleb128 0x9
 8054 01b0 6E697400 		.ascii	"nit\000"
 8055 01b4 05       		.byte	0x5
 8056 01b5 7F       		.byte	0x7f
 8057 01b6 08020000 		.4byte	0x208
 8058 01ba 1F       		.byte	0x1f
 8059 01bb 06       		.uleb128 0x6
 8060 01bc F9000000 		.4byte	.LASF34
 8061 01c0 05       		.byte	0x5
 8062 01c1 80       		.byte	0x80
 8063 01c2 08020000 		.4byte	0x208
 8064 01c6 2A       		.byte	0x2a
 8065 01c7 06       		.uleb128 0x6
 8066 01c8 28040000 		.4byte	.LASF35
 8067 01cc 05       		.byte	0x5
 8068 01cd 81       		.byte	0x81
 8069 01ce F8010000 		.4byte	0x1f8
 8070 01d2 35       		.byte	0x35
 8071 01d3 06       		.uleb128 0x6
 8072 01d4 26000000 		.4byte	.LASF36
 8073 01d8 05       		.byte	0x5
 8074 01d9 82       		.byte	0x82
 8075 01da 18020000 		.4byte	0x218
 8076 01de 54       		.byte	0x54
 8077 01df 06       		.uleb128 0x6
 8078 01e0 99010000 		.4byte	.LASF37
 8079 01e4 05       		.byte	0x5
 8080 01e5 83       		.byte	0x83
 8081 01e6 F8010000 		.4byte	0x1f8
 8082 01ea 64       		.byte	0x64
 8083 01eb 06       		.uleb128 0x6
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 174


 8084 01ec A2010000 		.4byte	.LASF38
 8085 01f0 05       		.byte	0x5
 8086 01f1 84       		.byte	0x84
 8087 01f2 F8010000 		.4byte	0x1f8
 8088 01f6 83       		.byte	0x83
 8089 01f7 00       		.byte	0
 8090 01f8 07       		.uleb128 0x7
 8091 01f9 81000000 		.4byte	0x81
 8092 01fd 08020000 		.4byte	0x208
 8093 0201 08       		.uleb128 0x8
 8094 0202 B7000000 		.4byte	0xb7
 8095 0206 1E       		.byte	0x1e
 8096 0207 00       		.byte	0
 8097 0208 07       		.uleb128 0x7
 8098 0209 81000000 		.4byte	0x81
 8099 020d 18020000 		.4byte	0x218
 8100 0211 08       		.uleb128 0x8
 8101 0212 B7000000 		.4byte	0xb7
 8102 0216 0A       		.byte	0xa
 8103 0217 00       		.byte	0
 8104 0218 07       		.uleb128 0x7
 8105 0219 81000000 		.4byte	0x81
 8106 021d 28020000 		.4byte	0x228
 8107 0221 08       		.uleb128 0x8
 8108 0222 B7000000 		.4byte	0xb7
 8109 0226 0F       		.byte	0xf
 8110 0227 00       		.byte	0
 8111 0228 0A       		.uleb128 0xa
 8112 0229 12050000 		.4byte	.LASF39
 8113 022d 6901     		.2byte	0x169
 8114 022f 05       		.byte	0x5
 8115 0230 90       		.byte	0x90
 8116 0231 D5020000 		.4byte	0x2d5
 8117 0235 09       		.uleb128 0x9
 8118 0236 64697200 		.ascii	"dir\000"
 8119 023a 05       		.byte	0x5
 8120 023b 91       		.byte	0x91
 8121 023c 81000000 		.4byte	0x81
 8122 0240 00       		.byte	0
 8123 0241 06       		.uleb128 0x6
 8124 0242 FA010000 		.4byte	.LASF40
 8125 0246 05       		.byte	0x5
 8126 0247 96       		.byte	0x96
 8127 0248 18020000 		.4byte	0x218
 8128 024c 01       		.byte	0x1
 8129 024d 06       		.uleb128 0x6
 8130 024e 03020000 		.4byte	.LASF41
 8131 0252 05       		.byte	0x5
 8132 0253 97       		.byte	0x97
 8133 0254 18020000 		.4byte	0x218
 8134 0258 11       		.byte	0x11
 8135 0259 06       		.uleb128 0x6
 8136 025a 00000000 		.4byte	.LASF42
 8137 025e 05       		.byte	0x5
 8138 025f 98       		.byte	0x98
 8139 0260 18020000 		.4byte	0x218
 8140 0264 21       		.byte	0x21
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 175


 8141 0265 06       		.uleb128 0x6
 8142 0266 11020000 		.4byte	.LASF43
 8143 026a 05       		.byte	0x5
 8144 026b 99       		.byte	0x99
 8145 026c 18020000 		.4byte	0x218
 8146 0270 31       		.byte	0x31
 8147 0271 06       		.uleb128 0x6
 8148 0272 D8040000 		.4byte	.LASF44
 8149 0276 05       		.byte	0x5
 8150 0277 9A       		.byte	0x9a
 8151 0278 81000000 		.4byte	0x81
 8152 027c 41       		.byte	0x41
 8153 027d 09       		.uleb128 0x9
 8154 027e 70707500 		.ascii	"ppu\000"
 8155 0282 05       		.byte	0x5
 8156 0283 9B       		.byte	0x9b
 8157 0284 77010000 		.4byte	0x177
 8158 0288 42       		.byte	0x42
 8159 0289 06       		.uleb128 0x6
 8160 028a B8010000 		.4byte	.LASF45
 8161 028e 05       		.byte	0x5
 8162 028f 9C       		.byte	0x9c
 8163 0290 D5020000 		.4byte	0x2d5
 8164 0294 4C       		.byte	0x4c
 8165 0295 06       		.uleb128 0x6
 8166 0296 B0000000 		.4byte	.LASF46
 8167 029a 05       		.byte	0x5
 8168 029b 9D       		.byte	0x9d
 8169 029c D5020000 		.4byte	0x2d5
 8170 02a0 58       		.byte	0x58
 8171 02a1 06       		.uleb128 0x6
 8172 02a2 C5040000 		.4byte	.LASF47
 8173 02a6 05       		.byte	0x5
 8174 02a7 9E       		.byte	0x9e
 8175 02a8 E5020000 		.4byte	0x2e5
 8176 02ac 64       		.byte	0x64
 8177 02ad 0B       		.uleb128 0xb
 8178 02ae 1F020000 		.4byte	.LASF48
 8179 02b2 05       		.byte	0x5
 8180 02b3 9F       		.byte	0x9f
 8181 02b4 F5020000 		.4byte	0x2f5
 8182 02b8 2C01     		.2byte	0x12c
 8183 02ba 0B       		.uleb128 0xb
 8184 02bb 75040000 		.4byte	.LASF49
 8185 02bf 05       		.byte	0x5
 8186 02c0 A0       		.byte	0xa0
 8187 02c1 81000000 		.4byte	0x81
 8188 02c5 5401     		.2byte	0x154
 8189 02c7 0B       		.uleb128 0xb
 8190 02c8 4E000000 		.4byte	.LASF50
 8191 02cc 05       		.byte	0x5
 8192 02cd A1       		.byte	0xa1
 8193 02ce 87010000 		.4byte	0x187
 8194 02d2 5501     		.2byte	0x155
 8195 02d4 00       		.byte	0
 8196 02d5 07       		.uleb128 0x7
 8197 02d6 81000000 		.4byte	0x81
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 176


 8198 02da E5020000 		.4byte	0x2e5
 8199 02de 08       		.uleb128 0x8
 8200 02df B7000000 		.4byte	0xb7
 8201 02e3 0B       		.byte	0xb
 8202 02e4 00       		.byte	0
 8203 02e5 07       		.uleb128 0x7
 8204 02e6 81000000 		.4byte	0x81
 8205 02ea F5020000 		.4byte	0x2f5
 8206 02ee 08       		.uleb128 0x8
 8207 02ef B7000000 		.4byte	0xb7
 8208 02f3 C7       		.byte	0xc7
 8209 02f4 00       		.byte	0
 8210 02f5 07       		.uleb128 0x7
 8211 02f6 81000000 		.4byte	0x81
 8212 02fa 05030000 		.4byte	0x305
 8213 02fe 08       		.uleb128 0x8
 8214 02ff B7000000 		.4byte	0xb7
 8215 0303 27       		.byte	0x27
 8216 0304 00       		.byte	0
 8217 0305 0A       		.uleb128 0xa
 8218 0306 67040000 		.4byte	.LASF51
 8219 030a D202     		.2byte	0x2d2
 8220 030c 05       		.byte	0x5
 8221 030d A4       		.byte	0xa4
 8222 030e 28030000 		.4byte	0x328
 8223 0312 09       		.uleb128 0x9
 8224 0313 6100     		.ascii	"a\000"
 8225 0315 05       		.byte	0x5
 8226 0316 A5       		.byte	0xa5
 8227 0317 28020000 		.4byte	0x228
 8228 031b 00       		.byte	0
 8229 031c 0C       		.uleb128 0xc
 8230 031d 6200     		.ascii	"b\000"
 8231 031f 05       		.byte	0x5
 8232 0320 A6       		.byte	0xa6
 8233 0321 28020000 		.4byte	0x228
 8234 0325 6901     		.2byte	0x169
 8235 0327 00       		.byte	0
 8236 0328 05       		.uleb128 0x5
 8237 0329 EA040000 		.4byte	.LASF52
 8238 032d 24       		.byte	0x24
 8239 032e 05       		.byte	0x5
 8240 032f B1       		.byte	0xb1
 8241 0330 71030000 		.4byte	0x371
 8242 0334 06       		.uleb128 0x6
 8243 0335 12050000 		.4byte	.LASF39
 8244 0339 05       		.byte	0x5
 8245 033a B6       		.byte	0xb6
 8246 033b 81000000 		.4byte	0x81
 8247 033f 00       		.byte	0
 8248 0340 06       		.uleb128 0x6
 8249 0341 D8040000 		.4byte	.LASF44
 8250 0345 05       		.byte	0x5
 8251 0346 B7       		.byte	0xb7
 8252 0347 81000000 		.4byte	0x81
 8253 034b 01       		.byte	0x1
 8254 034c 09       		.uleb128 0x9
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 177


 8255 034d 70707500 		.ascii	"ppu\000"
 8256 0351 05       		.byte	0x5
 8257 0352 B8       		.byte	0xb8
 8258 0353 77010000 		.4byte	0x177
 8259 0357 02       		.byte	0x2
 8260 0358 06       		.uleb128 0x6
 8261 0359 B8010000 		.4byte	.LASF45
 8262 035d 05       		.byte	0x5
 8263 035e B9       		.byte	0xb9
 8264 035f D5020000 		.4byte	0x2d5
 8265 0363 0C       		.byte	0xc
 8266 0364 06       		.uleb128 0x6
 8267 0365 B0000000 		.4byte	.LASF46
 8268 0369 05       		.byte	0x5
 8269 036a BA       		.byte	0xba
 8270 036b D5020000 		.4byte	0x2d5
 8271 036f 18       		.byte	0x18
 8272 0370 00       		.byte	0
 8273 0371 0D       		.uleb128 0xd
 8274 0372 6C040000 		.4byte	.LASF55
 8275 0376 01       		.byte	0x1
 8276 0377 38       		.byte	0x38
 8277 0378 81000000 		.4byte	0x81
 8278 037c 00000000 		.4byte	.LFB56
 8279 0380 84010000 		.4byte	.LFE56-.LFB56
 8280 0384 01       		.uleb128 0x1
 8281 0385 9C       		.byte	0x9c
 8282 0386 C1030000 		.4byte	0x3c1
 8283 038a 0E       		.uleb128 0xe
 8284 038b 76616C00 		.ascii	"val\000"
 8285 038f 01       		.byte	0x1
 8286 0390 38       		.byte	0x38
 8287 0391 81000000 		.4byte	0x81
 8288 0395 02       		.uleb128 0x2
 8289 0396 91       		.byte	0x91
 8290 0397 4F       		.sleb128 -49
 8291 0398 0F       		.uleb128 0xf
 8292 0399 E0040000 		.4byte	.LASF53
 8293 039d 01       		.byte	0x1
 8294 039e 39       		.byte	0x39
 8295 039f C1030000 		.4byte	0x3c1
 8296 03a3 02       		.uleb128 0x2
 8297 03a4 91       		.byte	0x91
 8298 03a5 5C       		.sleb128 -36
 8299 03a6 10       		.uleb128 0x10
 8300 03a7 7800     		.ascii	"x\000"
 8301 03a9 01       		.byte	0x1
 8302 03aa 39       		.byte	0x39
 8303 03ab 81000000 		.4byte	0x81
 8304 03af 02       		.uleb128 0x2
 8305 03b0 91       		.byte	0x91
 8306 03b1 6F       		.sleb128 -17
 8307 03b2 0F       		.uleb128 0xf
 8308 03b3 AB010000 		.4byte	.LASF54
 8309 03b7 01       		.byte	0x1
 8310 03b8 39       		.byte	0x39
 8311 03b9 D1030000 		.4byte	0x3d1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 178


 8312 03bd 02       		.uleb128 0x2
 8313 03be 91       		.byte	0x91
 8314 03bf 50       		.sleb128 -48
 8315 03c0 00       		.byte	0
 8316 03c1 07       		.uleb128 0x7
 8317 03c2 81000000 		.4byte	0x81
 8318 03c6 D1030000 		.4byte	0x3d1
 8319 03ca 08       		.uleb128 0x8
 8320 03cb B7000000 		.4byte	0xb7
 8321 03cf 12       		.byte	0x12
 8322 03d0 00       		.byte	0
 8323 03d1 07       		.uleb128 0x7
 8324 03d2 81000000 		.4byte	0x81
 8325 03d6 E1030000 		.4byte	0x3e1
 8326 03da 08       		.uleb128 0x8
 8327 03db B7000000 		.4byte	0xb7
 8328 03df 08       		.byte	0x8
 8329 03e0 00       		.byte	0
 8330 03e1 0D       		.uleb128 0xd
 8331 03e2 5F000000 		.4byte	.LASF56
 8332 03e6 01       		.byte	0x1
 8333 03e7 80       		.byte	0x80
 8334 03e8 81000000 		.4byte	0x81
 8335 03ec 00000000 		.4byte	.LFB57
 8336 03f0 C0000000 		.4byte	.LFE57-.LFB57
 8337 03f4 01       		.uleb128 0x1
 8338 03f5 9C       		.byte	0x9c
 8339 03f6 07040000 		.4byte	0x407
 8340 03fa 10       		.uleb128 0x10
 8341 03fb 7800     		.ascii	"x\000"
 8342 03fd 01       		.byte	0x1
 8343 03fe 81       		.byte	0x81
 8344 03ff 8C000000 		.4byte	0x8c
 8345 0403 02       		.uleb128 0x2
 8346 0404 91       		.byte	0x91
 8347 0405 74       		.sleb128 -12
 8348 0406 00       		.byte	0
 8349 0407 0D       		.uleb128 0xd
 8350 0408 4B040000 		.4byte	.LASF57
 8351 040c 01       		.byte	0x1
 8352 040d AF       		.byte	0xaf
 8353 040e 81000000 		.4byte	0x81
 8354 0412 00000000 		.4byte	.LFB58
 8355 0416 3E000000 		.4byte	.LFE58-.LFB58
 8356 041a 01       		.uleb128 0x1
 8357 041b 9C       		.byte	0x9c
 8358 041c 3D040000 		.4byte	0x43d
 8359 0420 0E       		.uleb128 0xe
 8360 0421 64697200 		.ascii	"dir\000"
 8361 0425 01       		.byte	0x1
 8362 0426 AF       		.byte	0xaf
 8363 0427 81000000 		.4byte	0x81
 8364 042b 02       		.uleb128 0x2
 8365 042c 91       		.byte	0x91
 8366 042d 6F       		.sleb128 -17
 8367 042e 0F       		.uleb128 0xf
 8368 042f 75040000 		.4byte	.LASF49
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 179


 8369 0433 01       		.byte	0x1
 8370 0434 B0       		.byte	0xb0
 8371 0435 81000000 		.4byte	0x81
 8372 0439 02       		.uleb128 0x2
 8373 043a 91       		.byte	0x91
 8374 043b 77       		.sleb128 -9
 8375 043c 00       		.byte	0
 8376 043d 11       		.uleb128 0x11
 8377 043e 89030000 		.4byte	.LASF58
 8378 0442 01       		.byte	0x1
 8379 0443 CD       		.byte	0xcd
 8380 0444 00000000 		.4byte	.LFB59
 8381 0448 36000000 		.4byte	.LFE59-.LFB59
 8382 044c 01       		.uleb128 0x1
 8383 044d 9C       		.byte	0x9c
 8384 044e 6F040000 		.4byte	0x46f
 8385 0452 0E       		.uleb128 0xe
 8386 0453 76616C00 		.ascii	"val\000"
 8387 0457 01       		.byte	0x1
 8388 0458 CD       		.byte	0xcd
 8389 0459 81000000 		.4byte	0x81
 8390 045d 02       		.uleb128 0x2
 8391 045e 91       		.byte	0x91
 8392 045f 6F       		.sleb128 -17
 8393 0460 0F       		.uleb128 0xf
 8394 0461 75040000 		.4byte	.LASF49
 8395 0465 01       		.byte	0x1
 8396 0466 CE       		.byte	0xce
 8397 0467 81000000 		.4byte	0x81
 8398 046b 02       		.uleb128 0x2
 8399 046c 91       		.byte	0x91
 8400 046d 77       		.sleb128 -9
 8401 046e 00       		.byte	0
 8402 046f 11       		.uleb128 0x11
 8403 0470 AB000000 		.4byte	.LASF59
 8404 0474 01       		.byte	0x1
 8405 0475 EA       		.byte	0xea
 8406 0476 00000000 		.4byte	.LFB60
 8407 047a 24000000 		.4byte	.LFE60-.LFB60
 8408 047e 01       		.uleb128 0x1
 8409 047f 9C       		.byte	0x9c
 8410 0480 93040000 		.4byte	0x493
 8411 0484 0E       		.uleb128 0xe
 8412 0485 76616C00 		.ascii	"val\000"
 8413 0489 01       		.byte	0x1
 8414 048a EA       		.byte	0xea
 8415 048b 81000000 		.4byte	0x81
 8416 048f 02       		.uleb128 0x2
 8417 0490 91       		.byte	0x91
 8418 0491 77       		.sleb128 -9
 8419 0492 00       		.byte	0
 8420 0493 12       		.uleb128 0x12
 8421 0494 81030000 		.4byte	.LASF60
 8422 0498 01       		.byte	0x1
 8423 0499 0001     		.2byte	0x100
 8424 049b 81000000 		.4byte	0x81
 8425 049f 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 180


 8426 04a3 6C040000 		.4byte	.LFE61-.LFB61
 8427 04a7 01       		.uleb128 0x1
 8428 04a8 9C       		.byte	0x9c
 8429 04a9 03050000 		.4byte	0x503
 8430 04ad 13       		.uleb128 0x13
 8431 04ae 76616C00 		.ascii	"val\000"
 8432 04b2 01       		.byte	0x1
 8433 04b3 0001     		.2byte	0x100
 8434 04b5 81000000 		.4byte	0x81
 8435 04b9 03       		.uleb128 0x3
 8436 04ba 91       		.byte	0x91
 8437 04bb BF7F     		.sleb128 -65
 8438 04bd 14       		.uleb128 0x14
 8439 04be 72030000 		.4byte	.LASF61
 8440 04c2 01       		.byte	0x1
 8441 04c3 0101     		.2byte	0x101
 8442 04c5 03050000 		.4byte	0x503
 8443 04c9 02       		.uleb128 0x2
 8444 04ca 91       		.byte	0x91
 8445 04cb 40       		.sleb128 -64
 8446 04cc 15       		.uleb128 0x15
 8447 04cd 706F7300 		.ascii	"pos\000"
 8448 04d1 01       		.byte	0x1
 8449 04d2 0101     		.2byte	0x101
 8450 04d4 81000000 		.4byte	0x81
 8451 04d8 02       		.uleb128 0x2
 8452 04d9 91       		.byte	0x91
 8453 04da 77       		.sleb128 -9
 8454 04db 15       		.uleb128 0x15
 8455 04dc 6A00     		.ascii	"j\000"
 8456 04de 01       		.byte	0x1
 8457 04df 0201     		.2byte	0x102
 8458 04e1 8C000000 		.4byte	0x8c
 8459 04e5 02       		.uleb128 0x2
 8460 04e6 91       		.byte	0x91
 8461 04e7 70       		.sleb128 -16
 8462 04e8 15       		.uleb128 0x15
 8463 04e9 7800     		.ascii	"x\000"
 8464 04eb 01       		.byte	0x1
 8465 04ec 0201     		.2byte	0x102
 8466 04ee 8C000000 		.4byte	0x8c
 8467 04f2 02       		.uleb128 0x2
 8468 04f3 91       		.byte	0x91
 8469 04f4 6C       		.sleb128 -20
 8470 04f5 15       		.uleb128 0x15
 8471 04f6 7900     		.ascii	"y\000"
 8472 04f8 01       		.byte	0x1
 8473 04f9 0201     		.2byte	0x102
 8474 04fb 8C000000 		.4byte	0x8c
 8475 04ff 02       		.uleb128 0x2
 8476 0500 91       		.byte	0x91
 8477 0501 68       		.sleb128 -24
 8478 0502 00       		.byte	0
 8479 0503 07       		.uleb128 0x7
 8480 0504 81000000 		.4byte	0x81
 8481 0508 13050000 		.4byte	0x513
 8482 050c 08       		.uleb128 0x8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 181


 8483 050d B7000000 		.4byte	0xb7
 8484 0511 26       		.byte	0x26
 8485 0512 00       		.byte	0
 8486 0513 16       		.uleb128 0x16
 8487 0514 1F020000 		.4byte	.LASF48
 8488 0518 01       		.byte	0x1
 8489 0519 8701     		.2byte	0x187
 8490 051b 00000000 		.4byte	.LFB62
 8491 051f BC030000 		.4byte	.LFE62-.LFB62
 8492 0523 01       		.uleb128 0x1
 8493 0524 9C       		.byte	0x9c
 8494 0525 6F050000 		.4byte	0x56f
 8495 0529 17       		.uleb128 0x17
 8496 052a BC040000 		.4byte	.LASF62
 8497 052e 01       		.byte	0x1
 8498 052f 8701     		.2byte	0x187
 8499 0531 81000000 		.4byte	0x81
 8500 0535 02       		.uleb128 0x2
 8501 0536 91       		.byte	0x91
 8502 0537 67       		.sleb128 -25
 8503 0538 15       		.uleb128 0x15
 8504 0539 706F7300 		.ascii	"pos\000"
 8505 053d 01       		.byte	0x1
 8506 053e 8801     		.2byte	0x188
 8507 0540 81000000 		.4byte	0x81
 8508 0544 02       		.uleb128 0x2
 8509 0545 91       		.byte	0x91
 8510 0546 77       		.sleb128 -9
 8511 0547 15       		.uleb128 0x15
 8512 0548 6A00     		.ascii	"j\000"
 8513 054a 01       		.byte	0x1
 8514 054b 8901     		.2byte	0x189
 8515 054d 8C000000 		.4byte	0x8c
 8516 0551 02       		.uleb128 0x2
 8517 0552 91       		.byte	0x91
 8518 0553 70       		.sleb128 -16
 8519 0554 15       		.uleb128 0x15
 8520 0555 7800     		.ascii	"x\000"
 8521 0557 01       		.byte	0x1
 8522 0558 8901     		.2byte	0x189
 8523 055a 8C000000 		.4byte	0x8c
 8524 055e 02       		.uleb128 0x2
 8525 055f 91       		.byte	0x91
 8526 0560 6C       		.sleb128 -20
 8527 0561 15       		.uleb128 0x15
 8528 0562 7900     		.ascii	"y\000"
 8529 0564 01       		.byte	0x1
 8530 0565 8901     		.2byte	0x189
 8531 0567 8C000000 		.4byte	0x8c
 8532 056b 02       		.uleb128 0x2
 8533 056c 91       		.byte	0x91
 8534 056d 68       		.sleb128 -24
 8535 056e 00       		.byte	0
 8536 056f 12       		.uleb128 0x12
 8537 0570 4E020000 		.4byte	.LASF63
 8538 0574 01       		.byte	0x1
 8539 0575 EF01     		.2byte	0x1ef
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 182


 8540 0577 81000000 		.4byte	0x81
 8541 057b 00000000 		.4byte	.LFB63
 8542 057f D81D0000 		.4byte	.LFE63-.LFB63
 8543 0583 01       		.uleb128 0x1
 8544 0584 9C       		.byte	0x9c
 8545 0585 B3050000 		.4byte	0x5b3
 8546 0589 13       		.uleb128 0x13
 8547 058a 64697200 		.ascii	"dir\000"
 8548 058e 01       		.byte	0x1
 8549 058f EF01     		.2byte	0x1ef
 8550 0591 81000000 		.4byte	0x81
 8551 0595 02       		.uleb128 0x2
 8552 0596 91       		.byte	0x91
 8553 0597 6F       		.sleb128 -17
 8554 0598 15       		.uleb128 0x15
 8555 0599 6A00     		.ascii	"j\000"
 8556 059b 01       		.byte	0x1
 8557 059c F001     		.2byte	0x1f0
 8558 059e 8C000000 		.4byte	0x8c
 8559 05a2 02       		.uleb128 0x2
 8560 05a3 91       		.byte	0x91
 8561 05a4 74       		.sleb128 -12
 8562 05a5 15       		.uleb128 0x15
 8563 05a6 7800     		.ascii	"x\000"
 8564 05a8 01       		.byte	0x1
 8565 05a9 F001     		.2byte	0x1f0
 8566 05ab 8C000000 		.4byte	0x8c
 8567 05af 02       		.uleb128 0x2
 8568 05b0 91       		.byte	0x91
 8569 05b1 70       		.sleb128 -16
 8570 05b2 00       		.byte	0
 8571 05b3 12       		.uleb128 0x12
 8572 05b4 91010000 		.4byte	.LASF64
 8573 05b8 01       		.byte	0x1
 8574 05b9 EC04     		.2byte	0x4ec
 8575 05bb 81000000 		.4byte	0x81
 8576 05bf 00000000 		.4byte	.LFB64
 8577 05c3 88060000 		.4byte	.LFE64-.LFB64
 8578 05c7 01       		.uleb128 0x1
 8579 05c8 9C       		.byte	0x9c
 8580 05c9 60060000 		.4byte	0x660
 8581 05cd 13       		.uleb128 0x13
 8582 05ce 64697200 		.ascii	"dir\000"
 8583 05d2 01       		.byte	0x1
 8584 05d3 EC04     		.2byte	0x4ec
 8585 05d5 81000000 		.4byte	0x81
 8586 05d9 02       		.uleb128 0x2
 8587 05da 91       		.byte	0x91
 8588 05db 57       		.sleb128 -41
 8589 05dc 17       		.uleb128 0x17
 8590 05dd F8040000 		.4byte	.LASF65
 8591 05e1 01       		.byte	0x1
 8592 05e2 EC04     		.2byte	0x4ec
 8593 05e4 81000000 		.4byte	0x81
 8594 05e8 02       		.uleb128 0x2
 8595 05e9 91       		.byte	0x91
 8596 05ea 56       		.sleb128 -42
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 183


 8597 05eb 17       		.uleb128 0x17
 8598 05ec 2B010000 		.4byte	.LASF66
 8599 05f0 01       		.byte	0x1
 8600 05f1 EC04     		.2byte	0x4ec
 8601 05f3 60060000 		.4byte	0x660
 8602 05f7 02       		.uleb128 0x2
 8603 05f8 91       		.byte	0x91
 8604 05f9 50       		.sleb128 -48
 8605 05fa 17       		.uleb128 0x17
 8606 05fb A4000000 		.4byte	.LASF67
 8607 05ff 01       		.byte	0x1
 8608 0600 EC04     		.2byte	0x4ec
 8609 0602 81000000 		.4byte	0x81
 8610 0606 02       		.uleb128 0x2
 8611 0607 91       		.byte	0x91
 8612 0608 55       		.sleb128 -43
 8613 0609 14       		.uleb128 0x14
 8614 060a 1F000000 		.4byte	.LASF31
 8615 060e 01       		.byte	0x1
 8616 060f ED04     		.2byte	0x4ed
 8617 0611 66060000 		.4byte	0x666
 8618 0615 02       		.uleb128 0x2
 8619 0616 91       		.byte	0x91
 8620 0617 58       		.sleb128 -40
 8621 0618 14       		.uleb128 0x14
 8622 0619 0B030000 		.4byte	.LASF68
 8623 061d 01       		.byte	0x1
 8624 061e ED04     		.2byte	0x4ed
 8625 0620 81000000 		.4byte	0x81
 8626 0624 02       		.uleb128 0x2
 8627 0625 91       		.byte	0x91
 8628 0626 77       		.sleb128 -9
 8629 0627 14       		.uleb128 0x14
 8630 0628 E8030000 		.4byte	.LASF69
 8631 062c 01       		.byte	0x1
 8632 062d ED04     		.2byte	0x4ed
 8633 062f 81000000 		.4byte	0x81
 8634 0633 02       		.uleb128 0x2
 8635 0634 91       		.byte	0x91
 8636 0635 76       		.sleb128 -10
 8637 0636 14       		.uleb128 0x14
 8638 0637 9C000000 		.4byte	.LASF70
 8639 063b 01       		.byte	0x1
 8640 063c ED04     		.2byte	0x4ed
 8641 063e 81000000 		.4byte	0x81
 8642 0642 02       		.uleb128 0x2
 8643 0643 91       		.byte	0x91
 8644 0644 75       		.sleb128 -11
 8645 0645 15       		.uleb128 0x15
 8646 0646 6900     		.ascii	"i\000"
 8647 0648 01       		.byte	0x1
 8648 0649 EE04     		.2byte	0x4ee
 8649 064b 8C000000 		.4byte	0x8c
 8650 064f 02       		.uleb128 0x2
 8651 0650 91       		.byte	0x91
 8652 0651 70       		.sleb128 -16
 8653 0652 15       		.uleb128 0x15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 184


 8654 0653 6A00     		.ascii	"j\000"
 8655 0655 01       		.byte	0x1
 8656 0656 EE04     		.2byte	0x4ee
 8657 0658 8C000000 		.4byte	0x8c
 8658 065c 02       		.uleb128 0x2
 8659 065d 91       		.byte	0x91
 8660 065e 6C       		.sleb128 -20
 8661 065f 00       		.byte	0
 8662 0660 18       		.uleb128 0x18
 8663 0661 04       		.byte	0x4
 8664 0662 81000000 		.4byte	0x81
 8665 0666 07       		.uleb128 0x7
 8666 0667 81000000 		.4byte	0x81
 8667 066b 76060000 		.4byte	0x676
 8668 066f 08       		.uleb128 0x8
 8669 0670 B7000000 		.4byte	0xb7
 8670 0674 11       		.byte	0x11
 8671 0675 00       		.byte	0
 8672 0676 12       		.uleb128 0x12
 8673 0677 00040000 		.4byte	.LASF71
 8674 067b 01       		.byte	0x1
 8675 067c A105     		.2byte	0x5a1
 8676 067e 81000000 		.4byte	0x81
 8677 0682 00000000 		.4byte	.LFB65
 8678 0686 10030000 		.4byte	.LFE65-.LFB65
 8679 068a 01       		.uleb128 0x1
 8680 068b 9C       		.byte	0x9c
 8681 068c D8060000 		.4byte	0x6d8
 8682 0690 13       		.uleb128 0x13
 8683 0691 64697200 		.ascii	"dir\000"
 8684 0695 01       		.byte	0x1
 8685 0696 A105     		.2byte	0x5a1
 8686 0698 81000000 		.4byte	0x81
 8687 069c 02       		.uleb128 0x2
 8688 069d 91       		.byte	0x91
 8689 069e 57       		.sleb128 -41
 8690 069f 14       		.uleb128 0x14
 8691 06a0 1F000000 		.4byte	.LASF31
 8692 06a4 01       		.byte	0x1
 8693 06a5 A205     		.2byte	0x5a2
 8694 06a7 D8060000 		.4byte	0x6d8
 8695 06ab 02       		.uleb128 0x2
 8696 06ac 91       		.byte	0x91
 8697 06ad 5C       		.sleb128 -36
 8698 06ae 14       		.uleb128 0x14
 8699 06af 0B030000 		.4byte	.LASF68
 8700 06b3 01       		.byte	0x1
 8701 06b4 A205     		.2byte	0x5a2
 8702 06b6 81000000 		.4byte	0x81
 8703 06ba 02       		.uleb128 0x2
 8704 06bb 91       		.byte	0x91
 8705 06bc 77       		.sleb128 -9
 8706 06bd 15       		.uleb128 0x15
 8707 06be 7800     		.ascii	"x\000"
 8708 06c0 01       		.byte	0x1
 8709 06c1 A305     		.2byte	0x5a3
 8710 06c3 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 185


 8711 06c7 02       		.uleb128 0x2
 8712 06c8 91       		.byte	0x91
 8713 06c9 70       		.sleb128 -16
 8714 06ca 15       		.uleb128 0x15
 8715 06cb 7900     		.ascii	"y\000"
 8716 06cd 01       		.byte	0x1
 8717 06ce A305     		.2byte	0x5a3
 8718 06d0 8C000000 		.4byte	0x8c
 8719 06d4 02       		.uleb128 0x2
 8720 06d5 91       		.byte	0x91
 8721 06d6 6C       		.sleb128 -20
 8722 06d7 00       		.byte	0
 8723 06d8 07       		.uleb128 0x7
 8724 06d9 81000000 		.4byte	0x81
 8725 06dd E8060000 		.4byte	0x6e8
 8726 06e1 08       		.uleb128 0x8
 8727 06e2 B7000000 		.4byte	0xb7
 8728 06e6 0E       		.byte	0xe
 8729 06e7 00       		.byte	0
 8730 06e8 07       		.uleb128 0x7
 8731 06e9 81000000 		.4byte	0x81
 8732 06ed F8060000 		.4byte	0x6f8
 8733 06f1 08       		.uleb128 0x8
 8734 06f2 B7000000 		.4byte	0xb7
 8735 06f6 FF       		.byte	0xff
 8736 06f7 00       		.byte	0
 8737 06f8 19       		.uleb128 0x19
 8738 06f9 24020000 		.4byte	.LASF72
 8739 06fd 06       		.byte	0x6
 8740 06fe 5201     		.2byte	0x152
 8741 0700 04070000 		.4byte	0x704
 8742 0704 1A       		.uleb128 0x1a
 8743 0705 E8060000 		.4byte	0x6e8
 8744 0709 19       		.uleb128 0x19
 8745 070a DB030000 		.4byte	.LASF73
 8746 070e 07       		.byte	0x7
 8747 070f 1606     		.2byte	0x616
 8748 0711 15070000 		.4byte	0x715
 8749 0715 1A       		.uleb128 0x1a
 8750 0716 76000000 		.4byte	0x76
 8751 071a 1B       		.uleb128 0x1b
 8752 071b 5D020000 		.4byte	.LASF74
 8753 071f 05       		.byte	0x5
 8754 0720 2C       		.byte	0x2c
 8755 0721 A5000000 		.4byte	0xa5
 8756 0725 05       		.uleb128 0x5
 8757 0726 03       		.byte	0x3
 8758 0727 00000000 		.4byte	countAnimation1
 8759 072b 1B       		.uleb128 0x1b
 8760 072c 6D020000 		.4byte	.LASF75
 8761 0730 05       		.byte	0x5
 8762 0731 2D       		.byte	0x2d
 8763 0732 A5000000 		.4byte	0xa5
 8764 0736 05       		.uleb128 0x5
 8765 0737 03       		.byte	0x3
 8766 0738 00000000 		.4byte	countAnimation2
 8767 073c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 186


 8768 073d 93000000 		.4byte	.LASF76
 8769 0741 05       		.byte	0x5
 8770 0742 2E       		.byte	0x2e
 8771 0743 81000000 		.4byte	0x81
 8772 0747 05       		.uleb128 0x5
 8773 0748 03       		.byte	0x3
 8774 0749 00000000 		.4byte	flowLCD1
 8775 074d 1B       		.uleb128 0x1b
 8776 074e CA010000 		.4byte	.LASF77
 8777 0752 05       		.byte	0x5
 8778 0753 2F       		.byte	0x2f
 8779 0754 81000000 		.4byte	0x81
 8780 0758 05       		.uleb128 0x5
 8781 0759 03       		.byte	0x3
 8782 075a 00000000 		.4byte	flowLCD2
 8783 075e 1B       		.uleb128 0x1b
 8784 075f 16010000 		.4byte	.LASF78
 8785 0763 05       		.byte	0x5
 8786 0764 30       		.byte	0x30
 8787 0765 81000000 		.4byte	0x81
 8788 0769 05       		.uleb128 0x5
 8789 076a 03       		.byte	0x3
 8790 076b 00000000 		.4byte	digits
 8791 076f 1B       		.uleb128 0x1b
 8792 0770 2B000000 		.4byte	.LASF79
 8793 0774 05       		.byte	0x5
 8794 0775 31       		.byte	0x31
 8795 0776 D5020000 		.4byte	0x2d5
 8796 077a 05       		.uleb128 0x5
 8797 077b 03       		.byte	0x3
 8798 077c 00000000 		.4byte	ipAdress
 8799 0780 1B       		.uleb128 0x1b
 8800 0781 E2010000 		.4byte	.LASF80
 8801 0785 05       		.byte	0x5
 8802 0786 32       		.byte	0x32
 8803 0787 81000000 		.4byte	0x81
 8804 078b 05       		.uleb128 0x5
 8805 078c 03       		.byte	0x3
 8806 078d 00000000 		.4byte	numberKeys1
 8807 0791 1B       		.uleb128 0x1b
 8808 0792 EE010000 		.4byte	.LASF81
 8809 0796 05       		.byte	0x5
 8810 0797 33       		.byte	0x33
 8811 0798 81000000 		.4byte	0x81
 8812 079c 05       		.uleb128 0x5
 8813 079d 03       		.byte	0x3
 8814 079e 00000000 		.4byte	numberKeys2
 8815 07a2 1B       		.uleb128 0x1b
 8816 07a3 AC030000 		.4byte	.LASF82
 8817 07a7 05       		.byte	0x5
 8818 07a8 34       		.byte	0x34
 8819 07a9 81000000 		.4byte	0x81
 8820 07ad 05       		.uleb128 0x5
 8821 07ae 03       		.byte	0x3
 8822 07af 00000000 		.4byte	flagPoint1
 8823 07b3 1B       		.uleb128 0x1b
 8824 07b4 B7030000 		.4byte	.LASF83
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 187


 8825 07b8 05       		.byte	0x5
 8826 07b9 35       		.byte	0x35
 8827 07ba 81000000 		.4byte	0x81
 8828 07be 05       		.uleb128 0x5
 8829 07bf 03       		.byte	0x3
 8830 07c0 00000000 		.4byte	flagPoint2
 8831 07c4 07       		.uleb128 0x7
 8832 07c5 81000000 		.4byte	0x81
 8833 07c9 DA070000 		.4byte	0x7da
 8834 07cd 08       		.uleb128 0x8
 8835 07ce B7000000 		.4byte	0xb7
 8836 07d2 31       		.byte	0x31
 8837 07d3 08       		.uleb128 0x8
 8838 07d4 B7000000 		.4byte	0xb7
 8839 07d8 07       		.byte	0x7
 8840 07d9 00       		.byte	0
 8841 07da 1B       		.uleb128 0x1b
 8842 07db 84010000 		.4byte	.LASF84
 8843 07df 05       		.byte	0x5
 8844 07e0 36       		.byte	0x36
 8845 07e1 C4070000 		.4byte	0x7c4
 8846 07e5 05       		.uleb128 0x5
 8847 07e6 03       		.byte	0x3
 8848 07e7 00000000 		.4byte	button
 8849 07eb 1B       		.uleb128 0x1b
 8850 07ec 3D010000 		.4byte	.LASF85
 8851 07f0 05       		.byte	0x5
 8852 07f1 37       		.byte	0x37
 8853 07f2 81000000 		.4byte	0x81
 8854 07f6 05       		.uleb128 0x5
 8855 07f7 03       		.byte	0x3
 8856 07f8 00000000 		.4byte	productNumber
 8857 07fc 07       		.uleb128 0x7
 8858 07fd 81000000 		.4byte	0x81
 8859 0801 12080000 		.4byte	0x812
 8860 0805 08       		.uleb128 0x8
 8861 0806 B7000000 		.4byte	0xb7
 8862 080a 02       		.byte	0x2
 8863 080b 08       		.uleb128 0x8
 8864 080c B7000000 		.4byte	0xb7
 8865 0810 09       		.byte	0x9
 8866 0811 00       		.byte	0
 8867 0812 1B       		.uleb128 0x1b
 8868 0813 35020000 		.4byte	.LASF86
 8869 0817 05       		.byte	0x5
 8870 0818 38       		.byte	0x38
 8871 0819 FC070000 		.4byte	0x7fc
 8872 081d 05       		.uleb128 0x5
 8873 081e 03       		.byte	0x3
 8874 081f 00000000 		.4byte	presetFast
 8875 0823 1B       		.uleb128 0x1b
 8876 0824 9B030000 		.4byte	.LASF87
 8877 0828 05       		.byte	0x5
 8878 0829 3D       		.byte	0x3d
 8879 082a 81000000 		.4byte	0x81
 8880 082e 05       		.uleb128 0x5
 8881 082f 03       		.byte	0x3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 188


 8882 0830 00000000 		.4byte	ppux10
 8883 0834 07       		.uleb128 0x7
 8884 0835 81000000 		.4byte	0x81
 8885 0839 44080000 		.4byte	0x844
 8886 083d 08       		.uleb128 0x8
 8887 083e B7000000 		.4byte	0xb7
 8888 0842 02       		.byte	0x2
 8889 0843 00       		.byte	0
 8890 0844 1B       		.uleb128 0x1b
 8891 0845 1D010000 		.4byte	.LASF88
 8892 0849 05       		.byte	0x5
 8893 084a 3E       		.byte	0x3e
 8894 084b 34080000 		.4byte	0x834
 8895 084f 05       		.uleb128 0x5
 8896 0850 03       		.byte	0x3
 8897 0851 00000000 		.4byte	time
 8898 0855 1B       		.uleb128 0x1b
 8899 0856 1A020000 		.4byte	.LASF89
 8900 085a 05       		.byte	0x5
 8901 085b 3F       		.byte	0x3f
 8902 085c 34080000 		.4byte	0x834
 8903 0860 05       		.uleb128 0x5
 8904 0861 03       		.byte	0x3
 8905 0862 00000000 		.4byte	date
 8906 0866 1B       		.uleb128 0x1b
 8907 0867 FE040000 		.4byte	.LASF90
 8908 086b 05       		.byte	0x5
 8909 086c 40       		.byte	0x40
 8910 086d 34080000 		.4byte	0x834
 8911 0871 05       		.uleb128 0x5
 8912 0872 03       		.byte	0x3
 8913 0873 00000000 		.4byte	timeSale1
 8914 0877 1B       		.uleb128 0x1b
 8915 0878 61010000 		.4byte	.LASF91
 8916 087c 05       		.byte	0x5
 8917 087d 41       		.byte	0x41
 8918 087e 34080000 		.4byte	0x834
 8919 0882 05       		.uleb128 0x5
 8920 0883 03       		.byte	0x3
 8921 0884 00000000 		.4byte	dateSale1
 8922 0888 1B       		.uleb128 0x1b
 8923 0889 08050000 		.4byte	.LASF92
 8924 088d 05       		.byte	0x5
 8925 088e 42       		.byte	0x42
 8926 088f 34080000 		.4byte	0x834
 8927 0893 05       		.uleb128 0x5
 8928 0894 03       		.byte	0x3
 8929 0895 00000000 		.4byte	timeSale2
 8930 0899 1B       		.uleb128 0x1b
 8931 089a 6B010000 		.4byte	.LASF93
 8932 089e 05       		.byte	0x5
 8933 089f 43       		.byte	0x43
 8934 08a0 34080000 		.4byte	0x834
 8935 08a4 05       		.uleb128 0x5
 8936 08a5 03       		.byte	0x3
 8937 08a6 00000000 		.4byte	dateSale2
 8938 08aa 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 189


 8939 08ab 34000000 		.4byte	.LASF94
 8940 08af 05       		.byte	0x5
 8941 08b0 44       		.byte	0x44
 8942 08b1 81000000 		.4byte	0x81
 8943 08b5 05       		.uleb128 0x5
 8944 08b6 03       		.byte	0x3
 8945 08b7 00000000 		.4byte	decimalMoney
 8946 08bb 1B       		.uleb128 0x1b
 8947 08bc 09000000 		.4byte	.LASF95
 8948 08c0 05       		.byte	0x5
 8949 08c1 45       		.byte	0x45
 8950 08c2 81000000 		.4byte	0x81
 8951 08c6 05       		.uleb128 0x5
 8952 08c7 03       		.byte	0x3
 8953 08c8 00000000 		.4byte	decimalVolume
 8954 08cc 07       		.uleb128 0x7
 8955 08cd 81000000 		.4byte	0x81
 8956 08d1 DD080000 		.4byte	0x8dd
 8957 08d5 1C       		.uleb128 0x1c
 8958 08d6 B7000000 		.4byte	0xb7
 8959 08da 2B01     		.2byte	0x12b
 8960 08dc 00       		.byte	0
 8961 08dd 1B       		.uleb128 0x1b
 8962 08de 38040000 		.4byte	.LASF96
 8963 08e2 05       		.byte	0x5
 8964 08e3 46       		.byte	0x46
 8965 08e4 CC080000 		.4byte	0x8cc
 8966 08e8 05       		.uleb128 0x5
 8967 08e9 03       		.byte	0x3
 8968 08ea 00000000 		.4byte	RxPc
 8969 08ee 1B       		.uleb128 0x1b
 8970 08ef 62040000 		.4byte	.LASF97
 8971 08f3 05       		.byte	0x5
 8972 08f4 47       		.byte	0x47
 8973 08f5 CC080000 		.4byte	0x8cc
 8974 08f9 05       		.uleb128 0x5
 8975 08fa 03       		.byte	0x3
 8976 08fb 00000000 		.4byte	RxPu
 8977 08ff 1B       		.uleb128 0x1b
 8978 0900 1B050000 		.4byte	.LASF98
 8979 0904 05       		.byte	0x5
 8980 0905 48       		.byte	0x48
 8981 0906 CC080000 		.4byte	0x8cc
 8982 090a 05       		.uleb128 0x5
 8983 090b 03       		.byte	0x3
 8984 090c 00000000 		.4byte	TxPu
 8985 0910 1B       		.uleb128 0x1b
 8986 0911 D5000000 		.4byte	.LASF99
 8987 0915 05       		.byte	0x5
 8988 0916 49       		.byte	0x49
 8989 0917 81000000 		.4byte	0x81
 8990 091b 05       		.uleb128 0x5
 8991 091c 03       		.byte	0x3
 8992 091d 00000000 		.4byte	flowLoopPump
 8993 0921 1B       		.uleb128 0x1b
 8994 0922 22010000 		.4byte	.LASF100
 8995 0926 05       		.byte	0x5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 190


 8996 0927 4A       		.byte	0x4a
 8997 0928 81000000 		.4byte	0x81
 8998 092c 05       		.uleb128 0x5
 8999 092d 03       		.byte	0x3
 9000 092e 00000000 		.4byte	flowPump
 9001 0932 1B       		.uleb128 0x1b
 9002 0933 93030000 		.4byte	.LASF101
 9003 0937 05       		.byte	0x5
 9004 0938 4B       		.byte	0x4b
 9005 0939 34080000 		.4byte	0x834
 9006 093d 05       		.uleb128 0x5
 9007 093e 03       		.byte	0x3
 9008 093f 00000000 		.4byte	flagImp
 9009 0943 1B       		.uleb128 0x1b
 9010 0944 55040000 		.4byte	.LASF102
 9011 0948 05       		.byte	0x5
 9012 0949 4C       		.byte	0x4c
 9013 094a 34080000 		.4byte	0x834
 9014 094e 05       		.uleb128 0x5
 9015 094f 03       		.byte	0x3
 9016 0950 00000000 		.4byte	flagHandleUp
 9017 0954 1B       		.uleb128 0x1b
 9018 0955 A5040000 		.4byte	.LASF103
 9019 0959 05       		.byte	0x5
 9020 095a 4D       		.byte	0x4d
 9021 095b 34080000 		.4byte	0x834
 9022 095f 05       		.uleb128 0x5
 9023 0960 03       		.byte	0x3
 9024 0961 00000000 		.4byte	flagAuthorize
 9025 0965 1B       		.uleb128 0x1b
 9026 0966 EF040000 		.4byte	.LASF104
 9027 096a 05       		.byte	0x5
 9028 096b 4E       		.byte	0x4e
 9029 096c 34080000 		.4byte	0x834
 9030 0970 05       		.uleb128 0x5
 9031 0971 03       		.byte	0x3
 9032 0972 00000000 		.4byte	flagSale
 9033 0976 1B       		.uleb128 0x1b
 9034 0977 D8040000 		.4byte	.LASF44
 9035 097b 05       		.byte	0x5
 9036 097c 4F       		.byte	0x4f
 9037 097d 81000000 		.4byte	0x81
 9038 0981 05       		.uleb128 0x5
 9039 0982 03       		.byte	0x3
 9040 0983 00000000 		.4byte	product
 9041 0987 07       		.uleb128 0x7
 9042 0988 81000000 		.4byte	0x81
 9043 098c 97090000 		.4byte	0x997
 9044 0990 08       		.uleb128 0x8
 9045 0991 B7000000 		.4byte	0xb7
 9046 0995 1D       		.byte	0x1d
 9047 0996 00       		.byte	0
 9048 0997 1B       		.uleb128 0x1b
 9049 0998 0D010000 		.4byte	.LASF105
 9050 099c 05       		.byte	0x5
 9051 099d 50       		.byte	0x50
 9052 099e 87090000 		.4byte	0x987
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 191


 9053 09a2 05       		.uleb128 0x5
 9054 09a3 03       		.byte	0x3
 9055 09a4 00000000 		.4byte	valuePPU
 9056 09a8 1B       		.uleb128 0x1b
 9057 09a9 A2030000 		.4byte	.LASF106
 9058 09ad 05       		.byte	0x5
 9059 09ae 51       		.byte	0x51
 9060 09af A5000000 		.4byte	0xa5
 9061 09b3 05       		.uleb128 0x5
 9062 09b4 03       		.byte	0x3
 9063 09b5 00000000 		.4byte	countSale
 9064 09b9 1B       		.uleb128 0x1b
 9065 09ba B3040000 		.4byte	.LASF107
 9066 09be 05       		.byte	0x5
 9067 09bf 52       		.byte	0x52
 9068 09c0 34080000 		.4byte	0x834
 9069 09c4 05       		.uleb128 0x5
 9070 09c5 03       		.byte	0x3
 9071 09c6 00000000 		.4byte	countImp
 9072 09ca 1B       		.uleb128 0x1b
 9073 09cb 4B010000 		.4byte	.LASF108
 9074 09cf 05       		.byte	0x5
 9075 09d0 6F       		.byte	0x6f
 9076 09d1 BE000000 		.4byte	0xbe
 9077 09d5 05       		.uleb128 0x5
 9078 09d6 03       		.byte	0x3
 9079 09d7 00000000 		.4byte	bufferLCD1
 9080 09db 1B       		.uleb128 0x1b
 9081 09dc 56010000 		.4byte	.LASF109
 9082 09e0 05       		.byte	0x5
 9083 09e1 70       		.byte	0x70
 9084 09e2 BE000000 		.4byte	0xbe
 9085 09e6 05       		.uleb128 0x5
 9086 09e7 03       		.byte	0x3
 9087 09e8 00000000 		.4byte	bufferLCD2
 9088 09ec 1B       		.uleb128 0x1b
 9089 09ed C2030000 		.4byte	.LASF110
 9090 09f1 05       		.byte	0x5
 9091 09f2 87       		.byte	0x87
 9092 09f3 97010000 		.4byte	0x197
 9093 09f7 05       		.uleb128 0x5
 9094 09f8 03       		.byte	0x3
 9095 09f9 00000000 		.4byte	print
 9096 09fd 1B       		.uleb128 0x1b
 9097 09fe 58020000 		.4byte	.LASF111
 9098 0a02 05       		.byte	0x5
 9099 0a03 A9       		.byte	0xa9
 9100 0a04 05030000 		.4byte	0x305
 9101 0a08 05       		.uleb128 0x5
 9102 0a09 03       		.byte	0x3
 9103 0a0a 00000000 		.4byte	side
 9104 0a0e 1B       		.uleb128 0x1b
 9105 0a0f 8B010000 		.4byte	.LASF112
 9106 0a13 05       		.byte	0x5
 9107 0a14 BD       		.byte	0xbd
 9108 0a15 28030000 		.4byte	0x328
 9109 0a19 05       		.uleb128 0x5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 192


 9110 0a1a 03       		.byte	0x3
 9111 0a1b 00000000 		.4byte	bSale
 9112 0a1f 00       		.byte	0
 9113              		.section	.debug_abbrev,"",%progbits
 9114              	.Ldebug_abbrev0:
 9115 0000 01       		.uleb128 0x1
 9116 0001 11       		.uleb128 0x11
 9117 0002 01       		.byte	0x1
 9118 0003 25       		.uleb128 0x25
 9119 0004 0E       		.uleb128 0xe
 9120 0005 13       		.uleb128 0x13
 9121 0006 0B       		.uleb128 0xb
 9122 0007 03       		.uleb128 0x3
 9123 0008 0E       		.uleb128 0xe
 9124 0009 1B       		.uleb128 0x1b
 9125 000a 0E       		.uleb128 0xe
 9126 000b 55       		.uleb128 0x55
 9127 000c 17       		.uleb128 0x17
 9128 000d 11       		.uleb128 0x11
 9129 000e 01       		.uleb128 0x1
 9130 000f 10       		.uleb128 0x10
 9131 0010 17       		.uleb128 0x17
 9132 0011 00       		.byte	0
 9133 0012 00       		.byte	0
 9134 0013 02       		.uleb128 0x2
 9135 0014 24       		.uleb128 0x24
 9136 0015 00       		.byte	0
 9137 0016 0B       		.uleb128 0xb
 9138 0017 0B       		.uleb128 0xb
 9139 0018 3E       		.uleb128 0x3e
 9140 0019 0B       		.uleb128 0xb
 9141 001a 03       		.uleb128 0x3
 9142 001b 0E       		.uleb128 0xe
 9143 001c 00       		.byte	0
 9144 001d 00       		.byte	0
 9145 001e 03       		.uleb128 0x3
 9146 001f 16       		.uleb128 0x16
 9147 0020 00       		.byte	0
 9148 0021 03       		.uleb128 0x3
 9149 0022 0E       		.uleb128 0xe
 9150 0023 3A       		.uleb128 0x3a
 9151 0024 0B       		.uleb128 0xb
 9152 0025 3B       		.uleb128 0x3b
 9153 0026 0B       		.uleb128 0xb
 9154 0027 49       		.uleb128 0x49
 9155 0028 13       		.uleb128 0x13
 9156 0029 00       		.byte	0
 9157 002a 00       		.byte	0
 9158 002b 04       		.uleb128 0x4
 9159 002c 24       		.uleb128 0x24
 9160 002d 00       		.byte	0
 9161 002e 0B       		.uleb128 0xb
 9162 002f 0B       		.uleb128 0xb
 9163 0030 3E       		.uleb128 0x3e
 9164 0031 0B       		.uleb128 0xb
 9165 0032 03       		.uleb128 0x3
 9166 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 193


 9167 0034 00       		.byte	0
 9168 0035 00       		.byte	0
 9169 0036 05       		.uleb128 0x5
 9170 0037 13       		.uleb128 0x13
 9171 0038 01       		.byte	0x1
 9172 0039 03       		.uleb128 0x3
 9173 003a 0E       		.uleb128 0xe
 9174 003b 0B       		.uleb128 0xb
 9175 003c 0B       		.uleb128 0xb
 9176 003d 3A       		.uleb128 0x3a
 9177 003e 0B       		.uleb128 0xb
 9178 003f 3B       		.uleb128 0x3b
 9179 0040 0B       		.uleb128 0xb
 9180 0041 01       		.uleb128 0x1
 9181 0042 13       		.uleb128 0x13
 9182 0043 00       		.byte	0
 9183 0044 00       		.byte	0
 9184 0045 06       		.uleb128 0x6
 9185 0046 0D       		.uleb128 0xd
 9186 0047 00       		.byte	0
 9187 0048 03       		.uleb128 0x3
 9188 0049 0E       		.uleb128 0xe
 9189 004a 3A       		.uleb128 0x3a
 9190 004b 0B       		.uleb128 0xb
 9191 004c 3B       		.uleb128 0x3b
 9192 004d 0B       		.uleb128 0xb
 9193 004e 49       		.uleb128 0x49
 9194 004f 13       		.uleb128 0x13
 9195 0050 38       		.uleb128 0x38
 9196 0051 0B       		.uleb128 0xb
 9197 0052 00       		.byte	0
 9198 0053 00       		.byte	0
 9199 0054 07       		.uleb128 0x7
 9200 0055 01       		.uleb128 0x1
 9201 0056 01       		.byte	0x1
 9202 0057 49       		.uleb128 0x49
 9203 0058 13       		.uleb128 0x13
 9204 0059 01       		.uleb128 0x1
 9205 005a 13       		.uleb128 0x13
 9206 005b 00       		.byte	0
 9207 005c 00       		.byte	0
 9208 005d 08       		.uleb128 0x8
 9209 005e 21       		.uleb128 0x21
 9210 005f 00       		.byte	0
 9211 0060 49       		.uleb128 0x49
 9212 0061 13       		.uleb128 0x13
 9213 0062 2F       		.uleb128 0x2f
 9214 0063 0B       		.uleb128 0xb
 9215 0064 00       		.byte	0
 9216 0065 00       		.byte	0
 9217 0066 09       		.uleb128 0x9
 9218 0067 0D       		.uleb128 0xd
 9219 0068 00       		.byte	0
 9220 0069 03       		.uleb128 0x3
 9221 006a 08       		.uleb128 0x8
 9222 006b 3A       		.uleb128 0x3a
 9223 006c 0B       		.uleb128 0xb
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 194


 9224 006d 3B       		.uleb128 0x3b
 9225 006e 0B       		.uleb128 0xb
 9226 006f 49       		.uleb128 0x49
 9227 0070 13       		.uleb128 0x13
 9228 0071 38       		.uleb128 0x38
 9229 0072 0B       		.uleb128 0xb
 9230 0073 00       		.byte	0
 9231 0074 00       		.byte	0
 9232 0075 0A       		.uleb128 0xa
 9233 0076 13       		.uleb128 0x13
 9234 0077 01       		.byte	0x1
 9235 0078 03       		.uleb128 0x3
 9236 0079 0E       		.uleb128 0xe
 9237 007a 0B       		.uleb128 0xb
 9238 007b 05       		.uleb128 0x5
 9239 007c 3A       		.uleb128 0x3a
 9240 007d 0B       		.uleb128 0xb
 9241 007e 3B       		.uleb128 0x3b
 9242 007f 0B       		.uleb128 0xb
 9243 0080 01       		.uleb128 0x1
 9244 0081 13       		.uleb128 0x13
 9245 0082 00       		.byte	0
 9246 0083 00       		.byte	0
 9247 0084 0B       		.uleb128 0xb
 9248 0085 0D       		.uleb128 0xd
 9249 0086 00       		.byte	0
 9250 0087 03       		.uleb128 0x3
 9251 0088 0E       		.uleb128 0xe
 9252 0089 3A       		.uleb128 0x3a
 9253 008a 0B       		.uleb128 0xb
 9254 008b 3B       		.uleb128 0x3b
 9255 008c 0B       		.uleb128 0xb
 9256 008d 49       		.uleb128 0x49
 9257 008e 13       		.uleb128 0x13
 9258 008f 38       		.uleb128 0x38
 9259 0090 05       		.uleb128 0x5
 9260 0091 00       		.byte	0
 9261 0092 00       		.byte	0
 9262 0093 0C       		.uleb128 0xc
 9263 0094 0D       		.uleb128 0xd
 9264 0095 00       		.byte	0
 9265 0096 03       		.uleb128 0x3
 9266 0097 08       		.uleb128 0x8
 9267 0098 3A       		.uleb128 0x3a
 9268 0099 0B       		.uleb128 0xb
 9269 009a 3B       		.uleb128 0x3b
 9270 009b 0B       		.uleb128 0xb
 9271 009c 49       		.uleb128 0x49
 9272 009d 13       		.uleb128 0x13
 9273 009e 38       		.uleb128 0x38
 9274 009f 05       		.uleb128 0x5
 9275 00a0 00       		.byte	0
 9276 00a1 00       		.byte	0
 9277 00a2 0D       		.uleb128 0xd
 9278 00a3 2E       		.uleb128 0x2e
 9279 00a4 01       		.byte	0x1
 9280 00a5 3F       		.uleb128 0x3f
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 195


 9281 00a6 19       		.uleb128 0x19
 9282 00a7 03       		.uleb128 0x3
 9283 00a8 0E       		.uleb128 0xe
 9284 00a9 3A       		.uleb128 0x3a
 9285 00aa 0B       		.uleb128 0xb
 9286 00ab 3B       		.uleb128 0x3b
 9287 00ac 0B       		.uleb128 0xb
 9288 00ad 27       		.uleb128 0x27
 9289 00ae 19       		.uleb128 0x19
 9290 00af 49       		.uleb128 0x49
 9291 00b0 13       		.uleb128 0x13
 9292 00b1 11       		.uleb128 0x11
 9293 00b2 01       		.uleb128 0x1
 9294 00b3 12       		.uleb128 0x12
 9295 00b4 06       		.uleb128 0x6
 9296 00b5 40       		.uleb128 0x40
 9297 00b6 18       		.uleb128 0x18
 9298 00b7 9642     		.uleb128 0x2116
 9299 00b9 19       		.uleb128 0x19
 9300 00ba 01       		.uleb128 0x1
 9301 00bb 13       		.uleb128 0x13
 9302 00bc 00       		.byte	0
 9303 00bd 00       		.byte	0
 9304 00be 0E       		.uleb128 0xe
 9305 00bf 05       		.uleb128 0x5
 9306 00c0 00       		.byte	0
 9307 00c1 03       		.uleb128 0x3
 9308 00c2 08       		.uleb128 0x8
 9309 00c3 3A       		.uleb128 0x3a
 9310 00c4 0B       		.uleb128 0xb
 9311 00c5 3B       		.uleb128 0x3b
 9312 00c6 0B       		.uleb128 0xb
 9313 00c7 49       		.uleb128 0x49
 9314 00c8 13       		.uleb128 0x13
 9315 00c9 02       		.uleb128 0x2
 9316 00ca 18       		.uleb128 0x18
 9317 00cb 00       		.byte	0
 9318 00cc 00       		.byte	0
 9319 00cd 0F       		.uleb128 0xf
 9320 00ce 34       		.uleb128 0x34
 9321 00cf 00       		.byte	0
 9322 00d0 03       		.uleb128 0x3
 9323 00d1 0E       		.uleb128 0xe
 9324 00d2 3A       		.uleb128 0x3a
 9325 00d3 0B       		.uleb128 0xb
 9326 00d4 3B       		.uleb128 0x3b
 9327 00d5 0B       		.uleb128 0xb
 9328 00d6 49       		.uleb128 0x49
 9329 00d7 13       		.uleb128 0x13
 9330 00d8 02       		.uleb128 0x2
 9331 00d9 18       		.uleb128 0x18
 9332 00da 00       		.byte	0
 9333 00db 00       		.byte	0
 9334 00dc 10       		.uleb128 0x10
 9335 00dd 34       		.uleb128 0x34
 9336 00de 00       		.byte	0
 9337 00df 03       		.uleb128 0x3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 196


 9338 00e0 08       		.uleb128 0x8
 9339 00e1 3A       		.uleb128 0x3a
 9340 00e2 0B       		.uleb128 0xb
 9341 00e3 3B       		.uleb128 0x3b
 9342 00e4 0B       		.uleb128 0xb
 9343 00e5 49       		.uleb128 0x49
 9344 00e6 13       		.uleb128 0x13
 9345 00e7 02       		.uleb128 0x2
 9346 00e8 18       		.uleb128 0x18
 9347 00e9 00       		.byte	0
 9348 00ea 00       		.byte	0
 9349 00eb 11       		.uleb128 0x11
 9350 00ec 2E       		.uleb128 0x2e
 9351 00ed 01       		.byte	0x1
 9352 00ee 3F       		.uleb128 0x3f
 9353 00ef 19       		.uleb128 0x19
 9354 00f0 03       		.uleb128 0x3
 9355 00f1 0E       		.uleb128 0xe
 9356 00f2 3A       		.uleb128 0x3a
 9357 00f3 0B       		.uleb128 0xb
 9358 00f4 3B       		.uleb128 0x3b
 9359 00f5 0B       		.uleb128 0xb
 9360 00f6 27       		.uleb128 0x27
 9361 00f7 19       		.uleb128 0x19
 9362 00f8 11       		.uleb128 0x11
 9363 00f9 01       		.uleb128 0x1
 9364 00fa 12       		.uleb128 0x12
 9365 00fb 06       		.uleb128 0x6
 9366 00fc 40       		.uleb128 0x40
 9367 00fd 18       		.uleb128 0x18
 9368 00fe 9642     		.uleb128 0x2116
 9369 0100 19       		.uleb128 0x19
 9370 0101 01       		.uleb128 0x1
 9371 0102 13       		.uleb128 0x13
 9372 0103 00       		.byte	0
 9373 0104 00       		.byte	0
 9374 0105 12       		.uleb128 0x12
 9375 0106 2E       		.uleb128 0x2e
 9376 0107 01       		.byte	0x1
 9377 0108 3F       		.uleb128 0x3f
 9378 0109 19       		.uleb128 0x19
 9379 010a 03       		.uleb128 0x3
 9380 010b 0E       		.uleb128 0xe
 9381 010c 3A       		.uleb128 0x3a
 9382 010d 0B       		.uleb128 0xb
 9383 010e 3B       		.uleb128 0x3b
 9384 010f 05       		.uleb128 0x5
 9385 0110 27       		.uleb128 0x27
 9386 0111 19       		.uleb128 0x19
 9387 0112 49       		.uleb128 0x49
 9388 0113 13       		.uleb128 0x13
 9389 0114 11       		.uleb128 0x11
 9390 0115 01       		.uleb128 0x1
 9391 0116 12       		.uleb128 0x12
 9392 0117 06       		.uleb128 0x6
 9393 0118 40       		.uleb128 0x40
 9394 0119 18       		.uleb128 0x18
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 197


 9395 011a 9642     		.uleb128 0x2116
 9396 011c 19       		.uleb128 0x19
 9397 011d 01       		.uleb128 0x1
 9398 011e 13       		.uleb128 0x13
 9399 011f 00       		.byte	0
 9400 0120 00       		.byte	0
 9401 0121 13       		.uleb128 0x13
 9402 0122 05       		.uleb128 0x5
 9403 0123 00       		.byte	0
 9404 0124 03       		.uleb128 0x3
 9405 0125 08       		.uleb128 0x8
 9406 0126 3A       		.uleb128 0x3a
 9407 0127 0B       		.uleb128 0xb
 9408 0128 3B       		.uleb128 0x3b
 9409 0129 05       		.uleb128 0x5
 9410 012a 49       		.uleb128 0x49
 9411 012b 13       		.uleb128 0x13
 9412 012c 02       		.uleb128 0x2
 9413 012d 18       		.uleb128 0x18
 9414 012e 00       		.byte	0
 9415 012f 00       		.byte	0
 9416 0130 14       		.uleb128 0x14
 9417 0131 34       		.uleb128 0x34
 9418 0132 00       		.byte	0
 9419 0133 03       		.uleb128 0x3
 9420 0134 0E       		.uleb128 0xe
 9421 0135 3A       		.uleb128 0x3a
 9422 0136 0B       		.uleb128 0xb
 9423 0137 3B       		.uleb128 0x3b
 9424 0138 05       		.uleb128 0x5
 9425 0139 49       		.uleb128 0x49
 9426 013a 13       		.uleb128 0x13
 9427 013b 02       		.uleb128 0x2
 9428 013c 18       		.uleb128 0x18
 9429 013d 00       		.byte	0
 9430 013e 00       		.byte	0
 9431 013f 15       		.uleb128 0x15
 9432 0140 34       		.uleb128 0x34
 9433 0141 00       		.byte	0
 9434 0142 03       		.uleb128 0x3
 9435 0143 08       		.uleb128 0x8
 9436 0144 3A       		.uleb128 0x3a
 9437 0145 0B       		.uleb128 0xb
 9438 0146 3B       		.uleb128 0x3b
 9439 0147 05       		.uleb128 0x5
 9440 0148 49       		.uleb128 0x49
 9441 0149 13       		.uleb128 0x13
 9442 014a 02       		.uleb128 0x2
 9443 014b 18       		.uleb128 0x18
 9444 014c 00       		.byte	0
 9445 014d 00       		.byte	0
 9446 014e 16       		.uleb128 0x16
 9447 014f 2E       		.uleb128 0x2e
 9448 0150 01       		.byte	0x1
 9449 0151 3F       		.uleb128 0x3f
 9450 0152 19       		.uleb128 0x19
 9451 0153 03       		.uleb128 0x3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 198


 9452 0154 0E       		.uleb128 0xe
 9453 0155 3A       		.uleb128 0x3a
 9454 0156 0B       		.uleb128 0xb
 9455 0157 3B       		.uleb128 0x3b
 9456 0158 05       		.uleb128 0x5
 9457 0159 27       		.uleb128 0x27
 9458 015a 19       		.uleb128 0x19
 9459 015b 11       		.uleb128 0x11
 9460 015c 01       		.uleb128 0x1
 9461 015d 12       		.uleb128 0x12
 9462 015e 06       		.uleb128 0x6
 9463 015f 40       		.uleb128 0x40
 9464 0160 18       		.uleb128 0x18
 9465 0161 9642     		.uleb128 0x2116
 9466 0163 19       		.uleb128 0x19
 9467 0164 01       		.uleb128 0x1
 9468 0165 13       		.uleb128 0x13
 9469 0166 00       		.byte	0
 9470 0167 00       		.byte	0
 9471 0168 17       		.uleb128 0x17
 9472 0169 05       		.uleb128 0x5
 9473 016a 00       		.byte	0
 9474 016b 03       		.uleb128 0x3
 9475 016c 0E       		.uleb128 0xe
 9476 016d 3A       		.uleb128 0x3a
 9477 016e 0B       		.uleb128 0xb
 9478 016f 3B       		.uleb128 0x3b
 9479 0170 05       		.uleb128 0x5
 9480 0171 49       		.uleb128 0x49
 9481 0172 13       		.uleb128 0x13
 9482 0173 02       		.uleb128 0x2
 9483 0174 18       		.uleb128 0x18
 9484 0175 00       		.byte	0
 9485 0176 00       		.byte	0
 9486 0177 18       		.uleb128 0x18
 9487 0178 0F       		.uleb128 0xf
 9488 0179 00       		.byte	0
 9489 017a 0B       		.uleb128 0xb
 9490 017b 0B       		.uleb128 0xb
 9491 017c 49       		.uleb128 0x49
 9492 017d 13       		.uleb128 0x13
 9493 017e 00       		.byte	0
 9494 017f 00       		.byte	0
 9495 0180 19       		.uleb128 0x19
 9496 0181 34       		.uleb128 0x34
 9497 0182 00       		.byte	0
 9498 0183 03       		.uleb128 0x3
 9499 0184 0E       		.uleb128 0xe
 9500 0185 3A       		.uleb128 0x3a
 9501 0186 0B       		.uleb128 0xb
 9502 0187 3B       		.uleb128 0x3b
 9503 0188 05       		.uleb128 0x5
 9504 0189 49       		.uleb128 0x49
 9505 018a 13       		.uleb128 0x13
 9506 018b 3F       		.uleb128 0x3f
 9507 018c 19       		.uleb128 0x19
 9508 018d 3C       		.uleb128 0x3c
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 199


 9509 018e 19       		.uleb128 0x19
 9510 018f 00       		.byte	0
 9511 0190 00       		.byte	0
 9512 0191 1A       		.uleb128 0x1a
 9513 0192 35       		.uleb128 0x35
 9514 0193 00       		.byte	0
 9515 0194 49       		.uleb128 0x49
 9516 0195 13       		.uleb128 0x13
 9517 0196 00       		.byte	0
 9518 0197 00       		.byte	0
 9519 0198 1B       		.uleb128 0x1b
 9520 0199 34       		.uleb128 0x34
 9521 019a 00       		.byte	0
 9522 019b 03       		.uleb128 0x3
 9523 019c 0E       		.uleb128 0xe
 9524 019d 3A       		.uleb128 0x3a
 9525 019e 0B       		.uleb128 0xb
 9526 019f 3B       		.uleb128 0x3b
 9527 01a0 0B       		.uleb128 0xb
 9528 01a1 49       		.uleb128 0x49
 9529 01a2 13       		.uleb128 0x13
 9530 01a3 3F       		.uleb128 0x3f
 9531 01a4 19       		.uleb128 0x19
 9532 01a5 02       		.uleb128 0x2
 9533 01a6 18       		.uleb128 0x18
 9534 01a7 00       		.byte	0
 9535 01a8 00       		.byte	0
 9536 01a9 1C       		.uleb128 0x1c
 9537 01aa 21       		.uleb128 0x21
 9538 01ab 00       		.byte	0
 9539 01ac 49       		.uleb128 0x49
 9540 01ad 13       		.uleb128 0x13
 9541 01ae 2F       		.uleb128 0x2f
 9542 01af 05       		.uleb128 0x5
 9543 01b0 00       		.byte	0
 9544 01b1 00       		.byte	0
 9545 01b2 00       		.byte	0
 9546              		.section	.debug_aranges,"",%progbits
 9547 0000 64000000 		.4byte	0x64
 9548 0004 0200     		.2byte	0x2
 9549 0006 00000000 		.4byte	.Ldebug_info0
 9550 000a 04       		.byte	0x4
 9551 000b 00       		.byte	0
 9552 000c 0000     		.2byte	0
 9553 000e 0000     		.2byte	0
 9554 0010 00000000 		.4byte	.LFB56
 9555 0014 84010000 		.4byte	.LFE56-.LFB56
 9556 0018 00000000 		.4byte	.LFB57
 9557 001c C0000000 		.4byte	.LFE57-.LFB57
 9558 0020 00000000 		.4byte	.LFB58
 9559 0024 3E000000 		.4byte	.LFE58-.LFB58
 9560 0028 00000000 		.4byte	.LFB59
 9561 002c 36000000 		.4byte	.LFE59-.LFB59
 9562 0030 00000000 		.4byte	.LFB60
 9563 0034 24000000 		.4byte	.LFE60-.LFB60
 9564 0038 00000000 		.4byte	.LFB61
 9565 003c 6C040000 		.4byte	.LFE61-.LFB61
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 200


 9566 0040 00000000 		.4byte	.LFB62
 9567 0044 BC030000 		.4byte	.LFE62-.LFB62
 9568 0048 00000000 		.4byte	.LFB63
 9569 004c D81D0000 		.4byte	.LFE63-.LFB63
 9570 0050 00000000 		.4byte	.LFB64
 9571 0054 88060000 		.4byte	.LFE64-.LFB64
 9572 0058 00000000 		.4byte	.LFB65
 9573 005c 10030000 		.4byte	.LFE65-.LFB65
 9574 0060 00000000 		.4byte	0
 9575 0064 00000000 		.4byte	0
 9576              		.section	.debug_ranges,"",%progbits
 9577              	.Ldebug_ranges0:
 9578 0000 00000000 		.4byte	.LFB56
 9579 0004 84010000 		.4byte	.LFE56
 9580 0008 00000000 		.4byte	.LFB57
 9581 000c C0000000 		.4byte	.LFE57
 9582 0010 00000000 		.4byte	.LFB58
 9583 0014 3E000000 		.4byte	.LFE58
 9584 0018 00000000 		.4byte	.LFB59
 9585 001c 36000000 		.4byte	.LFE59
 9586 0020 00000000 		.4byte	.LFB60
 9587 0024 24000000 		.4byte	.LFE60
 9588 0028 00000000 		.4byte	.LFB61
 9589 002c 6C040000 		.4byte	.LFE61
 9590 0030 00000000 		.4byte	.LFB62
 9591 0034 BC030000 		.4byte	.LFE62
 9592 0038 00000000 		.4byte	.LFB63
 9593 003c D81D0000 		.4byte	.LFE63
 9594 0040 00000000 		.4byte	.LFB64
 9595 0044 88060000 		.4byte	.LFE64
 9596 0048 00000000 		.4byte	.LFB65
 9597 004c 10030000 		.4byte	.LFE65
 9598 0050 00000000 		.4byte	0
 9599 0054 00000000 		.4byte	0
 9600              		.section	.debug_line,"",%progbits
 9601              	.Ldebug_line0:
 9602 0000 AA0F0000 		.section	.debug_str,"MS",%progbits,1
 9602      02006C01 
 9602      00000201 
 9602      FB0E0D00 
 9602      01010101 
 9603              	.LASF42:
 9604 0000 70726F64 		.ascii	"product3\000"
 9604      75637433 
 9604      00
 9605              	.LASF95:
 9606 0009 64656369 		.ascii	"decimalVolume\000"
 9606      6D616C56 
 9606      6F6C756D 
 9606      6500
 9607              	.LASF33:
 9608 0017 73746174 		.ascii	"station\000"
 9608      696F6E00 
 9609              	.LASF31:
 9610 001f 62756666 		.ascii	"buffer\000"
 9610      657200
 9611              	.LASF36:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 201


 9612 0026 63697479 		.ascii	"city\000"
 9612      00
 9613              	.LASF79:
 9614 002b 69704164 		.ascii	"ipAdress\000"
 9614      72657373 
 9614      00
 9615              	.LASF94:
 9616 0034 64656369 		.ascii	"decimalMoney\000"
 9616      6D616C4D 
 9616      6F6E6579 
 9616      00
 9617              	.LASF8:
 9618 0041 756E7369 		.ascii	"unsigned int\000"
 9618      676E6564 
 9618      20696E74 
 9618      00
 9619              	.LASF50:
 9620 004e 65787465 		.ascii	"extend\000"
 9620      6E6400
 9621              	.LASF9:
 9622 0055 5F5F696E 		.ascii	"__int32_t\000"
 9622      7433325F 
 9622      7400
 9623              	.LASF56:
 9624 005f 6765745F 		.ascii	"get_position\000"
 9624      706F7369 
 9624      74696F6E 
 9624      00
 9625              	.LASF25:
 9626 006c 746F7461 		.ascii	"totalVolume1\000"
 9626      6C566F6C 
 9626      756D6531 
 9626      00
 9627              	.LASF26:
 9628 0079 746F7461 		.ascii	"totalVolume2\000"
 9628      6C566F6C 
 9628      756D6532 
 9628      00
 9629              	.LASF27:
 9630 0086 746F7461 		.ascii	"totalVolume3\000"
 9630      6C566F6C 
 9630      756D6533 
 9630      00
 9631              	.LASF76:
 9632 0093 666C6F77 		.ascii	"flowLCD1\000"
 9632      4C434431 
 9632      00
 9633              	.LASF70:
 9634 009c 64656369 		.ascii	"decimal\000"
 9634      6D616C00 
 9635              	.LASF67:
 9636 00a4 70726573 		.ascii	"preset\000"
 9636      657400
 9637              	.LASF59:
 9638 00ab 73746F70 		.ascii	"stop\000"
 9638      00
 9639              	.LASF46:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 202


 9640 00b0 766F6C75 		.ascii	"volume\000"
 9640      6D6500
 9641              	.LASF22:
 9642 00b7 746F7461 		.ascii	"totalMoney1\000"
 9642      6C4D6F6E 
 9642      65793100 
 9643              	.LASF13:
 9644 00c3 666C6F61 		.ascii	"float\000"
 9644      7400
 9645              	.LASF24:
 9646 00c9 746F7461 		.ascii	"totalMoney3\000"
 9646      6C4D6F6E 
 9646      65793300 
 9647              	.LASF99:
 9648 00d5 666C6F77 		.ascii	"flowLoopPump\000"
 9648      4C6F6F70 
 9648      50756D70 
 9648      00
 9649              	.LASF7:
 9650 00e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 9650      206C6F6E 
 9650      6720756E 
 9650      7369676E 
 9650      65642069 
 9651              	.LASF34:
 9652 00f9 70686F6E 		.ascii	"phone\000"
 9652      6500
 9653              	.LASF114:
 9654 00ff 2E5C5072 		.ascii	".\\Protocolo.c\000"
 9654      6F746F63 
 9654      6F6C6F2E 
 9654      6300
 9655              	.LASF105:
 9656 010d 76616C75 		.ascii	"valuePPU\000"
 9656      65505055 
 9656      00
 9657              	.LASF78:
 9658 0116 64696769 		.ascii	"digits\000"
 9658      747300
 9659              	.LASF88:
 9660 011d 74696D65 		.ascii	"time\000"
 9660      00
 9661              	.LASF100:
 9662 0122 666C6F77 		.ascii	"flowPump\000"
 9662      50756D70 
 9662      00
 9663              	.LASF66:
 9664 012b 76616C75 		.ascii	"value\000"
 9664      6500
 9665              	.LASF21:
 9666 0131 70726F64 		.ascii	"productType\000"
 9666      75637454 
 9666      79706500 
 9667              	.LASF85:
 9668 013d 70726F64 		.ascii	"productNumber\000"
 9668      7563744E 
 9668      756D6265 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 203


 9668      7200
 9669              	.LASF108:
 9670 014b 62756666 		.ascii	"bufferLCD1\000"
 9670      65724C43 
 9670      443100
 9671              	.LASF109:
 9672 0156 62756666 		.ascii	"bufferLCD2\000"
 9672      65724C43 
 9672      443200
 9673              	.LASF91:
 9674 0161 64617465 		.ascii	"dateSale1\000"
 9674      53616C65 
 9674      3100
 9675              	.LASF93:
 9676 016b 64617465 		.ascii	"dateSale2\000"
 9676      53616C65 
 9676      3200
 9677              	.LASF28:
 9678 0175 70707531 		.ascii	"ppu1\000"
 9678      00
 9679              	.LASF29:
 9680 017a 70707532 		.ascii	"ppu2\000"
 9680      00
 9681              	.LASF30:
 9682 017f 70707533 		.ascii	"ppu3\000"
 9682      00
 9683              	.LASF84:
 9684 0184 62757474 		.ascii	"button\000"
 9684      6F6E00
 9685              	.LASF112:
 9686 018b 6253616C 		.ascii	"bSale\000"
 9686      6500
 9687              	.LASF64:
 9688 0191 70726F67 		.ascii	"program\000"
 9688      72616D00 
 9689              	.LASF37:
 9690 0199 6D657373 		.ascii	"message1\000"
 9690      61676531 
 9690      00
 9691              	.LASF38:
 9692 01a2 6D657373 		.ascii	"message2\000"
 9692      61676532 
 9692      00
 9693              	.LASF54:
 9694 01ab 636F6D61 		.ascii	"comand_exten\000"
 9694      6E645F65 
 9694      7874656E 
 9694      00
 9695              	.LASF45:
 9696 01b8 6D6F6E65 		.ascii	"money\000"
 9696      7900
 9697              	.LASF20:
 9698 01be 70726573 		.ascii	"presetValue\000"
 9698      65745661 
 9698      6C756500 
 9699              	.LASF77:
 9700 01ca 666C6F77 		.ascii	"flowLCD2\000"
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 204


 9700      4C434432 
 9700      00
 9701              	.LASF18:
 9702 01d3 76616C75 		.ascii	"valueKeys\000"
 9702      654B6579 
 9702      7300
 9703              	.LASF16:
 9704 01dd 63686172 		.ascii	"char\000"
 9704      00
 9705              	.LASF80:
 9706 01e2 6E756D62 		.ascii	"numberKeys1\000"
 9706      65724B65 
 9706      79733100 
 9707              	.LASF81:
 9708 01ee 6E756D62 		.ascii	"numberKeys2\000"
 9708      65724B65 
 9708      79733200 
 9709              	.LASF40:
 9710 01fa 70726F64 		.ascii	"product1\000"
 9710      75637431 
 9710      00
 9711              	.LASF41:
 9712 0203 70726F64 		.ascii	"product2\000"
 9712      75637432 
 9712      00
 9713              	.LASF32:
 9714 020c 64617461 		.ascii	"data\000"
 9714      00
 9715              	.LASF43:
 9716 0211 70726F64 		.ascii	"product4\000"
 9716      75637434 
 9716      00
 9717              	.LASF89:
 9718 021a 64617465 		.ascii	"date\000"
 9718      00
 9719              	.LASF48:
 9720 021f 73616C65 		.ascii	"sale\000"
 9720      00
 9721              	.LASF72:
 9722 0224 50756D70 		.ascii	"Pump_AL_rxBuffer\000"
 9722      5F414C5F 
 9722      72784275 
 9722      66666572 
 9722      00
 9723              	.LASF86:
 9724 0235 70726573 		.ascii	"presetFast\000"
 9724      65744661 
 9724      737400
 9725              	.LASF6:
 9726 0240 6C6F6E67 		.ascii	"long long int\000"
 9726      206C6F6E 
 9726      6720696E 
 9726      7400
 9727              	.LASF63:
 9728 024e 6765745F 		.ascii	"get_total\000"
 9728      746F7461 
 9728      6C00
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 205


 9729              	.LASF111:
 9730 0258 73696465 		.ascii	"side\000"
 9730      00
 9731              	.LASF74:
 9732 025d 636F756E 		.ascii	"countAnimation1\000"
 9732      74416E69 
 9732      6D617469 
 9732      6F6E3100 
 9733              	.LASF75:
 9734 026d 636F756E 		.ascii	"countAnimation2\000"
 9734      74416E69 
 9734      6D617469 
 9734      6F6E3200 
 9735              	.LASF113:
 9736 027d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 9736      4320342E 
 9736      392E3320 
 9736      32303135 
 9736      30333033 
 9737 02b0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 9737      20726576 
 9737      6973696F 
 9737      6E203232 
 9737      31323230 
 9738 02e3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9738      66756E63 
 9738      74696F6E 
 9738      2D736563 
 9738      74696F6E 
 9739              	.LASF68:
 9740 030b 73697A65 		.ascii	"size\000"
 9740      00
 9741              	.LASF115:
 9742 0310 433A5C55 		.ascii	"C:\\Users\\Proyectos_Hardware\\Dropbox\\Proyecto Co"
 9742      73657273 
 9742      5C50726F 
 9742      79656374 
 9742      6F735F48 
 9743 033f 6E74726F 		.ascii	"ntroller\\Mux Advance Encore V1_00\\MuxAdvance.cyds"
 9743      6C6C6572 
 9743      5C4D7578 
 9743      20416476 
 9743      616E6365 
 9744 0370 6E00     		.ascii	"n\000"
 9745              	.LASF61:
 9746 0372 72785F73 		.ascii	"rx_sale\000"
 9746      616C6500 
 9747              	.LASF12:
 9748 037a 75696E74 		.ascii	"uint32\000"
 9748      333200
 9749              	.LASF60:
 9750 0381 73616C65 		.ascii	"sale_in\000"
 9750      5F696E00 
 9751              	.LASF58:
 9752 0389 6765745F 		.ascii	"get_error\000"
 9752      6572726F 
 9752      7200
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 206


 9753              	.LASF101:
 9754 0393 666C6167 		.ascii	"flagImp\000"
 9754      496D7000 
 9755              	.LASF87:
 9756 039b 70707578 		.ascii	"ppux10\000"
 9756      313000
 9757              	.LASF106:
 9758 03a2 636F756E 		.ascii	"countSale\000"
 9758      7453616C 
 9758      6500
 9759              	.LASF82:
 9760 03ac 666C6167 		.ascii	"flagPoint1\000"
 9760      506F696E 
 9760      743100
 9761              	.LASF83:
 9762 03b7 666C6167 		.ascii	"flagPoint2\000"
 9762      506F696E 
 9762      743200
 9763              	.LASF110:
 9764 03c2 7072696E 		.ascii	"print\000"
 9764      7400
 9765              	.LASF2:
 9766 03c8 73686F72 		.ascii	"short int\000"
 9766      7420696E 
 9766      7400
 9767              	.LASF4:
 9768 03d2 6C6F6E67 		.ascii	"long int\000"
 9768      20696E74 
 9768      00
 9769              	.LASF73:
 9770 03db 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9770      52784275 
 9770      66666572 
 9770      00
 9771              	.LASF69:
 9772 03e8 74656D70 		.ascii	"temp\000"
 9772      00
 9773              	.LASF15:
 9774 03ed 75696E74 		.ascii	"uint64\000"
 9774      363400
 9775              	.LASF23:
 9776 03f4 746F7461 		.ascii	"totalMoney2\000"
 9776      6C4D6F6E 
 9776      65793200 
 9777              	.LASF71:
 9778 0400 70726963 		.ascii	"price_change\000"
 9778      655F6368 
 9778      616E6765 
 9778      00
 9779              	.LASF17:
 9780 040d 73697A65 		.ascii	"sizetype\000"
 9780      74797065 
 9780      00
 9781              	.LASF5:
 9782 0416 6C6F6E67 		.ascii	"long unsigned int\000"
 9782      20756E73 
 9782      69676E65 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 207


 9782      6420696E 
 9782      7400
 9783              	.LASF35:
 9784 0428 61646472 		.ascii	"address\000"
 9784      65737300 
 9785              	.LASF10:
 9786 0430 696E7433 		.ascii	"int32_t\000"
 9786      325F7400 
 9787              	.LASF96:
 9788 0438 52785063 		.ascii	"RxPc\000"
 9788      00
 9789              	.LASF1:
 9790 043d 756E7369 		.ascii	"unsigned char\000"
 9790      676E6564 
 9790      20636861 
 9790      7200
 9791              	.LASF57:
 9792 044b 6765745F 		.ascii	"get_state\000"
 9792      73746174 
 9792      6500
 9793              	.LASF102:
 9794 0455 666C6167 		.ascii	"flagHandleUp\000"
 9794      48616E64 
 9794      6C655570 
 9794      00
 9795              	.LASF97:
 9796 0462 52785075 		.ascii	"RxPu\000"
 9796      00
 9797              	.LASF51:
 9798 0467 70756D70 		.ascii	"pump\000"
 9798      00
 9799              	.LASF55:
 9800 046c 73746174 		.ascii	"state_ex\000"
 9800      655F6578 
 9800      00
 9801              	.LASF49:
 9802 0475 73746174 		.ascii	"state\000"
 9802      6500
 9803              	.LASF19:
 9804 047b 70726573 		.ascii	"presetType\000"
 9804      65745479 
 9804      706500
 9805              	.LASF0:
 9806 0486 7369676E 		.ascii	"signed char\000"
 9806      65642063 
 9806      68617200 
 9807              	.LASF3:
 9808 0492 73686F72 		.ascii	"short unsigned int\000"
 9808      7420756E 
 9808      7369676E 
 9808      65642069 
 9808      6E7400
 9809              	.LASF103:
 9810 04a5 666C6167 		.ascii	"flagAuthorize\000"
 9810      41757468 
 9810      6F72697A 
 9810      6500
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccuck2D9.s 			page 208


 9811              	.LASF107:
 9812 04b3 636F756E 		.ascii	"countImp\000"
 9812      74496D70 
 9812      00
 9813              	.LASF62:
 9814 04bc 73696465 		.ascii	"sidePump\000"
 9814      50756D70 
 9814      00
 9815              	.LASF47:
 9816 04c5 746F7461 		.ascii	"total\000"
 9816      6C00
 9817              	.LASF11:
 9818 04cb 75696E74 		.ascii	"uint8\000"
 9818      3800
 9819              	.LASF14:
 9820 04d1 646F7562 		.ascii	"double\000"
 9820      6C6500
 9821              	.LASF44:
 9822 04d8 70726F64 		.ascii	"product\000"
 9822      75637400 
 9823              	.LASF53:
 9824 04e0 72785F65 		.ascii	"rx_extend\000"
 9824      7874656E 
 9824      6400
 9825              	.LASF52:
 9826 04ea 62696C6C 		.ascii	"bill\000"
 9826      00
 9827              	.LASF104:
 9828 04ef 666C6167 		.ascii	"flagSale\000"
 9828      53616C65 
 9828      00
 9829              	.LASF65:
 9830 04f8 67726164 		.ascii	"grade\000"
 9830      6500
 9831              	.LASF90:
 9832 04fe 74696D65 		.ascii	"timeSale1\000"
 9832      53616C65 
 9832      3100
 9833              	.LASF92:
 9834 0508 74696D65 		.ascii	"timeSale2\000"
 9834      53616C65 
 9834      3200
 9835              	.LASF39:
 9836 0512 706F7369 		.ascii	"position\000"
 9836      74696F6E 
 9836      00
 9837              	.LASF98:
 9838 051b 54785075 		.ascii	"TxPu\000"
 9838      00
 9839              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
