ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"protocol.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	countAnimation1,8,8
  19              		.comm	countAnimation2,8,8
  20              		.comm	countBeagleTX,8,8
  21              		.comm	flowLCD1,4,4
  22              		.comm	flowLCD2,4,4
  23              		.comm	digits,1,1
  24              		.comm	ipAdress,12,4
  25              		.comm	numberKeys1,1,1
  26              		.comm	numberKeys2,1,1
  27              		.comm	flagPoint1,1,1
  28              		.comm	flagPoint2,1,1
  29              		.comm	button,960,4
  30              		.comm	productNumber,1,1
  31              		.comm	presetFast,30,4
  32              		.comm	delayPicture1,4,4
  33              		.comm	delayPicture2,4,4
  34              		.comm	ppux10,1,1
  35              		.comm	decimalMoney,1,1
  36              		.comm	decimalVolume,1,1
  37              		.comm	symbols,2,4
  38              		.comm	time,3,4
  39              		.comm	date,3,4
  40              		.comm	screen,2,4
  41              		.comm	residue,14,4
  42              		.comm	temporal,30,4
  43              		.comm	turn,1,1
  44              		.comm	idSeller,25,4
  45              		.comm	typeIdSeller,1,1
  46              		.comm	passwordSeller,8,4
  47              		.comm	flagResetMux,1,1
  48              		.comm	bufferLCD1,635,4
  49              		.comm	bufferLCD2,635,4
  50              		.comm	side,512,4
  51              		.section	.text.get_state,"ax",%progbits
  52              		.align	2
  53              		.global	get_state
  54              		.thumb
  55              		.thumb_func
  56              		.type	get_state, %function
  57              	get_state:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 2


  58              	.LFB56:
  59              		.file 1 ".\\protocol.c"
   1:.\protocol.c  **** /*
   2:.\protocol.c  **** ***************************************************************************************************
   3:.\protocol.c  **** *                                         MUX ADVANCE CODE
   4:.\protocol.c  **** *
   5:.\protocol.c  **** *                             (c) Copyright 2016; Sistemas Insepet LTDA
   6:.\protocol.c  **** *
   7:.\protocol.c  **** *               All rights reserved.  Protected by international copyright laws.
   8:.\protocol.c  **** *               Knowledge of the source code may NOT be used to develop a similar product.
   9:.\protocol.c  **** *               Please help us continue to provide the Embedded community with the finest
  10:.\protocol.c  **** *               software available.  Your honesty is greatly appreciated.
  11:.\protocol.c  **** ***************************************************************************************************
  12:.\protocol.c  **** */
  13:.\protocol.c  **** 
  14:.\protocol.c  **** /*
  15:.\protocol.c  **** ***************************************************************************************************
  16:.\protocol.c  **** *
  17:.\protocol.c  **** *                                             MUX ADVANCE CODE
  18:.\protocol.c  **** *
  19:.\protocol.c  **** *                                             CYPRESS PSoC5LP
  20:.\protocol.c  **** *                                                with the
  21:.\protocol.c  **** *                                            CY8C5969AXI-LP035
  22:.\protocol.c  **** *
  23:.\protocol.c  **** * Filename      : protocol.c
  24:.\protocol.c  **** * Version       : V1.00
  25:.\protocol.c  **** * Programmer(s) : 
  26:.\protocol.c  ****                   
  27:.\protocol.c  **** ***************************************************************************************************
  28:.\protocol.c  **** */
  29:.\protocol.c  **** 
  30:.\protocol.c  **** 
  31:.\protocol.c  **** /*
  32:.\protocol.c  **** ***************************************************************************************************
  33:.\protocol.c  **** *                                             INCLUDE FILES
  34:.\protocol.c  **** ***************************************************************************************************
  35:.\protocol.c  **** */
  36:.\protocol.c  **** #include <device.h>
  37:.\protocol.c  **** #include <variables.h>
  38:.\protocol.c  **** 
  39:.\protocol.c  **** /*
  40:.\protocol.c  **** ***************************************************************************************************
  41:.\protocol.c  **** *                                    uint8 get_state(uint8 pos)
  42:.\protocol.c  **** *
  43:.\protocol.c  **** * Description : 
  44:.\protocol.c  **** *               
  45:.\protocol.c  **** *
  46:.\protocol.c  **** * Argument(s) : none
  47:.\protocol.c  **** *
  48:.\protocol.c  **** * Return(s)   : none
  49:.\protocol.c  **** *
  50:.\protocol.c  **** * Caller(s)   : 
  51:.\protocol.c  **** *
  52:.\protocol.c  **** * Note(s)     : none.
  53:.\protocol.c  **** ***************************************************************************************************
  54:.\protocol.c  **** */
  55:.\protocol.c  **** 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 3


  56:.\protocol.c  **** uint8 get_state(uint8 pos){
  60              		.loc 1 56 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 16
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 84B0     		sub	sp, sp, #16
  69              		.cfi_def_cfa_offset 24
  70 0004 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  72 0006 0346     		mov	r3, r0
  73 0008 FB71     		strb	r3, [r7, #7]
  57:.\protocol.c  ****     uint8 state;
  58:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
  74              		.loc 1 58 0
  75 000a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
  59:.\protocol.c  ****     Pump_AL_PutChar(pos);
  76              		.loc 1 59 0
  77 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  78 0010 1846     		mov	r0, r3
  79 0012 FFF7FEFF 		bl	Pump_AL_PutChar
  60:.\protocol.c  ****     CyDelay(65);
  80              		.loc 1 60 0
  81 0016 4120     		movs	r0, #65
  82 0018 FFF7FEFF 		bl	CyDelay
  61:.\protocol.c  ****     if(Pump_AL_GetRxBufferSize()>=1){
  83              		.loc 1 61 0
  84 001c FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
  85 0020 0346     		mov	r3, r0
  86 0022 002B     		cmp	r3, #0
  87 0024 08D0     		beq	.L2
  62:.\protocol.c  ****        state=(Pump_AL_ReadRxData()&0xF0)>>4;
  88              		.loc 1 62 0
  89 0026 FFF7FEFF 		bl	Pump_AL_ReadRxData
  90 002a 0346     		mov	r3, r0
  91 002c 1B09     		lsrs	r3, r3, #4
  92 002e FB73     		strb	r3, [r7, #15]
  63:.\protocol.c  ****        Pump_AL_ClearRxBuffer();
  93              		.loc 1 63 0
  94 0030 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
  64:.\protocol.c  ****        return state;
  95              		.loc 1 64 0
  96 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  97 0036 00E0     		b	.L3
  98              	.L2:
  65:.\protocol.c  ****     }
  66:.\protocol.c  ****     else{
  67:.\protocol.c  ****         return 0;
  99              		.loc 1 67 0
 100 0038 0023     		movs	r3, #0
 101              	.L3:
  68:.\protocol.c  ****     }
  69:.\protocol.c  **** }
 102              		.loc 1 69 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 4


 103 003a 1846     		mov	r0, r3
 104 003c 1037     		adds	r7, r7, #16
 105              		.cfi_def_cfa_offset 8
 106 003e BD46     		mov	sp, r7
 107              		.cfi_def_cfa_register 13
 108              		@ sp needed
 109 0040 80BD     		pop	{r7, pc}
 110              		.cfi_endproc
 111              	.LFE56:
 112              		.size	get_state, .-get_state
 113 0042 00BF     		.section	.text.get_position,"ax",%progbits
 114              		.align	2
 115              		.global	get_position
 116              		.thumb
 117              		.thumb_func
 118              		.type	get_position, %function
 119              	get_position:
 120              	.LFB57:
  70:.\protocol.c  **** 
  71:.\protocol.c  **** /*
  72:.\protocol.c  **** ***************************************************************************************************
  73:.\protocol.c  **** *                                         uint8 get_position(void)
  74:.\protocol.c  **** *
  75:.\protocol.c  **** * Description : 
  76:.\protocol.c  **** *               
  77:.\protocol.c  **** *
  78:.\protocol.c  **** * Argument(s) : none
  79:.\protocol.c  **** *
  80:.\protocol.c  **** * Return(s)   : none
  81:.\protocol.c  **** *
  82:.\protocol.c  **** * Caller(s)   : 
  83:.\protocol.c  **** *
  84:.\protocol.c  **** * Note(s)     : none.
  85:.\protocol.c  **** ***************************************************************************************************
  86:.\protocol.c  **** */
  87:.\protocol.c  **** uint8 get_position(void){
 121              		.loc 1 87 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
  88:.\protocol.c  ****     uint8 x;
  89:.\protocol.c  ****         
  90:.\protocol.c  ****     side.a.dir=0xff;
 133              		.loc 1 90 0
 134 0006 2B4B     		ldr	r3, .L13
 135 0008 FF22     		movs	r2, #255
 136 000a 1A70     		strb	r2, [r3]
  91:.\protocol.c  ****     side.b.dir=0xff;
 137              		.loc 1 91 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 5


 138 000c 294B     		ldr	r3, .L13
 139 000e FF22     		movs	r2, #255
 140 0010 83F80021 		strb	r2, [r3, #256]
  92:.\protocol.c  ****     for(x=1;x<=16;x++){
 141              		.loc 1 92 0
 142 0014 0123     		movs	r3, #1
 143 0016 FB71     		strb	r3, [r7, #7]
 144 0018 2DE0     		b	.L5
 145              	.L8:
  93:.\protocol.c  ****         Pump_AL_PutChar(x);
 146              		.loc 1 93 0
 147 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 148 001c 1846     		mov	r0, r3
 149 001e FFF7FEFF 		bl	Pump_AL_PutChar
  94:.\protocol.c  ****         CyDelay(100);
 150              		.loc 1 94 0
 151 0022 6420     		movs	r0, #100
 152 0024 FFF7FEFF 		bl	CyDelay
  95:.\protocol.c  ****         if((Pump_AL_GetRxBufferSize()>=1)&&(side.a.dir==0xff)){
 153              		.loc 1 95 0
 154 0028 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 155 002c 0346     		mov	r3, r0
 156 002e 002B     		cmp	r3, #0
 157 0030 0BD0     		beq	.L6
 158              		.loc 1 95 0 is_stmt 0 discriminator 1
 159 0032 204B     		ldr	r3, .L13
 160 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 161 0036 FF2B     		cmp	r3, #255
 162 0038 07D1     		bne	.L6
  96:.\protocol.c  ****            side.a.dir=x&0x0f;	
 163              		.loc 1 96 0 is_stmt 1
 164 003a FB79     		ldrb	r3, [r7, #7]
 165 003c 03F00F03 		and	r3, r3, #15
 166 0040 DAB2     		uxtb	r2, r3
 167 0042 1C4B     		ldr	r3, .L13
 168 0044 1A70     		strb	r2, [r3]
  97:.\protocol.c  ****            Pump_AL_ClearRxBuffer();
 169              		.loc 1 97 0
 170 0046 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 171              	.L6:
  98:.\protocol.c  ****         }
  99:.\protocol.c  ****         if((Pump_AL_GetRxBufferSize()>=1)&&(x!=side.a.dir)){
 172              		.loc 1 99 0
 173 004a FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 174 004e 0346     		mov	r3, r0
 175 0050 002B     		cmp	r3, #0
 176 0052 0DD0     		beq	.L7
 177              		.loc 1 99 0 is_stmt 0 discriminator 1
 178 0054 174B     		ldr	r3, .L13
 179 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 180 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 181 005a 9A42     		cmp	r2, r3
 182 005c 08D0     		beq	.L7
 100:.\protocol.c  ****            side.b.dir=x&0x0f;
 183              		.loc 1 100 0 is_stmt 1
 184 005e FB79     		ldrb	r3, [r7, #7]
 185 0060 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 6


 186 0064 DAB2     		uxtb	r2, r3
 187 0066 134B     		ldr	r3, .L13
 188 0068 83F80021 		strb	r2, [r3, #256]
 101:.\protocol.c  ****            Pump_AL_ClearRxBuffer();
 189              		.loc 1 101 0
 190 006c FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 191              	.L7:
  92:.\protocol.c  ****         Pump_AL_PutChar(x);
 192              		.loc 1 92 0 discriminator 2
 193 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 194 0072 0133     		adds	r3, r3, #1
 195 0074 FB71     		strb	r3, [r7, #7]
 196              	.L5:
  92:.\protocol.c  ****         Pump_AL_PutChar(x);
 197              		.loc 1 92 0 is_stmt 0 discriminator 1
 198 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 199 0078 102B     		cmp	r3, #16
 200 007a CED9     		bls	.L8
 102:.\protocol.c  ****         }
 103:.\protocol.c  ****     }
 104:.\protocol.c  ****     if((side.a.dir!=0xff)&&(side.b.dir!=0xff)){
 201              		.loc 1 104 0 is_stmt 1
 202 007c 0D4B     		ldr	r3, .L13
 203 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204 0080 FF2B     		cmp	r3, #255
 205 0082 06D0     		beq	.L9
 206              		.loc 1 104 0 is_stmt 0 discriminator 1
 207 0084 0B4B     		ldr	r3, .L13
 208 0086 93F80031 		ldrb	r3, [r3, #256]	@ zero_extendqisi2
 209 008a FF2B     		cmp	r3, #255
 210 008c 01D0     		beq	.L9
 105:.\protocol.c  ****         return 2;
 211              		.loc 1 105 0 is_stmt 1
 212 008e 0223     		movs	r3, #2
 213 0090 0BE0     		b	.L10
 214              	.L9:
 106:.\protocol.c  ****     }
 107:.\protocol.c  ****     else{
 108:.\protocol.c  ****         if((side.a.dir!=0xff)||(side.b.dir!=0xff)){
 215              		.loc 1 108 0
 216 0092 084B     		ldr	r3, .L13
 217 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0096 FF2B     		cmp	r3, #255
 219 0098 04D1     		bne	.L11
 220              		.loc 1 108 0 is_stmt 0 discriminator 1
 221 009a 064B     		ldr	r3, .L13
 222 009c 93F80031 		ldrb	r3, [r3, #256]	@ zero_extendqisi2
 223 00a0 FF2B     		cmp	r3, #255
 224 00a2 01D0     		beq	.L12
 225              	.L11:
 109:.\protocol.c  ****             return 1;
 226              		.loc 1 109 0 is_stmt 1
 227 00a4 0123     		movs	r3, #1
 228 00a6 00E0     		b	.L10
 229              	.L12:
 110:.\protocol.c  ****         }
 111:.\protocol.c  ****         else{
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 7


 112:.\protocol.c  ****             return 0;
 230              		.loc 1 112 0
 231 00a8 0023     		movs	r3, #0
 232              	.L10:
 113:.\protocol.c  ****         }
 114:.\protocol.c  ****     }
 115:.\protocol.c  **** }
 233              		.loc 1 115 0
 234 00aa 1846     		mov	r0, r3
 235 00ac 0837     		adds	r7, r7, #8
 236              		.cfi_def_cfa_offset 8
 237 00ae BD46     		mov	sp, r7
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 00b0 80BD     		pop	{r7, pc}
 241              	.L14:
 242 00b2 00BF     		.align	2
 243              	.L13:
 244 00b4 00000000 		.word	side
 245              		.cfi_endproc
 246              	.LFE57:
 247              		.size	get_position, .-get_position
 248              		.section	.rodata
 249              		.align	2
 250              	.LC0:
 251 0000 FF       		.byte	-1
 252 0001 E9       		.byte	-23
 253 0002 FE       		.byte	-2
 254 0003 E0       		.byte	-32
 255 0004 E1       		.byte	-31
 256 0005 E0       		.byte	-32
 257 0006 FB       		.byte	-5
 258 0007 EE       		.byte	-18
 259 0008 F0       		.byte	-16
 260              		.section	.text.get_handle,"ax",%progbits
 261              		.align	2
 262              		.global	get_handle
 263              		.thumb
 264              		.thumb_func
 265              		.type	get_handle, %function
 266              	get_handle:
 267              	.LFB58:
 116:.\protocol.c  **** 
 117:.\protocol.c  **** /*
 118:.\protocol.c  **** ***************************************************************************************************
 119:.\protocol.c  **** *                                    uint8 get_handle(uint8 pos)
 120:.\protocol.c  **** *
 121:.\protocol.c  **** * Description : 
 122:.\protocol.c  **** *               
 123:.\protocol.c  **** *
 124:.\protocol.c  **** * Argument(s) : none
 125:.\protocol.c  **** *
 126:.\protocol.c  **** * Return(s)   : none
 127:.\protocol.c  **** *
 128:.\protocol.c  **** * Caller(s)   : 
 129:.\protocol.c  **** *
 130:.\protocol.c  **** * Note(s)     : none.
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 8


 131:.\protocol.c  **** ***************************************************************************************************
 132:.\protocol.c  **** */
 133:.\protocol.c  **** 
 134:.\protocol.c  **** uint8 get_handle(uint8 pos){
 268              		.loc 1 134 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 40
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272 0000 90B5     		push	{r4, r7, lr}
 273              		.cfi_def_cfa_offset 12
 274              		.cfi_offset 4, -12
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 8BB0     		sub	sp, sp, #44
 278              		.cfi_def_cfa_offset 56
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 281 0006 0346     		mov	r3, r0
 282 0008 FB71     		strb	r3, [r7, #7]
 135:.\protocol.c  ****     uint8 buffer[19],command[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0},x;
 283              		.loc 1 135 0
 284 000a 434A     		ldr	r2, .L26
 285 000c 07F10803 		add	r3, r7, #8
 286 0010 1068     		ldr	r0, [r2]	@ unaligned
 287 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 288 0014 03C3     		stmia	r3!, {r0, r1}
 289 0016 127A     		ldrb	r2, [r2, #8]
 290 0018 1A70     		strb	r2, [r3]
 136:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
 291              		.loc 1 136 0
 292 001a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 137:.\protocol.c  ****     Pump_AL_PutChar(0x20|pos);
 293              		.loc 1 137 0
 294 001e FB79     		ldrb	r3, [r7, #7]
 295 0020 43F02003 		orr	r3, r3, #32
 296 0024 DBB2     		uxtb	r3, r3
 297 0026 1846     		mov	r0, r3
 298 0028 FFF7FEFF 		bl	Pump_AL_PutChar
 138:.\protocol.c  ****     CyDelay(100);
 299              		.loc 1 138 0
 300 002c 6420     		movs	r0, #100
 301 002e FFF7FEFF 		bl	CyDelay
 139:.\protocol.c  ****     if(Pump_AL_GetRxBufferSize()>=1){
 302              		.loc 1 139 0
 303 0032 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 304 0036 0346     		mov	r3, r0
 305 0038 002B     		cmp	r3, #0
 306 003a 67D0     		beq	.L16
 140:.\protocol.c  ****         if(Pump_AL_ReadRxData()==(0xD0|pos)){
 307              		.loc 1 140 0
 308 003c FFF7FEFF 		bl	Pump_AL_ReadRxData
 309 0040 0346     		mov	r3, r0
 310 0042 1A46     		mov	r2, r3
 311 0044 FB79     		ldrb	r3, [r7, #7]
 312 0046 63F02F03 		orn	r3, r3, #47
 313 004a DBB2     		uxtb	r3, r3
 314 004c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 9


 315 004e 5BD1     		bne	.L17
 141:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 316              		.loc 1 141 0
 317 0050 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 142:.\protocol.c  ****             for(x=0;x<9;x++){
 318              		.loc 1 142 0
 319 0054 0023     		movs	r3, #0
 320 0056 87F82730 		strb	r3, [r7, #39]
 321 005a 0EE0     		b	.L18
 322              	.L19:
 143:.\protocol.c  ****                Pump_AL_PutChar(command[x]);
 323              		.loc 1 143 0 discriminator 3
 324 005c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 325 0060 07F12802 		add	r2, r7, #40
 326 0064 1344     		add	r3, r3, r2
 327 0066 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 328 006a 1846     		mov	r0, r3
 329 006c FFF7FEFF 		bl	Pump_AL_PutChar
 142:.\protocol.c  ****             for(x=0;x<9;x++){
 330              		.loc 1 142 0 discriminator 3
 331 0070 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 332 0074 0133     		adds	r3, r3, #1
 333 0076 87F82730 		strb	r3, [r7, #39]
 334              	.L18:
 142:.\protocol.c  ****             for(x=0;x<9;x++){
 335              		.loc 1 142 0 is_stmt 0 discriminator 1
 336 007a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 337 007e 082B     		cmp	r3, #8
 338 0080 ECD9     		bls	.L19
 144:.\protocol.c  ****             }
 145:.\protocol.c  ****             CyDelay(200);
 339              		.loc 1 145 0 is_stmt 1
 340 0082 C820     		movs	r0, #200
 341 0084 FFF7FEFF 		bl	CyDelay
 146:.\protocol.c  ****             if(Pump_AL_GetRxBufferSize()>=19){
 342              		.loc 1 146 0
 343 0088 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 344 008c 0346     		mov	r3, r0
 345 008e 122B     		cmp	r3, #18
 346 0090 38D9     		bls	.L20
 147:.\protocol.c  ****                 for(x=0;x<=18;x++){
 347              		.loc 1 147 0
 348 0092 0023     		movs	r3, #0
 349 0094 87F82730 		strb	r3, [r7, #39]
 350 0098 0FE0     		b	.L21
 351              	.L22:
 148:.\protocol.c  ****                    buffer[x]=Pump_AL_ReadRxData(); 
 352              		.loc 1 148 0 discriminator 3
 353 009a 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 354 009e FFF7FEFF 		bl	Pump_AL_ReadRxData
 355 00a2 0346     		mov	r3, r0
 356 00a4 1A46     		mov	r2, r3
 357 00a6 07F12803 		add	r3, r7, #40
 358 00aa 2344     		add	r3, r3, r4
 359 00ac 03F8142C 		strb	r2, [r3, #-20]
 147:.\protocol.c  ****                 for(x=0;x<=18;x++){
 360              		.loc 1 147 0 discriminator 3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 10


 361 00b0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 362 00b4 0133     		adds	r3, r3, #1
 363 00b6 87F82730 		strb	r3, [r7, #39]
 364              	.L21:
 147:.\protocol.c  ****                 for(x=0;x<=18;x++){
 365              		.loc 1 147 0 is_stmt 0 discriminator 1
 366 00ba 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 367 00be 122B     		cmp	r3, #18
 368 00c0 EBD9     		bls	.L22
 149:.\protocol.c  ****                 }
 150:.\protocol.c  ****                 Pump_AL_ClearRxBuffer();
 369              		.loc 1 150 0 is_stmt 1
 370 00c2 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 151:.\protocol.c  ****                 if((buffer[0]==0xBA)&&(buffer[17]==0x8D)&&(buffer[18]==0x8A)&&(buffer[12]==0xB1)&&(
 371              		.loc 1 151 0
 372 00c6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 373 00c8 BA2B     		cmp	r3, #186
 374 00ca 19D1     		bne	.L23
 375              		.loc 1 151 0 is_stmt 0 discriminator 1
 376 00cc 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 377 00d0 8D2B     		cmp	r3, #141
 378 00d2 15D1     		bne	.L23
 379              		.loc 1 151 0 discriminator 2
 380 00d4 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 381 00d8 8A2B     		cmp	r3, #138
 382 00da 11D1     		bne	.L23
 383              		.loc 1 151 0 discriminator 3
 384 00dc 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 385 00e0 B12B     		cmp	r3, #177
 386 00e2 0DD1     		bne	.L23
 387              		.loc 1 151 0 discriminator 4
 388 00e4 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 389 00e8 B02B     		cmp	r3, #176
 390 00ea 09D9     		bls	.L23
 391              		.loc 1 151 0 discriminator 5
 392 00ec 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 393 00f0 B42B     		cmp	r3, #180
 394 00f2 05D8     		bhi	.L23
 152:.\protocol.c  ****                     return buffer[14]&0x07;
 395              		.loc 1 152 0 is_stmt 1
 396 00f4 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 397 00f8 03F00703 		and	r3, r3, #7
 398 00fc DBB2     		uxtb	r3, r3
 399 00fe 06E0     		b	.L25
 400              	.L23:
 153:.\protocol.c  ****                 }
 154:.\protocol.c  ****                 else{
 155:.\protocol.c  ****                     return 0;
 401              		.loc 1 155 0
 402 0100 0023     		movs	r3, #0
 403 0102 04E0     		b	.L25
 404              	.L20:
 156:.\protocol.c  ****                 }
 157:.\protocol.c  ****             }
 158:.\protocol.c  ****             else{
 159:.\protocol.c  ****                 return 0;
 405              		.loc 1 159 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 11


 406 0104 0023     		movs	r3, #0
 407 0106 02E0     		b	.L25
 408              	.L17:
 160:.\protocol.c  ****             }
 161:.\protocol.c  ****         }
 162:.\protocol.c  ****         else{
 163:.\protocol.c  ****             return 0;
 409              		.loc 1 163 0
 410 0108 0023     		movs	r3, #0
 411 010a 00E0     		b	.L25
 412              	.L16:
 164:.\protocol.c  ****         }
 165:.\protocol.c  ****     }
 166:.\protocol.c  ****     else{
 167:.\protocol.c  ****         return 0;
 413              		.loc 1 167 0
 414 010c 0023     		movs	r3, #0
 415              	.L25:
 168:.\protocol.c  ****     }
 169:.\protocol.c  **** }
 416              		.loc 1 169 0 discriminator 1
 417 010e 1846     		mov	r0, r3
 418 0110 2C37     		adds	r7, r7, #44
 419              		.cfi_def_cfa_offset 12
 420 0112 BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 0114 90BD     		pop	{r4, r7, pc}
 424              	.L27:
 425 0116 00BF     		.align	2
 426              	.L26:
 427 0118 00000000 		.word	.LC0
 428              		.cfi_endproc
 429              	.LFE58:
 430              		.size	get_handle, .-get_handle
 431              		.section	.text.get_totals,"ax",%progbits
 432              		.align	2
 433              		.global	get_totals
 434              		.thumb
 435              		.thumb_func
 436              		.type	get_totals, %function
 437              	get_totals:
 438              	.LFB59:
 170:.\protocol.c  **** 
 171:.\protocol.c  **** /*
 172:.\protocol.c  **** ***************************************************************************************************
 173:.\protocol.c  **** *                                    uint8 get_totals(uint8 pos)
 174:.\protocol.c  **** *
 175:.\protocol.c  **** * Description : 
 176:.\protocol.c  **** *               
 177:.\protocol.c  **** *
 178:.\protocol.c  **** * Argument(s) : none
 179:.\protocol.c  **** *
 180:.\protocol.c  **** * Return(s)   : none
 181:.\protocol.c  **** *
 182:.\protocol.c  **** * Caller(s)   : 
 183:.\protocol.c  **** *
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 12


 184:.\protocol.c  **** * Note(s)     : none.
 185:.\protocol.c  **** ***************************************************************************************************
 186:.\protocol.c  **** */
 187:.\protocol.c  **** 
 188:.\protocol.c  **** uint8 get_totals(uint8 pos){
 439              		.loc 1 188 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 B0B5     		push	{r4, r5, r7, lr}
 444              		.cfi_def_cfa_offset 16
 445              		.cfi_offset 4, -16
 446              		.cfi_offset 5, -12
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 84B0     		sub	sp, sp, #16
 450              		.cfi_def_cfa_offset 32
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 0346     		mov	r3, r0
 454 0008 FB71     		strb	r3, [r7, #7]
 189:.\protocol.c  ****     uint8 x,y,z,w,gradeHandle;
 190:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
 455              		.loc 1 190 0
 456 000a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 191:.\protocol.c  ****     Pump_AL_PutChar(0x50|pos);
 457              		.loc 1 191 0
 458 000e FB79     		ldrb	r3, [r7, #7]
 459 0010 43F05003 		orr	r3, r3, #80
 460 0014 DBB2     		uxtb	r3, r3
 461 0016 1846     		mov	r0, r3
 462 0018 FFF7FEFF 		bl	Pump_AL_PutChar
 192:.\protocol.c  ****     CyWdtClear();
 463              		.loc 1 192 0
 464 001c FFF7FEFF 		bl	CyWdtClear
 193:.\protocol.c  ****     CyDelay(900);
 465              		.loc 1 193 0
 466 0020 4FF46170 		mov	r0, #900
 467 0024 FFF7FEFF 		bl	CyDelay
 194:.\protocol.c  ****     CyWdtClear();
 468              		.loc 1 194 0
 469 0028 FFF7FEFF 		bl	CyWdtClear
 195:.\protocol.c  ****     x=Pump_AL_GetRxBufferSize();
 470              		.loc 1 195 0
 471 002c FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 472 0030 0346     		mov	r3, r0
 473 0032 FB73     		strb	r3, [r7, #15]
 196:.\protocol.c  ****     if((x==34)||(x==64)||(x==94)||(x==124)){//Version 5 ó 6 digitos
 474              		.loc 1 196 0
 475 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 476 0036 222B     		cmp	r3, #34
 477 0038 09D0     		beq	.L29
 478              		.loc 1 196 0 is_stmt 0 discriminator 1
 479 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 480 003c 402B     		cmp	r3, #64
 481 003e 06D0     		beq	.L29
 482              		.loc 1 196 0 discriminator 2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 13


 483 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 484 0042 5E2B     		cmp	r3, #94
 485 0044 03D0     		beq	.L29
 486              		.loc 1 196 0 discriminator 3
 487 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 488 0048 7C2B     		cmp	r3, #124
 489 004a 40F0EE81 		bne	.L30
 490              	.L29:
 197:.\protocol.c  ****         if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[3]==0xF9)){
 491              		.loc 1 197 0 is_stmt 1
 492 004e B94B     		ldr	r3, .L104
 493 0050 1B78     		ldrb	r3, [r3]
 494 0052 DBB2     		uxtb	r3, r3
 495 0054 FF2B     		cmp	r3, #255
 496 0056 40F0E481 		bne	.L31
 497              		.loc 1 197 0 is_stmt 0 discriminator 1
 498 005a B64B     		ldr	r3, .L104
 499 005c 5B78     		ldrb	r3, [r3, #1]
 500 005e DBB2     		uxtb	r3, r3
 501 0060 F62B     		cmp	r3, #246
 502 0062 40F0DE81 		bne	.L31
 503              		.loc 1 197 0 discriminator 2
 504 0066 B34B     		ldr	r3, .L104
 505 0068 DB78     		ldrb	r3, [r3, #3]
 506 006a DBB2     		uxtb	r3, r3
 507 006c F92B     		cmp	r3, #249
 508 006e 40F0D881 		bne	.L31
 198:.\protocol.c  ****             gradeHandle=(x/30)&0x07;//Identificando cantidad de mangueras en el surtidor
 509              		.loc 1 198 0 is_stmt 1
 510 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 511 0074 B04A     		ldr	r2, .L104+4
 512 0076 A2FB0323 		umull	r2, r3, r2, r3
 513 007a 1B09     		lsrs	r3, r3, #4
 514 007c DBB2     		uxtb	r3, r3
 515 007e 03F00703 		and	r3, r3, #7
 516 0082 FB72     		strb	r3, [r7, #11]
 199:.\protocol.c  ****             if(pos==side.a.dir){
 517              		.loc 1 199 0
 518 0084 AD4B     		ldr	r3, .L104+8
 519 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 520 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 521 008a 9A42     		cmp	r2, r3
 522 008c 40F0DA80 		bne	.L32
 200:.\protocol.c  ****                 for(x=0;x<4;x++){
 523              		.loc 1 200 0
 524 0090 0023     		movs	r3, #0
 525 0092 FB73     		strb	r3, [r7, #15]
 526 0094 25E0     		b	.L33
 527              	.L38:
 201:.\protocol.c  ****                     for(y=0;y<3;y++){
 528              		.loc 1 201 0
 529 0096 0023     		movs	r3, #0
 530 0098 BB73     		strb	r3, [r7, #14]
 531 009a 1CE0     		b	.L34
 532              	.L37:
 202:.\protocol.c  ****                         for(z=0;z<14;z++){
 533              		.loc 1 202 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 14


 534 009c 0023     		movs	r3, #0
 535 009e 7B73     		strb	r3, [r7, #13]
 536 00a0 13E0     		b	.L35
 537              	.L36:
 203:.\protocol.c  ****                             side.a.totalsHandle[x][y][z]=0;
 538              		.loc 1 203 0 discriminator 3
 539 00a2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 540 00a4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 541 00a6 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 542 00a8 A44C     		ldr	r4, .L104+8
 543 00aa 1A46     		mov	r2, r3
 544 00ac 1201     		lsls	r2, r2, #4
 545 00ae D21A     		subs	r2, r2, r3
 546 00b0 0B46     		mov	r3, r1
 547 00b2 5B00     		lsls	r3, r3, #1
 548 00b4 0B44     		add	r3, r3, r1
 549 00b6 1901     		lsls	r1, r3, #4
 550 00b8 C91A     		subs	r1, r1, r3
 551 00ba 5318     		adds	r3, r2, r1
 552 00bc 2344     		add	r3, r3, r4
 553 00be 0344     		add	r3, r3, r0
 554 00c0 0022     		movs	r2, #0
 555 00c2 5A70     		strb	r2, [r3, #1]
 202:.\protocol.c  ****                         for(z=0;z<14;z++){
 556              		.loc 1 202 0 discriminator 3
 557 00c4 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 558 00c6 0133     		adds	r3, r3, #1
 559 00c8 7B73     		strb	r3, [r7, #13]
 560              	.L35:
 202:.\protocol.c  ****                         for(z=0;z<14;z++){
 561              		.loc 1 202 0 is_stmt 0 discriminator 1
 562 00ca 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 563 00cc 0D2B     		cmp	r3, #13
 564 00ce E8D9     		bls	.L36
 201:.\protocol.c  ****                     for(y=0;y<3;y++){
 565              		.loc 1 201 0 is_stmt 1 discriminator 2
 566 00d0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 567 00d2 0133     		adds	r3, r3, #1
 568 00d4 BB73     		strb	r3, [r7, #14]
 569              	.L34:
 201:.\protocol.c  ****                     for(y=0;y<3;y++){
 570              		.loc 1 201 0 is_stmt 0 discriminator 1
 571 00d6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 572 00d8 022B     		cmp	r3, #2
 573 00da DFD9     		bls	.L37
 200:.\protocol.c  ****                     for(y=0;y<3;y++){
 574              		.loc 1 200 0 is_stmt 1 discriminator 2
 575 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 576 00de 0133     		adds	r3, r3, #1
 577 00e0 FB73     		strb	r3, [r7, #15]
 578              	.L33:
 200:.\protocol.c  ****                     for(y=0;y<3;y++){
 579              		.loc 1 200 0 is_stmt 0 discriminator 1
 580 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 581 00e4 032B     		cmp	r3, #3
 582 00e6 D6D9     		bls	.L38
 204:.\protocol.c  ****                         }
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 15


 205:.\protocol.c  ****                     }
 206:.\protocol.c  ****                 }
 207:.\protocol.c  ****                 w=0;
 583              		.loc 1 207 0 is_stmt 1
 584 00e8 0023     		movs	r3, #0
 585 00ea 3B73     		strb	r3, [r7, #12]
 208:.\protocol.c  ****                 for(x=0;x<gradeHandle;x++){
 586              		.loc 1 208 0
 587 00ec 0023     		movs	r3, #0
 588 00ee FB73     		strb	r3, [r7, #15]
 589 00f0 9FE0     		b	.L39
 590              	.L49:
 209:.\protocol.c  ****                     for(y=0;y<=2;y++){
 591              		.loc 1 209 0
 592 00f2 0023     		movs	r3, #0
 593 00f4 BB73     		strb	r3, [r7, #14]
 594 00f6 35E0     		b	.L40
 595              	.L45:
 210:.\protocol.c  ****                         for(z=1;z<=8;z++){
 596              		.loc 1 210 0
 597 00f8 0123     		movs	r3, #1
 598 00fa 7B73     		strb	r3, [r7, #13]
 599 00fc 29E0     		b	.L41
 600              	.L44:
 211:.\protocol.c  ****                             side.a.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 601              		.loc 1 211 0
 602 00fe F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 603 0100 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 604 0102 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 605 0104 C2F10900 		rsb	r0, r2, #9
 606 0108 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 607 010a 0432     		adds	r2, r2, #4
 608 010c 894C     		ldr	r4, .L104
 609 010e A25C     		ldrb	r2, [r4, r2]
 610 0110 D2B2     		uxtb	r2, r2
 611 0112 02F00F02 		and	r2, r2, #15
 612 0116 D2B2     		uxtb	r2, r2
 613 0118 3032     		adds	r2, r2, #48
 614 011a D5B2     		uxtb	r5, r2
 615 011c 874C     		ldr	r4, .L104+8
 616 011e 1A46     		mov	r2, r3
 617 0120 1201     		lsls	r2, r2, #4
 618 0122 D21A     		subs	r2, r2, r3
 619 0124 0B46     		mov	r3, r1
 620 0126 5B00     		lsls	r3, r3, #1
 621 0128 0B44     		add	r3, r3, r1
 622 012a 1901     		lsls	r1, r3, #4
 623 012c C91A     		subs	r1, r1, r3
 624 012e 5318     		adds	r3, r2, r1
 625 0130 2344     		add	r3, r3, r4
 626 0132 0344     		add	r3, r3, r0
 627 0134 2A46     		mov	r2, r5
 628 0136 5A70     		strb	r2, [r3, #1]
 212:.\protocol.c  ****                             w++;
 629              		.loc 1 212 0
 630 0138 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 631 013a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 16


 632 013c 3B73     		strb	r3, [r7, #12]
 213:.\protocol.c  ****                             if((y==2)&&(z==4)){
 633              		.loc 1 213 0
 634 013e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 635 0140 022B     		cmp	r3, #2
 636 0142 03D1     		bne	.L42
 637              		.loc 1 213 0 is_stmt 0 discriminator 1
 638 0144 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 639 0146 042B     		cmp	r3, #4
 640 0148 00D1     		bne	.L42
 214:.\protocol.c  ****                                 break;
 641              		.loc 1 214 0 is_stmt 1
 642 014a 05E0     		b	.L43
 643              	.L42:
 210:.\protocol.c  ****                             side.a.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 644              		.loc 1 210 0 discriminator 2
 645 014c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 646 014e 0133     		adds	r3, r3, #1
 647 0150 7B73     		strb	r3, [r7, #13]
 648              	.L41:
 210:.\protocol.c  ****                             side.a.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 649              		.loc 1 210 0 is_stmt 0 discriminator 1
 650 0152 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 651 0154 082B     		cmp	r3, #8
 652 0156 D2D9     		bls	.L44
 653              	.L43:
 215:.\protocol.c  ****                             }
 216:.\protocol.c  ****                         }
 217:.\protocol.c  ****                         w++;
 654              		.loc 1 217 0 is_stmt 1 discriminator 2
 655 0158 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 656 015a 0133     		adds	r3, r3, #1
 657 015c 3B73     		strb	r3, [r7, #12]
 209:.\protocol.c  ****                         for(z=1;z<=8;z++){
 658              		.loc 1 209 0 discriminator 2
 659 015e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 660 0160 0133     		adds	r3, r3, #1
 661 0162 BB73     		strb	r3, [r7, #14]
 662              	.L40:
 209:.\protocol.c  ****                         for(z=1;z<=8;z++){
 663              		.loc 1 209 0 is_stmt 0 discriminator 1
 664 0164 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 665 0166 022B     		cmp	r3, #2
 666 0168 C6D9     		bls	.L45
 218:.\protocol.c  ****                     }
 219:.\protocol.c  ****                     w=w+7;
 667              		.loc 1 219 0 is_stmt 1
 668 016a 3B7B     		ldrb	r3, [r7, #12]
 669 016c 0733     		adds	r3, r3, #7
 670 016e 3B73     		strb	r3, [r7, #12]
 220:.\protocol.c  ****                     for(z=4;z>=1;z--){
 671              		.loc 1 220 0
 672 0170 0423     		movs	r3, #4
 673 0172 7B73     		strb	r3, [r7, #13]
 674 0174 1CE0     		b	.L46
 675              	.L47:
 221:.\protocol.c  ****                         side.a.totalsHandle[x][2][z]=side.a.totalsHandle[x][2][z+4];
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 17


 676              		.loc 1 221 0 discriminator 3
 677 0176 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 678 0178 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 679 017a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 680 017c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 681 017e 1C1D     		adds	r4, r3, #4
 682 0180 6E4D     		ldr	r5, .L104+8
 683 0182 1346     		mov	r3, r2
 684 0184 5B00     		lsls	r3, r3, #1
 685 0186 1344     		add	r3, r3, r2
 686 0188 1A01     		lsls	r2, r3, #4
 687 018a D21A     		subs	r2, r2, r3
 688 018c AB18     		adds	r3, r5, r2
 689 018e 2344     		add	r3, r3, r4
 690 0190 1E33     		adds	r3, r3, #30
 691 0192 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 692 0194 694C     		ldr	r4, .L104+8
 693 0196 0B46     		mov	r3, r1
 694 0198 5B00     		lsls	r3, r3, #1
 695 019a 0B44     		add	r3, r3, r1
 696 019c 1A01     		lsls	r2, r3, #4
 697 019e D21A     		subs	r2, r2, r3
 698 01a0 A318     		adds	r3, r4, r2
 699 01a2 0344     		add	r3, r3, r0
 700 01a4 1E33     		adds	r3, r3, #30
 701 01a6 2A46     		mov	r2, r5
 702 01a8 5A70     		strb	r2, [r3, #1]
 220:.\protocol.c  ****                     for(z=4;z>=1;z--){
 703              		.loc 1 220 0 discriminator 3
 704 01aa 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 705 01ac 013B     		subs	r3, r3, #1
 706 01ae 7B73     		strb	r3, [r7, #13]
 707              	.L46:
 220:.\protocol.c  ****                     for(z=4;z>=1;z--){
 708              		.loc 1 220 0 is_stmt 0 discriminator 1
 709 01b0 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 710 01b2 002B     		cmp	r3, #0
 711 01b4 DFD1     		bne	.L47
 222:.\protocol.c  ****                     }
 223:.\protocol.c  ****                     side.a.totalsHandle[x][0][0]=8;
 712              		.loc 1 223 0 is_stmt 1
 713 01b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 714 01b8 6049     		ldr	r1, .L104+8
 715 01ba 1346     		mov	r3, r2
 716 01bc 5B00     		lsls	r3, r3, #1
 717 01be 1344     		add	r3, r3, r2
 718 01c0 1A01     		lsls	r2, r3, #4
 719 01c2 D21A     		subs	r2, r2, r3
 720 01c4 8B18     		adds	r3, r1, r2
 721 01c6 0822     		movs	r2, #8
 722 01c8 5A70     		strb	r2, [r3, #1]
 224:.\protocol.c  ****                     side.a.totalsHandle[x][1][0]=8;
 723              		.loc 1 224 0
 724 01ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 725 01cc 5B49     		ldr	r1, .L104+8
 726 01ce 1346     		mov	r3, r2
 727 01d0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 18


 728 01d2 1344     		add	r3, r3, r2
 729 01d4 1A01     		lsls	r2, r3, #4
 730 01d6 D21A     		subs	r2, r2, r3
 731 01d8 8B18     		adds	r3, r1, r2
 732 01da 0F33     		adds	r3, r3, #15
 733 01dc 0822     		movs	r2, #8
 734 01de 5A70     		strb	r2, [r3, #1]
 225:.\protocol.c  ****                     side.a.totalsHandle[x][2][0]=4;
 735              		.loc 1 225 0
 736 01e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 737 01e2 5649     		ldr	r1, .L104+8
 738 01e4 1346     		mov	r3, r2
 739 01e6 5B00     		lsls	r3, r3, #1
 740 01e8 1344     		add	r3, r3, r2
 741 01ea 1A01     		lsls	r2, r3, #4
 742 01ec D21A     		subs	r2, r2, r3
 743 01ee 8B18     		adds	r3, r1, r2
 744 01f0 1E33     		adds	r3, r3, #30
 745 01f2 0422     		movs	r2, #4
 746 01f4 5A70     		strb	r2, [r3, #1]
 226:.\protocol.c  ****                     if(ppux10==1){
 747              		.loc 1 226 0
 748 01f6 524B     		ldr	r3, .L104+12
 749 01f8 1B78     		ldrb	r3, [r3]
 750 01fa DBB2     		uxtb	r3, r3
 751 01fc 012B     		cmp	r3, #1
 752 01fe 15D1     		bne	.L48
 227:.\protocol.c  ****                         side.a.totalsHandle[x][2][0]=5;
 753              		.loc 1 227 0
 754 0200 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 755 0202 4E49     		ldr	r1, .L104+8
 756 0204 1346     		mov	r3, r2
 757 0206 5B00     		lsls	r3, r3, #1
 758 0208 1344     		add	r3, r3, r2
 759 020a 1A01     		lsls	r2, r3, #4
 760 020c D21A     		subs	r2, r2, r3
 761 020e 8B18     		adds	r3, r1, r2
 762 0210 1E33     		adds	r3, r3, #30
 763 0212 0522     		movs	r2, #5
 764 0214 5A70     		strb	r2, [r3, #1]
 228:.\protocol.c  ****                         side.a.totalsHandle[x][2][5]='0';
 765              		.loc 1 228 0
 766 0216 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 767 0218 4849     		ldr	r1, .L104+8
 768 021a 1346     		mov	r3, r2
 769 021c 5B00     		lsls	r3, r3, #1
 770 021e 1344     		add	r3, r3, r2
 771 0220 1A01     		lsls	r2, r3, #4
 772 0222 D21A     		subs	r2, r2, r3
 773 0224 8B18     		adds	r3, r1, r2
 774 0226 2333     		adds	r3, r3, #35
 775 0228 3022     		movs	r2, #48
 776 022a 5A70     		strb	r2, [r3, #1]
 777              	.L48:
 208:.\protocol.c  ****                     for(y=0;y<=2;y++){
 778              		.loc 1 208 0 discriminator 2
 779 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 19


 780 022e 0133     		adds	r3, r3, #1
 781 0230 FB73     		strb	r3, [r7, #15]
 782              	.L39:
 208:.\protocol.c  ****                     for(y=0;y<=2;y++){
 783              		.loc 1 208 0 is_stmt 0 discriminator 1
 784 0232 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 785 0234 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 786 0236 9A42     		cmp	r2, r3
 787 0238 FFF45BAF 		bcc	.L49
 229:.\protocol.c  ****                     }
 230:.\protocol.c  ****                 }
 231:.\protocol.c  ****                 Pump_AL_ClearRxBuffer();
 788              		.loc 1 231 0 is_stmt 1
 789 023c FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 232:.\protocol.c  ****                 return gradeHandle;
 790              		.loc 1 232 0
 791 0240 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 792 0242 B8E2     		b	.L50
 793              	.L32:
 233:.\protocol.c  ****             }else{
 234:.\protocol.c  ****                 for(x=0;x<4;x++){
 794              		.loc 1 234 0
 795 0244 0023     		movs	r3, #0
 796 0246 FB73     		strb	r3, [r7, #15]
 797 0248 27E0     		b	.L51
 798              	.L56:
 235:.\protocol.c  ****                     for(y=0;y<3;y++){
 799              		.loc 1 235 0
 800 024a 0023     		movs	r3, #0
 801 024c BB73     		strb	r3, [r7, #14]
 802 024e 1EE0     		b	.L52
 803              	.L55:
 236:.\protocol.c  ****                         for(z=0;z<14;z++){
 804              		.loc 1 236 0
 805 0250 0023     		movs	r3, #0
 806 0252 7B73     		strb	r3, [r7, #13]
 807 0254 15E0     		b	.L53
 808              	.L54:
 237:.\protocol.c  ****                             side.b.totalsHandle[x][y][z]=0;
 809              		.loc 1 237 0 discriminator 3
 810 0256 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 811 0258 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 812 025a 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 813 025c 374C     		ldr	r4, .L104+8
 814 025e 1A46     		mov	r2, r3
 815 0260 1201     		lsls	r2, r2, #4
 816 0262 D21A     		subs	r2, r2, r3
 817 0264 0B46     		mov	r3, r1
 818 0266 5B00     		lsls	r3, r3, #1
 819 0268 0B44     		add	r3, r3, r1
 820 026a 1901     		lsls	r1, r3, #4
 821 026c C91A     		subs	r1, r1, r3
 822 026e 5318     		adds	r3, r2, r1
 823 0270 2344     		add	r3, r3, r4
 824 0272 0344     		add	r3, r3, r0
 825 0274 03F58073 		add	r3, r3, #256
 826 0278 0022     		movs	r2, #0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 20


 827 027a 5A70     		strb	r2, [r3, #1]
 236:.\protocol.c  ****                         for(z=0;z<14;z++){
 828              		.loc 1 236 0 discriminator 3
 829 027c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 830 027e 0133     		adds	r3, r3, #1
 831 0280 7B73     		strb	r3, [r7, #13]
 832              	.L53:
 236:.\protocol.c  ****                         for(z=0;z<14;z++){
 833              		.loc 1 236 0 is_stmt 0 discriminator 1
 834 0282 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 835 0284 0D2B     		cmp	r3, #13
 836 0286 E6D9     		bls	.L54
 235:.\protocol.c  ****                     for(y=0;y<3;y++){
 837              		.loc 1 235 0 is_stmt 1 discriminator 2
 838 0288 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 839 028a 0133     		adds	r3, r3, #1
 840 028c BB73     		strb	r3, [r7, #14]
 841              	.L52:
 235:.\protocol.c  ****                     for(y=0;y<3;y++){
 842              		.loc 1 235 0 is_stmt 0 discriminator 1
 843 028e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 844 0290 022B     		cmp	r3, #2
 845 0292 DDD9     		bls	.L55
 234:.\protocol.c  ****                     for(y=0;y<3;y++){
 846              		.loc 1 234 0 is_stmt 1 discriminator 2
 847 0294 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 848 0296 0133     		adds	r3, r3, #1
 849 0298 FB73     		strb	r3, [r7, #15]
 850              	.L51:
 234:.\protocol.c  ****                     for(y=0;y<3;y++){
 851              		.loc 1 234 0 is_stmt 0 discriminator 1
 852 029a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 853 029c 032B     		cmp	r3, #3
 854 029e D4D9     		bls	.L56
 238:.\protocol.c  ****                         }
 239:.\protocol.c  ****                     }
 240:.\protocol.c  ****                 }
 241:.\protocol.c  ****                 w=0;
 855              		.loc 1 241 0 is_stmt 1
 856 02a0 0023     		movs	r3, #0
 857 02a2 3B73     		strb	r3, [r7, #12]
 242:.\protocol.c  ****                 for(x=0;x<gradeHandle;x++){
 858              		.loc 1 242 0
 859 02a4 0023     		movs	r3, #0
 860 02a6 FB73     		strb	r3, [r7, #15]
 861 02a8 B2E0     		b	.L57
 862              	.L67:
 243:.\protocol.c  ****                     for(y=0;y<=2;y++){
 863              		.loc 1 243 0
 864 02aa 0023     		movs	r3, #0
 865 02ac BB73     		strb	r3, [r7, #14]
 866 02ae 37E0     		b	.L58
 867              	.L63:
 244:.\protocol.c  ****                         for(z=1;z<=8;z++){
 868              		.loc 1 244 0
 869 02b0 0123     		movs	r3, #1
 870 02b2 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 21


 871 02b4 2BE0     		b	.L59
 872              	.L62:
 245:.\protocol.c  ****                             side.b.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 873              		.loc 1 245 0
 874 02b6 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 875 02b8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 876 02ba 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 877 02bc C2F10900 		rsb	r0, r2, #9
 878 02c0 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 879 02c2 0432     		adds	r2, r2, #4
 880 02c4 1B4C     		ldr	r4, .L104
 881 02c6 A25C     		ldrb	r2, [r4, r2]
 882 02c8 D2B2     		uxtb	r2, r2
 883 02ca 02F00F02 		and	r2, r2, #15
 884 02ce D2B2     		uxtb	r2, r2
 885 02d0 3032     		adds	r2, r2, #48
 886 02d2 D5B2     		uxtb	r5, r2
 887 02d4 194C     		ldr	r4, .L104+8
 888 02d6 1A46     		mov	r2, r3
 889 02d8 1201     		lsls	r2, r2, #4
 890 02da D21A     		subs	r2, r2, r3
 891 02dc 0B46     		mov	r3, r1
 892 02de 5B00     		lsls	r3, r3, #1
 893 02e0 0B44     		add	r3, r3, r1
 894 02e2 1901     		lsls	r1, r3, #4
 895 02e4 C91A     		subs	r1, r1, r3
 896 02e6 5318     		adds	r3, r2, r1
 897 02e8 2344     		add	r3, r3, r4
 898 02ea 0344     		add	r3, r3, r0
 899 02ec 03F58073 		add	r3, r3, #256
 900 02f0 2A46     		mov	r2, r5
 901 02f2 5A70     		strb	r2, [r3, #1]
 246:.\protocol.c  ****                             w++;
 902              		.loc 1 246 0
 903 02f4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 904 02f6 0133     		adds	r3, r3, #1
 905 02f8 3B73     		strb	r3, [r7, #12]
 247:.\protocol.c  ****                             if((y==2)&&(z==4)){
 906              		.loc 1 247 0
 907 02fa BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 908 02fc 022B     		cmp	r3, #2
 909 02fe 03D1     		bne	.L60
 910              		.loc 1 247 0 is_stmt 0 discriminator 1
 911 0300 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 912 0302 042B     		cmp	r3, #4
 913 0304 00D1     		bne	.L60
 248:.\protocol.c  ****                                 break;
 914              		.loc 1 248 0 is_stmt 1
 915 0306 05E0     		b	.L61
 916              	.L60:
 244:.\protocol.c  ****                             side.b.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 917              		.loc 1 244 0 discriminator 2
 918 0308 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 919 030a 0133     		adds	r3, r3, #1
 920 030c 7B73     		strb	r3, [r7, #13]
 921              	.L59:
 244:.\protocol.c  ****                             side.b.totalsHandle[x][y][9-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 22


 922              		.loc 1 244 0 is_stmt 0 discriminator 1
 923 030e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 924 0310 082B     		cmp	r3, #8
 925 0312 D0D9     		bls	.L62
 926              	.L61:
 249:.\protocol.c  ****                             }
 250:.\protocol.c  ****                         }
 251:.\protocol.c  ****                         w++;
 927              		.loc 1 251 0 is_stmt 1 discriminator 2
 928 0314 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 929 0316 0133     		adds	r3, r3, #1
 930 0318 3B73     		strb	r3, [r7, #12]
 243:.\protocol.c  ****                         for(z=1;z<=8;z++){
 931              		.loc 1 243 0 discriminator 2
 932 031a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 933 031c 0133     		adds	r3, r3, #1
 934 031e BB73     		strb	r3, [r7, #14]
 935              	.L58:
 243:.\protocol.c  ****                         for(z=1;z<=8;z++){
 936              		.loc 1 243 0 is_stmt 0 discriminator 1
 937 0320 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 938 0322 022B     		cmp	r3, #2
 939 0324 C4D9     		bls	.L63
 252:.\protocol.c  ****                     }
 253:.\protocol.c  ****                     w=w+7;
 940              		.loc 1 253 0 is_stmt 1
 941 0326 3B7B     		ldrb	r3, [r7, #12]
 942 0328 0733     		adds	r3, r3, #7
 943 032a 3B73     		strb	r3, [r7, #12]
 254:.\protocol.c  ****                     for(z=4;z>=1;z--){
 944              		.loc 1 254 0
 945 032c 0423     		movs	r3, #4
 946 032e 7B73     		strb	r3, [r7, #13]
 947 0330 27E0     		b	.L64
 948              	.L105:
 949 0332 00BF     		.align	2
 950              	.L104:
 951 0334 00000000 		.word	Pump_AL_rxBuffer
 952 0338 89888888 		.word	-2004318071
 953 033c 00000000 		.word	side
 954 0340 00000000 		.word	ppux10
 955              	.L65:
 255:.\protocol.c  ****                         side.b.totalsHandle[x][2][z]=side.b.totalsHandle[x][2][z+4];
 956              		.loc 1 255 0 discriminator 3
 957 0344 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 958 0346 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 959 0348 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 960 034a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 961 034c 1C1D     		adds	r4, r3, #4
 962 034e B24D     		ldr	r5, .L106
 963 0350 1346     		mov	r3, r2
 964 0352 5B00     		lsls	r3, r3, #1
 965 0354 1344     		add	r3, r3, r2
 966 0356 1A01     		lsls	r2, r3, #4
 967 0358 D21A     		subs	r2, r2, r3
 968 035a AB18     		adds	r3, r5, r2
 969 035c 2344     		add	r3, r3, r4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 23


 970 035e 03F58F73 		add	r3, r3, #286
 971 0362 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 972 0364 AC4C     		ldr	r4, .L106
 973 0366 0B46     		mov	r3, r1
 974 0368 5B00     		lsls	r3, r3, #1
 975 036a 0B44     		add	r3, r3, r1
 976 036c 1A01     		lsls	r2, r3, #4
 977 036e D21A     		subs	r2, r2, r3
 978 0370 A318     		adds	r3, r4, r2
 979 0372 0344     		add	r3, r3, r0
 980 0374 03F58F73 		add	r3, r3, #286
 981 0378 2A46     		mov	r2, r5
 982 037a 5A70     		strb	r2, [r3, #1]
 254:.\protocol.c  ****                     for(z=4;z>=1;z--){
 983              		.loc 1 254 0 discriminator 3
 984 037c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 985 037e 013B     		subs	r3, r3, #1
 986 0380 7B73     		strb	r3, [r7, #13]
 987              	.L64:
 254:.\protocol.c  ****                     for(z=4;z>=1;z--){
 988              		.loc 1 254 0 is_stmt 0 discriminator 1
 989 0382 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 990 0384 002B     		cmp	r3, #0
 991 0386 DDD1     		bne	.L65
 256:.\protocol.c  ****                     }
 257:.\protocol.c  ****                     side.b.totalsHandle[x][0][0]=8;
 992              		.loc 1 257 0 is_stmt 1
 993 0388 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 994 038a A349     		ldr	r1, .L106
 995 038c 1346     		mov	r3, r2
 996 038e 5B00     		lsls	r3, r3, #1
 997 0390 1344     		add	r3, r3, r2
 998 0392 1A01     		lsls	r2, r3, #4
 999 0394 D21A     		subs	r2, r2, r3
 1000 0396 8B18     		adds	r3, r1, r2
 1001 0398 03F58073 		add	r3, r3, #256
 1002 039c 0822     		movs	r2, #8
 1003 039e 5A70     		strb	r2, [r3, #1]
 258:.\protocol.c  ****                     side.b.totalsHandle[x][1][0]=8;
 1004              		.loc 1 258 0
 1005 03a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1006 03a2 9D49     		ldr	r1, .L106
 1007 03a4 1346     		mov	r3, r2
 1008 03a6 5B00     		lsls	r3, r3, #1
 1009 03a8 1344     		add	r3, r3, r2
 1010 03aa 1A01     		lsls	r2, r3, #4
 1011 03ac D21A     		subs	r2, r2, r3
 1012 03ae 8B18     		adds	r3, r1, r2
 1013 03b0 03F20F13 		addw	r3, r3, #271
 1014 03b4 0822     		movs	r2, #8
 1015 03b6 5A70     		strb	r2, [r3, #1]
 259:.\protocol.c  ****                     side.b.totalsHandle[x][2][0]=4;
 1016              		.loc 1 259 0
 1017 03b8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1018 03ba 9749     		ldr	r1, .L106
 1019 03bc 1346     		mov	r3, r2
 1020 03be 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 24


 1021 03c0 1344     		add	r3, r3, r2
 1022 03c2 1A01     		lsls	r2, r3, #4
 1023 03c4 D21A     		subs	r2, r2, r3
 1024 03c6 8B18     		adds	r3, r1, r2
 1025 03c8 03F58F73 		add	r3, r3, #286
 1026 03cc 0422     		movs	r2, #4
 1027 03ce 5A70     		strb	r2, [r3, #1]
 260:.\protocol.c  ****                     if(ppux10==1){
 1028              		.loc 1 260 0
 1029 03d0 924B     		ldr	r3, .L106+4
 1030 03d2 1B78     		ldrb	r3, [r3]
 1031 03d4 DBB2     		uxtb	r3, r3
 1032 03d6 012B     		cmp	r3, #1
 1033 03d8 17D1     		bne	.L66
 261:.\protocol.c  ****                         side.b.totalsHandle[x][2][0]=5;
 1034              		.loc 1 261 0
 1035 03da FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1036 03dc 8E49     		ldr	r1, .L106
 1037 03de 1346     		mov	r3, r2
 1038 03e0 5B00     		lsls	r3, r3, #1
 1039 03e2 1344     		add	r3, r3, r2
 1040 03e4 1A01     		lsls	r2, r3, #4
 1041 03e6 D21A     		subs	r2, r2, r3
 1042 03e8 8B18     		adds	r3, r1, r2
 1043 03ea 03F58F73 		add	r3, r3, #286
 1044 03ee 0522     		movs	r2, #5
 1045 03f0 5A70     		strb	r2, [r3, #1]
 262:.\protocol.c  ****                         side.b.totalsHandle[x][2][5]='0';
 1046              		.loc 1 262 0
 1047 03f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1048 03f4 8849     		ldr	r1, .L106
 1049 03f6 1346     		mov	r3, r2
 1050 03f8 5B00     		lsls	r3, r3, #1
 1051 03fa 1344     		add	r3, r3, r2
 1052 03fc 1A01     		lsls	r2, r3, #4
 1053 03fe D21A     		subs	r2, r2, r3
 1054 0400 8B18     		adds	r3, r1, r2
 1055 0402 03F22313 		addw	r3, r3, #291
 1056 0406 3022     		movs	r2, #48
 1057 0408 5A70     		strb	r2, [r3, #1]
 1058              	.L66:
 242:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1059              		.loc 1 242 0 discriminator 2
 1060 040a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 040c 0133     		adds	r3, r3, #1
 1062 040e FB73     		strb	r3, [r7, #15]
 1063              	.L57:
 242:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1064              		.loc 1 242 0 is_stmt 0 discriminator 1
 1065 0410 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1066 0412 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1067 0414 9A42     		cmp	r2, r3
 1068 0416 FFF448AF 		bcc	.L67
 263:.\protocol.c  ****                     }
 264:.\protocol.c  ****                 }
 265:.\protocol.c  ****                 Pump_AL_ClearRxBuffer();
 1069              		.loc 1 265 0 is_stmt 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 25


 1070 041a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 266:.\protocol.c  ****                 return gradeHandle;
 1071              		.loc 1 266 0
 1072 041e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1073 0420 C9E1     		b	.L50
 1074              	.L31:
 267:.\protocol.c  ****             }
 268:.\protocol.c  ****         }else{
 269:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 1075              		.loc 1 269 0
 1076 0422 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 270:.\protocol.c  ****             return 0;
 1077              		.loc 1 270 0
 1078 0426 0023     		movs	r3, #0
 1079 0428 C5E1     		b	.L50
 1080              	.L30:
 271:.\protocol.c  ****         }
 272:.\protocol.c  ****     }else if((x==46)||(x==88)||(x==130)||(x==172)){//Version 7 digitos
 1081              		.loc 1 272 0
 1082 042a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1083 042c 2E2B     		cmp	r3, #46
 1084 042e 09D0     		beq	.L68
 1085              		.loc 1 272 0 is_stmt 0 discriminator 1
 1086 0430 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1087 0432 582B     		cmp	r3, #88
 1088 0434 06D0     		beq	.L68
 1089              		.loc 1 272 0 discriminator 2
 1090 0436 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1091 0438 822B     		cmp	r3, #130
 1092 043a 03D0     		beq	.L68
 1093              		.loc 1 272 0 discriminator 3
 1094 043c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1095 043e AC2B     		cmp	r3, #172
 1096 0440 40F0B681 		bne	.L69
 1097              	.L68:
 273:.\protocol.c  ****         if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[1]==0xF6)&&(Pump_AL_rxBuffer[3]==0xF9)){
 1098              		.loc 1 273 0 is_stmt 1
 1099 0444 764B     		ldr	r3, .L106+8
 1100 0446 1B78     		ldrb	r3, [r3]
 1101 0448 DBB2     		uxtb	r3, r3
 1102 044a FF2B     		cmp	r3, #255
 1103 044c 40F0AC81 		bne	.L70
 1104              		.loc 1 273 0 is_stmt 0 discriminator 1
 1105 0450 734B     		ldr	r3, .L106+8
 1106 0452 5B78     		ldrb	r3, [r3, #1]
 1107 0454 DBB2     		uxtb	r3, r3
 1108 0456 F62B     		cmp	r3, #246
 1109 0458 40F0A681 		bne	.L70
 1110              		.loc 1 273 0 discriminator 2
 1111 045c 704B     		ldr	r3, .L106+8
 1112 045e DB78     		ldrb	r3, [r3, #3]
 1113 0460 DBB2     		uxtb	r3, r3
 1114 0462 F92B     		cmp	r3, #249
 1115 0464 40F0A081 		bne	.L70
 274:.\protocol.c  ****             gradeHandle=(x/40)&0x07;//Identificando cantidad de mangueras en el surtidor
 1116              		.loc 1 274 0 is_stmt 1
 1117 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 26


 1118 046a 6E4A     		ldr	r2, .L106+12
 1119 046c A2FB0323 		umull	r2, r3, r2, r3
 1120 0470 5B09     		lsrs	r3, r3, #5
 1121 0472 DBB2     		uxtb	r3, r3
 1122 0474 03F00703 		and	r3, r3, #7
 1123 0478 FB72     		strb	r3, [r7, #11]
 275:.\protocol.c  ****             if(pos==side.a.dir){
 1124              		.loc 1 275 0
 1125 047a 674B     		ldr	r3, .L106
 1126 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 047e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1128 0480 9A42     		cmp	r2, r3
 1129 0482 40F0BF80 		bne	.L71
 276:.\protocol.c  ****                 for(x=0;x<4;x++){
 1130              		.loc 1 276 0
 1131 0486 0023     		movs	r3, #0
 1132 0488 FB73     		strb	r3, [r7, #15]
 1133 048a 25E0     		b	.L72
 1134              	.L77:
 277:.\protocol.c  ****                     for(y=0;y<3;y++){
 1135              		.loc 1 277 0
 1136 048c 0023     		movs	r3, #0
 1137 048e BB73     		strb	r3, [r7, #14]
 1138 0490 1CE0     		b	.L73
 1139              	.L76:
 278:.\protocol.c  ****                         for(z=0;z<14;z++){
 1140              		.loc 1 278 0
 1141 0492 0023     		movs	r3, #0
 1142 0494 7B73     		strb	r3, [r7, #13]
 1143 0496 13E0     		b	.L74
 1144              	.L75:
 279:.\protocol.c  ****                             side.a.totalsHandle[x][y][z]=0;
 1145              		.loc 1 279 0 discriminator 3
 1146 0498 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1147 049a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1148 049c 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 1149 049e 5E4C     		ldr	r4, .L106
 1150 04a0 1A46     		mov	r2, r3
 1151 04a2 1201     		lsls	r2, r2, #4
 1152 04a4 D21A     		subs	r2, r2, r3
 1153 04a6 0B46     		mov	r3, r1
 1154 04a8 5B00     		lsls	r3, r3, #1
 1155 04aa 0B44     		add	r3, r3, r1
 1156 04ac 1901     		lsls	r1, r3, #4
 1157 04ae C91A     		subs	r1, r1, r3
 1158 04b0 5318     		adds	r3, r2, r1
 1159 04b2 2344     		add	r3, r3, r4
 1160 04b4 0344     		add	r3, r3, r0
 1161 04b6 0022     		movs	r2, #0
 1162 04b8 5A70     		strb	r2, [r3, #1]
 278:.\protocol.c  ****                         for(z=0;z<14;z++){
 1163              		.loc 1 278 0 discriminator 3
 1164 04ba 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1165 04bc 0133     		adds	r3, r3, #1
 1166 04be 7B73     		strb	r3, [r7, #13]
 1167              	.L74:
 278:.\protocol.c  ****                         for(z=0;z<14;z++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 27


 1168              		.loc 1 278 0 is_stmt 0 discriminator 1
 1169 04c0 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1170 04c2 0D2B     		cmp	r3, #13
 1171 04c4 E8D9     		bls	.L75
 277:.\protocol.c  ****                     for(y=0;y<3;y++){
 1172              		.loc 1 277 0 is_stmt 1 discriminator 2
 1173 04c6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1174 04c8 0133     		adds	r3, r3, #1
 1175 04ca BB73     		strb	r3, [r7, #14]
 1176              	.L73:
 277:.\protocol.c  ****                     for(y=0;y<3;y++){
 1177              		.loc 1 277 0 is_stmt 0 discriminator 1
 1178 04cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1179 04ce 022B     		cmp	r3, #2
 1180 04d0 DFD9     		bls	.L76
 276:.\protocol.c  ****                     for(y=0;y<3;y++){
 1181              		.loc 1 276 0 is_stmt 1 discriminator 2
 1182 04d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1183 04d4 0133     		adds	r3, r3, #1
 1184 04d6 FB73     		strb	r3, [r7, #15]
 1185              	.L72:
 276:.\protocol.c  ****                     for(y=0;y<3;y++){
 1186              		.loc 1 276 0 is_stmt 0 discriminator 1
 1187 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1188 04da 032B     		cmp	r3, #3
 1189 04dc D6D9     		bls	.L77
 280:.\protocol.c  ****                         }
 281:.\protocol.c  ****                     }
 282:.\protocol.c  ****                 }
 283:.\protocol.c  ****                 w=0;
 1190              		.loc 1 283 0 is_stmt 1
 1191 04de 0023     		movs	r3, #0
 1192 04e0 3B73     		strb	r3, [r7, #12]
 284:.\protocol.c  ****                 for(x=0;x<gradeHandle;x++){
 1193              		.loc 1 284 0
 1194 04e2 0023     		movs	r3, #0
 1195 04e4 FB73     		strb	r3, [r7, #15]
 1196 04e6 84E0     		b	.L78
 1197              	.L87:
 285:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1198              		.loc 1 285 0
 1199 04e8 0023     		movs	r3, #0
 1200 04ea BB73     		strb	r3, [r7, #14]
 1201 04ec 35E0     		b	.L79
 1202              	.L84:
 286:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1203              		.loc 1 286 0
 1204 04ee 0123     		movs	r3, #1
 1205 04f0 7B73     		strb	r3, [r7, #13]
 1206 04f2 29E0     		b	.L80
 1207              	.L83:
 287:.\protocol.c  ****                             side.a.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1208              		.loc 1 287 0
 1209 04f4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1210 04f6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1211 04f8 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1212 04fa C2F10D00 		rsb	r0, r2, #13
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 28


 1213 04fe 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1214 0500 0432     		adds	r2, r2, #4
 1215 0502 474C     		ldr	r4, .L106+8
 1216 0504 A25C     		ldrb	r2, [r4, r2]
 1217 0506 D2B2     		uxtb	r2, r2
 1218 0508 02F00F02 		and	r2, r2, #15
 1219 050c D2B2     		uxtb	r2, r2
 1220 050e 3032     		adds	r2, r2, #48
 1221 0510 D5B2     		uxtb	r5, r2
 1222 0512 414C     		ldr	r4, .L106
 1223 0514 1A46     		mov	r2, r3
 1224 0516 1201     		lsls	r2, r2, #4
 1225 0518 D21A     		subs	r2, r2, r3
 1226 051a 0B46     		mov	r3, r1
 1227 051c 5B00     		lsls	r3, r3, #1
 1228 051e 0B44     		add	r3, r3, r1
 1229 0520 1901     		lsls	r1, r3, #4
 1230 0522 C91A     		subs	r1, r1, r3
 1231 0524 5318     		adds	r3, r2, r1
 1232 0526 2344     		add	r3, r3, r4
 1233 0528 0344     		add	r3, r3, r0
 1234 052a 2A46     		mov	r2, r5
 1235 052c 5A70     		strb	r2, [r3, #1]
 288:.\protocol.c  ****                             w++;
 1236              		.loc 1 288 0
 1237 052e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1238 0530 0133     		adds	r3, r3, #1
 1239 0532 3B73     		strb	r3, [r7, #12]
 289:.\protocol.c  ****                             if((y==2)&&(z==6)){
 1240              		.loc 1 289 0
 1241 0534 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1242 0536 022B     		cmp	r3, #2
 1243 0538 03D1     		bne	.L81
 1244              		.loc 1 289 0 is_stmt 0 discriminator 1
 1245 053a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1246 053c 062B     		cmp	r3, #6
 1247 053e 00D1     		bne	.L81
 290:.\protocol.c  ****                                 break;
 1248              		.loc 1 290 0 is_stmt 1
 1249 0540 05E0     		b	.L82
 1250              	.L81:
 286:.\protocol.c  ****                             side.a.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1251              		.loc 1 286 0 discriminator 2
 1252 0542 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1253 0544 0133     		adds	r3, r3, #1
 1254 0546 7B73     		strb	r3, [r7, #13]
 1255              	.L80:
 286:.\protocol.c  ****                             side.a.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1256              		.loc 1 286 0 is_stmt 0 discriminator 1
 1257 0548 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1258 054a 0C2B     		cmp	r3, #12
 1259 054c D2D9     		bls	.L83
 1260              	.L82:
 291:.\protocol.c  ****                             }
 292:.\protocol.c  ****                         }
 293:.\protocol.c  ****                         w++;
 1261              		.loc 1 293 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 29


 1262 054e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1263 0550 0133     		adds	r3, r3, #1
 1264 0552 3B73     		strb	r3, [r7, #12]
 285:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1265              		.loc 1 285 0 discriminator 2
 1266 0554 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1267 0556 0133     		adds	r3, r3, #1
 1268 0558 BB73     		strb	r3, [r7, #14]
 1269              	.L79:
 285:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1270              		.loc 1 285 0 is_stmt 0 discriminator 1
 1271 055a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1272 055c 022B     		cmp	r3, #2
 1273 055e C6D9     		bls	.L84
 294:.\protocol.c  ****                     }
 295:.\protocol.c  ****                     w=w+9;
 1274              		.loc 1 295 0 is_stmt 1
 1275 0560 3B7B     		ldrb	r3, [r7, #12]
 1276 0562 0933     		adds	r3, r3, #9
 1277 0564 3B73     		strb	r3, [r7, #12]
 296:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1278              		.loc 1 296 0
 1279 0566 0623     		movs	r3, #6
 1280 0568 7B73     		strb	r3, [r7, #13]
 1281 056a 1CE0     		b	.L85
 1282              	.L86:
 297:.\protocol.c  ****                         side.a.totalsHandle[x][2][z]=side.a.totalsHandle[x][2][z+6];
 1283              		.loc 1 297 0 discriminator 3
 1284 056c F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1285 056e 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 1286 0570 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1287 0572 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1288 0574 9C1D     		adds	r4, r3, #6
 1289 0576 284D     		ldr	r5, .L106
 1290 0578 1346     		mov	r3, r2
 1291 057a 5B00     		lsls	r3, r3, #1
 1292 057c 1344     		add	r3, r3, r2
 1293 057e 1A01     		lsls	r2, r3, #4
 1294 0580 D21A     		subs	r2, r2, r3
 1295 0582 AB18     		adds	r3, r5, r2
 1296 0584 2344     		add	r3, r3, r4
 1297 0586 1E33     		adds	r3, r3, #30
 1298 0588 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 1299 058a 234C     		ldr	r4, .L106
 1300 058c 0B46     		mov	r3, r1
 1301 058e 5B00     		lsls	r3, r3, #1
 1302 0590 0B44     		add	r3, r3, r1
 1303 0592 1A01     		lsls	r2, r3, #4
 1304 0594 D21A     		subs	r2, r2, r3
 1305 0596 A318     		adds	r3, r4, r2
 1306 0598 0344     		add	r3, r3, r0
 1307 059a 1E33     		adds	r3, r3, #30
 1308 059c 2A46     		mov	r2, r5
 1309 059e 5A70     		strb	r2, [r3, #1]
 296:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1310              		.loc 1 296 0 discriminator 3
 1311 05a0 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 30


 1312 05a2 013B     		subs	r3, r3, #1
 1313 05a4 7B73     		strb	r3, [r7, #13]
 1314              	.L85:
 296:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1315              		.loc 1 296 0 is_stmt 0 discriminator 1
 1316 05a6 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1317 05a8 002B     		cmp	r3, #0
 1318 05aa DFD1     		bne	.L86
 298:.\protocol.c  ****                     }
 299:.\protocol.c  ****                     side.a.totalsHandle[x][0][0]=12;
 1319              		.loc 1 299 0 is_stmt 1 discriminator 2
 1320 05ac FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1321 05ae 1A49     		ldr	r1, .L106
 1322 05b0 1346     		mov	r3, r2
 1323 05b2 5B00     		lsls	r3, r3, #1
 1324 05b4 1344     		add	r3, r3, r2
 1325 05b6 1A01     		lsls	r2, r3, #4
 1326 05b8 D21A     		subs	r2, r2, r3
 1327 05ba 8B18     		adds	r3, r1, r2
 1328 05bc 0C22     		movs	r2, #12
 1329 05be 5A70     		strb	r2, [r3, #1]
 300:.\protocol.c  ****                     side.a.totalsHandle[x][1][0]=12;
 1330              		.loc 1 300 0 discriminator 2
 1331 05c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1332 05c2 1549     		ldr	r1, .L106
 1333 05c4 1346     		mov	r3, r2
 1334 05c6 5B00     		lsls	r3, r3, #1
 1335 05c8 1344     		add	r3, r3, r2
 1336 05ca 1A01     		lsls	r2, r3, #4
 1337 05cc D21A     		subs	r2, r2, r3
 1338 05ce 8B18     		adds	r3, r1, r2
 1339 05d0 0F33     		adds	r3, r3, #15
 1340 05d2 0C22     		movs	r2, #12
 1341 05d4 5A70     		strb	r2, [r3, #1]
 301:.\protocol.c  ****                     side.a.totalsHandle[x][2][0]=6;
 1342              		.loc 1 301 0 discriminator 2
 1343 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1344 05d8 0F49     		ldr	r1, .L106
 1345 05da 1346     		mov	r3, r2
 1346 05dc 5B00     		lsls	r3, r3, #1
 1347 05de 1344     		add	r3, r3, r2
 1348 05e0 1A01     		lsls	r2, r3, #4
 1349 05e2 D21A     		subs	r2, r2, r3
 1350 05e4 8B18     		adds	r3, r1, r2
 1351 05e6 1E33     		adds	r3, r3, #30
 1352 05e8 0622     		movs	r2, #6
 1353 05ea 5A70     		strb	r2, [r3, #1]
 284:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1354              		.loc 1 284 0 discriminator 2
 1355 05ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1356 05ee 0133     		adds	r3, r3, #1
 1357 05f0 FB73     		strb	r3, [r7, #15]
 1358              	.L78:
 284:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1359              		.loc 1 284 0 is_stmt 0 discriminator 1
 1360 05f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1361 05f4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 31


 1362 05f6 9A42     		cmp	r2, r3
 1363 05f8 FFF476AF 		bcc	.L87
 302:.\protocol.c  ****                 }
 303:.\protocol.c  ****                 Pump_AL_ClearRxBuffer();
 1364              		.loc 1 303 0 is_stmt 1
 1365 05fc FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 304:.\protocol.c  ****                 return gradeHandle;
 1366              		.loc 1 304 0
 1367 0600 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1368 0602 D8E0     		b	.L50
 1369              	.L71:
 305:.\protocol.c  ****             }else{
 306:.\protocol.c  ****                 for(x=0;x<4;x++){
 1370              		.loc 1 306 0
 1371 0604 0023     		movs	r3, #0
 1372 0606 FB73     		strb	r3, [r7, #15]
 1373 0608 30E0     		b	.L88
 1374              	.L93:
 307:.\protocol.c  ****                     for(y=0;y<3;y++){
 1375              		.loc 1 307 0
 1376 060a 0023     		movs	r3, #0
 1377 060c BB73     		strb	r3, [r7, #14]
 1378 060e 27E0     		b	.L89
 1379              	.L92:
 308:.\protocol.c  ****                         for(z=0;z<14;z++){
 1380              		.loc 1 308 0
 1381 0610 0023     		movs	r3, #0
 1382 0612 7B73     		strb	r3, [r7, #13]
 1383 0614 1EE0     		b	.L90
 1384              	.L107:
 1385 0616 00BF     		.align	2
 1386              	.L106:
 1387 0618 00000000 		.word	side
 1388 061c 00000000 		.word	ppux10
 1389 0620 00000000 		.word	Pump_AL_rxBuffer
 1390 0624 CDCCCCCC 		.word	-858993459
 1391              	.L91:
 309:.\protocol.c  ****                             side.b.totalsHandle[x][y][z]=0;
 1392              		.loc 1 309 0 discriminator 3
 1393 0628 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1394 062a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1395 062c 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 1396 062e 644C     		ldr	r4, .L108
 1397 0630 1A46     		mov	r2, r3
 1398 0632 1201     		lsls	r2, r2, #4
 1399 0634 D21A     		subs	r2, r2, r3
 1400 0636 0B46     		mov	r3, r1
 1401 0638 5B00     		lsls	r3, r3, #1
 1402 063a 0B44     		add	r3, r3, r1
 1403 063c 1901     		lsls	r1, r3, #4
 1404 063e C91A     		subs	r1, r1, r3
 1405 0640 5318     		adds	r3, r2, r1
 1406 0642 2344     		add	r3, r3, r4
 1407 0644 0344     		add	r3, r3, r0
 1408 0646 03F58073 		add	r3, r3, #256
 1409 064a 0022     		movs	r2, #0
 1410 064c 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 32


 308:.\protocol.c  ****                         for(z=0;z<14;z++){
 1411              		.loc 1 308 0 discriminator 3
 1412 064e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1413 0650 0133     		adds	r3, r3, #1
 1414 0652 7B73     		strb	r3, [r7, #13]
 1415              	.L90:
 308:.\protocol.c  ****                         for(z=0;z<14;z++){
 1416              		.loc 1 308 0 is_stmt 0 discriminator 1
 1417 0654 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1418 0656 0D2B     		cmp	r3, #13
 1419 0658 E6D9     		bls	.L91
 307:.\protocol.c  ****                     for(y=0;y<3;y++){
 1420              		.loc 1 307 0 is_stmt 1 discriminator 2
 1421 065a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1422 065c 0133     		adds	r3, r3, #1
 1423 065e BB73     		strb	r3, [r7, #14]
 1424              	.L89:
 307:.\protocol.c  ****                     for(y=0;y<3;y++){
 1425              		.loc 1 307 0 is_stmt 0 discriminator 1
 1426 0660 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1427 0662 022B     		cmp	r3, #2
 1428 0664 D4D9     		bls	.L92
 306:.\protocol.c  ****                     for(y=0;y<3;y++){
 1429              		.loc 1 306 0 is_stmt 1 discriminator 2
 1430 0666 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1431 0668 0133     		adds	r3, r3, #1
 1432 066a FB73     		strb	r3, [r7, #15]
 1433              	.L88:
 306:.\protocol.c  ****                     for(y=0;y<3;y++){
 1434              		.loc 1 306 0 is_stmt 0 discriminator 1
 1435 066c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1436 066e 032B     		cmp	r3, #3
 1437 0670 CBD9     		bls	.L93
 310:.\protocol.c  ****                         }
 311:.\protocol.c  ****                     }
 312:.\protocol.c  ****                 }
 313:.\protocol.c  ****                 w=0;
 1438              		.loc 1 313 0 is_stmt 1
 1439 0672 0023     		movs	r3, #0
 1440 0674 3B73     		strb	r3, [r7, #12]
 314:.\protocol.c  ****                 for(x=0;x<gradeHandle;x++){
 1441              		.loc 1 314 0
 1442 0676 0023     		movs	r3, #0
 1443 0678 FB73     		strb	r3, [r7, #15]
 1444 067a 8CE0     		b	.L94
 1445              	.L103:
 315:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1446              		.loc 1 315 0
 1447 067c 0023     		movs	r3, #0
 1448 067e BB73     		strb	r3, [r7, #14]
 1449 0680 37E0     		b	.L95
 1450              	.L100:
 316:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1451              		.loc 1 316 0
 1452 0682 0123     		movs	r3, #1
 1453 0684 7B73     		strb	r3, [r7, #13]
 1454 0686 2BE0     		b	.L96
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 33


 1455              	.L99:
 317:.\protocol.c  ****                             side.b.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1456              		.loc 1 317 0
 1457 0688 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1458 068a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1459 068c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1460 068e C2F10D00 		rsb	r0, r2, #13
 1461 0692 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1462 0694 0432     		adds	r2, r2, #4
 1463 0696 4B4C     		ldr	r4, .L108+4
 1464 0698 A25C     		ldrb	r2, [r4, r2]
 1465 069a D2B2     		uxtb	r2, r2
 1466 069c 02F00F02 		and	r2, r2, #15
 1467 06a0 D2B2     		uxtb	r2, r2
 1468 06a2 3032     		adds	r2, r2, #48
 1469 06a4 D5B2     		uxtb	r5, r2
 1470 06a6 464C     		ldr	r4, .L108
 1471 06a8 1A46     		mov	r2, r3
 1472 06aa 1201     		lsls	r2, r2, #4
 1473 06ac D21A     		subs	r2, r2, r3
 1474 06ae 0B46     		mov	r3, r1
 1475 06b0 5B00     		lsls	r3, r3, #1
 1476 06b2 0B44     		add	r3, r3, r1
 1477 06b4 1901     		lsls	r1, r3, #4
 1478 06b6 C91A     		subs	r1, r1, r3
 1479 06b8 5318     		adds	r3, r2, r1
 1480 06ba 2344     		add	r3, r3, r4
 1481 06bc 0344     		add	r3, r3, r0
 1482 06be 03F58073 		add	r3, r3, #256
 1483 06c2 2A46     		mov	r2, r5
 1484 06c4 5A70     		strb	r2, [r3, #1]
 318:.\protocol.c  ****                             w++;
 1485              		.loc 1 318 0
 1486 06c6 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1487 06c8 0133     		adds	r3, r3, #1
 1488 06ca 3B73     		strb	r3, [r7, #12]
 319:.\protocol.c  ****                             if((y==2)&&(z==6)){
 1489              		.loc 1 319 0
 1490 06cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1491 06ce 022B     		cmp	r3, #2
 1492 06d0 03D1     		bne	.L97
 1493              		.loc 1 319 0 is_stmt 0 discriminator 1
 1494 06d2 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1495 06d4 062B     		cmp	r3, #6
 1496 06d6 00D1     		bne	.L97
 320:.\protocol.c  ****                                 break;
 1497              		.loc 1 320 0 is_stmt 1
 1498 06d8 05E0     		b	.L98
 1499              	.L97:
 316:.\protocol.c  ****                             side.b.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1500              		.loc 1 316 0 discriminator 2
 1501 06da 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1502 06dc 0133     		adds	r3, r3, #1
 1503 06de 7B73     		strb	r3, [r7, #13]
 1504              	.L96:
 316:.\protocol.c  ****                             side.b.totalsHandle[x][y][13-z]=(Pump_AL_rxBuffer[w+4]&0x0F)+0x30;
 1505              		.loc 1 316 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 34


 1506 06e0 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1507 06e2 0C2B     		cmp	r3, #12
 1508 06e4 D0D9     		bls	.L99
 1509              	.L98:
 321:.\protocol.c  ****                             }
 322:.\protocol.c  ****                         }
 323:.\protocol.c  ****                         w++;
 1510              		.loc 1 323 0 is_stmt 1 discriminator 2
 1511 06e6 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1512 06e8 0133     		adds	r3, r3, #1
 1513 06ea 3B73     		strb	r3, [r7, #12]
 315:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1514              		.loc 1 315 0 discriminator 2
 1515 06ec BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1516 06ee 0133     		adds	r3, r3, #1
 1517 06f0 BB73     		strb	r3, [r7, #14]
 1518              	.L95:
 315:.\protocol.c  ****                         for(z=1;z<=12;z++){
 1519              		.loc 1 315 0 is_stmt 0 discriminator 1
 1520 06f2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1521 06f4 022B     		cmp	r3, #2
 1522 06f6 C4D9     		bls	.L100
 324:.\protocol.c  ****                     }
 325:.\protocol.c  ****                     w=w+9;
 1523              		.loc 1 325 0 is_stmt 1
 1524 06f8 3B7B     		ldrb	r3, [r7, #12]
 1525 06fa 0933     		adds	r3, r3, #9
 1526 06fc 3B73     		strb	r3, [r7, #12]
 326:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1527              		.loc 1 326 0
 1528 06fe 0623     		movs	r3, #6
 1529 0700 7B73     		strb	r3, [r7, #13]
 1530 0702 1EE0     		b	.L101
 1531              	.L102:
 327:.\protocol.c  ****                         side.b.totalsHandle[x][2][z]=side.b.totalsHandle[x][2][z+6];
 1532              		.loc 1 327 0 discriminator 3
 1533 0704 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1534 0706 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 1535 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1536 070a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1537 070c 9C1D     		adds	r4, r3, #6
 1538 070e 2C4D     		ldr	r5, .L108
 1539 0710 1346     		mov	r3, r2
 1540 0712 5B00     		lsls	r3, r3, #1
 1541 0714 1344     		add	r3, r3, r2
 1542 0716 1A01     		lsls	r2, r3, #4
 1543 0718 D21A     		subs	r2, r2, r3
 1544 071a AB18     		adds	r3, r5, r2
 1545 071c 2344     		add	r3, r3, r4
 1546 071e 03F58F73 		add	r3, r3, #286
 1547 0722 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 1548 0724 264C     		ldr	r4, .L108
 1549 0726 0B46     		mov	r3, r1
 1550 0728 5B00     		lsls	r3, r3, #1
 1551 072a 0B44     		add	r3, r3, r1
 1552 072c 1A01     		lsls	r2, r3, #4
 1553 072e D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 35


 1554 0730 A318     		adds	r3, r4, r2
 1555 0732 0344     		add	r3, r3, r0
 1556 0734 03F58F73 		add	r3, r3, #286
 1557 0738 2A46     		mov	r2, r5
 1558 073a 5A70     		strb	r2, [r3, #1]
 326:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1559              		.loc 1 326 0 discriminator 3
 1560 073c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1561 073e 013B     		subs	r3, r3, #1
 1562 0740 7B73     		strb	r3, [r7, #13]
 1563              	.L101:
 326:.\protocol.c  ****                     for(z=6;z>=1;z--){
 1564              		.loc 1 326 0 is_stmt 0 discriminator 1
 1565 0742 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1566 0744 002B     		cmp	r3, #0
 1567 0746 DDD1     		bne	.L102
 328:.\protocol.c  ****                     }
 329:.\protocol.c  ****                     side.b.totalsHandle[x][0][0]=12;
 1568              		.loc 1 329 0 is_stmt 1 discriminator 2
 1569 0748 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1570 074a 1D49     		ldr	r1, .L108
 1571 074c 1346     		mov	r3, r2
 1572 074e 5B00     		lsls	r3, r3, #1
 1573 0750 1344     		add	r3, r3, r2
 1574 0752 1A01     		lsls	r2, r3, #4
 1575 0754 D21A     		subs	r2, r2, r3
 1576 0756 8B18     		adds	r3, r1, r2
 1577 0758 03F58073 		add	r3, r3, #256
 1578 075c 0C22     		movs	r2, #12
 1579 075e 5A70     		strb	r2, [r3, #1]
 330:.\protocol.c  ****                     side.b.totalsHandle[x][1][0]=12;
 1580              		.loc 1 330 0 discriminator 2
 1581 0760 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1582 0762 1749     		ldr	r1, .L108
 1583 0764 1346     		mov	r3, r2
 1584 0766 5B00     		lsls	r3, r3, #1
 1585 0768 1344     		add	r3, r3, r2
 1586 076a 1A01     		lsls	r2, r3, #4
 1587 076c D21A     		subs	r2, r2, r3
 1588 076e 8B18     		adds	r3, r1, r2
 1589 0770 03F20F13 		addw	r3, r3, #271
 1590 0774 0C22     		movs	r2, #12
 1591 0776 5A70     		strb	r2, [r3, #1]
 331:.\protocol.c  ****                     side.b.totalsHandle[x][2][0]=6;
 1592              		.loc 1 331 0 discriminator 2
 1593 0778 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1594 077a 1149     		ldr	r1, .L108
 1595 077c 1346     		mov	r3, r2
 1596 077e 5B00     		lsls	r3, r3, #1
 1597 0780 1344     		add	r3, r3, r2
 1598 0782 1A01     		lsls	r2, r3, #4
 1599 0784 D21A     		subs	r2, r2, r3
 1600 0786 8B18     		adds	r3, r1, r2
 1601 0788 03F58F73 		add	r3, r3, #286
 1602 078c 0622     		movs	r2, #6
 1603 078e 5A70     		strb	r2, [r3, #1]
 314:.\protocol.c  ****                     for(y=0;y<=2;y++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 36


 1604              		.loc 1 314 0 discriminator 2
 1605 0790 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1606 0792 0133     		adds	r3, r3, #1
 1607 0794 FB73     		strb	r3, [r7, #15]
 1608              	.L94:
 314:.\protocol.c  ****                     for(y=0;y<=2;y++){
 1609              		.loc 1 314 0 is_stmt 0 discriminator 1
 1610 0796 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1611 0798 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1612 079a 9A42     		cmp	r2, r3
 1613 079c FFF46EAF 		bcc	.L103
 332:.\protocol.c  ****                 }
 333:.\protocol.c  ****                 Pump_AL_ClearRxBuffer();
 1614              		.loc 1 333 0 is_stmt 1
 1615 07a0 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 334:.\protocol.c  ****                 return gradeHandle;
 1616              		.loc 1 334 0
 1617 07a4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1618 07a6 06E0     		b	.L50
 1619              	.L70:
 335:.\protocol.c  ****             }
 336:.\protocol.c  ****         }else{
 337:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 1620              		.loc 1 337 0
 1621 07a8 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 338:.\protocol.c  ****             return 0;
 1622              		.loc 1 338 0
 1623 07ac 0023     		movs	r3, #0
 1624 07ae 02E0     		b	.L50
 1625              	.L69:
 339:.\protocol.c  ****         }
 340:.\protocol.c  ****     }else{
 341:.\protocol.c  ****         Pump_AL_ClearRxBuffer();
 1626              		.loc 1 341 0
 1627 07b0 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 342:.\protocol.c  ****         return 0;
 1628              		.loc 1 342 0
 1629 07b4 0023     		movs	r3, #0
 1630              	.L50:
 343:.\protocol.c  ****     }
 344:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
 345:.\protocol.c  ****     return 0;
 346:.\protocol.c  **** }
 1631              		.loc 1 346 0
 1632 07b6 1846     		mov	r0, r3
 1633 07b8 1037     		adds	r7, r7, #16
 1634              		.cfi_def_cfa_offset 16
 1635 07ba BD46     		mov	sp, r7
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 07bc B0BD     		pop	{r4, r5, r7, pc}
 1639              	.L109:
 1640 07be 00BF     		.align	2
 1641              	.L108:
 1642 07c0 00000000 		.word	side
 1643 07c4 00000000 		.word	Pump_AL_rxBuffer
 1644              		.cfi_endproc
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 37


 1645              	.LFE59:
 1646              		.size	get_totals, .-get_totals
 1647              		.section	.rodata
 1648 0009 000000   		.align	2
 1649              	.LC1:
 1650 000c FF       		.byte	-1
 1651 000d 00       		.byte	0
 1652 000e F4       		.byte	-12
 1653 000f F6       		.byte	-10
 1654 0010 00       		.byte	0
 1655 0011 F7       		.byte	-9
 1656 0012 00       		.byte	0
 1657 0013 00       		.byte	0
 1658 0014 00       		.byte	0
 1659 0015 00       		.byte	0
 1660 0016 00       		.byte	0
 1661 0017 00       		.byte	0
 1662 0018 00       		.byte	0
 1663 0019 00       		.byte	0
 1664 001a 00       		.byte	0
 1665 001b 00       		.section	.text.price_change,"ax",%progbits
 1666              		.align	2
 1667              		.global	price_change
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	price_change, %function
 1671              	price_change:
 1672              	.LFB60:
 347:.\protocol.c  **** 
 348:.\protocol.c  **** /*
 349:.\protocol.c  **** ***************************************************************************************************
 350:.\protocol.c  **** *                                         uint8 price_change(uint8 pos)
 351:.\protocol.c  **** *
 352:.\protocol.c  **** * Description : 
 353:.\protocol.c  **** *               
 354:.\protocol.c  **** *
 355:.\protocol.c  **** * Argument(s) : none
 356:.\protocol.c  **** *
 357:.\protocol.c  **** * Return(s)   : none
 358:.\protocol.c  **** *
 359:.\protocol.c  **** * Caller(s)   : 
 360:.\protocol.c  **** *
 361:.\protocol.c  **** * Note(s)     : none.
 362:.\protocol.c  **** ***************************************************************************************************
 363:.\protocol.c  **** */
 364:.\protocol.c  **** uint8 price_change(uint8 pos,uint8 handle,uint8 *value){
 1673              		.loc 1 364 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 32
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677 0000 90B5     		push	{r4, r7, lr}
 1678              		.cfi_def_cfa_offset 12
 1679              		.cfi_offset 4, -12
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 89B0     		sub	sp, sp, #36
 1683              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 38


 1684 0004 00AF     		add	r7, sp, #0
 1685              		.cfi_def_cfa_register 7
 1686 0006 0346     		mov	r3, r0
 1687 0008 3A60     		str	r2, [r7]
 1688 000a FB71     		strb	r3, [r7, #7]
 1689 000c 0B46     		mov	r3, r1
 1690 000e BB71     		strb	r3, [r7, #6]
 365:.\protocol.c  **** 	uint8 buffer[15]={0xFF,0,0xF4,0xF6,0,0xF7,0,0,0,0,0,0,0,0,0},size,x,y;
 1691              		.loc 1 365 0
 1692 0010 A94A     		ldr	r2, .L138
 1693 0012 07F10C03 		add	r3, r7, #12
 1694 0016 1446     		mov	r4, r2
 1695 0018 2068     		ldr	r0, [r4]	@ unaligned
 1696 001a 6168     		ldr	r1, [r4, #4]	@ unaligned
 1697 001c A268     		ldr	r2, [r4, #8]	@ unaligned
 1698 001e 07C3     		stmia	r3!, {r0, r1, r2}
 1699 0020 A289     		ldrh	r2, [r4, #12]	@ unaligned
 1700 0022 A17B     		ldrb	r1, [r4, #14]
 1701 0024 1A80     		strh	r2, [r3]	@ unaligned
 1702 0026 0A46     		mov	r2, r1
 1703 0028 9A70     		strb	r2, [r3, #2]
 366:.\protocol.c  ****     for(x=1;x<=6;x++){
 1704              		.loc 1 366 0
 1705 002a 0123     		movs	r3, #1
 1706 002c BB77     		strb	r3, [r7, #30]
 1707 002e 1FE0     		b	.L111
 1708              	.L116:
 367:.\protocol.c  ****         if(value[x]==','){
 1709              		.loc 1 367 0
 1710 0030 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1711 0032 3A68     		ldr	r2, [r7]
 1712 0034 1344     		add	r3, r3, r2
 1713 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1714 0038 2C2B     		cmp	r3, #44
 1715 003a 16D1     		bne	.L112
 368:.\protocol.c  ****             for(y=x;y>=2;y--){
 1716              		.loc 1 368 0
 1717 003c BB7F     		ldrb	r3, [r7, #30]
 1718 003e 7B77     		strb	r3, [r7, #29]
 1719 0040 0BE0     		b	.L113
 1720              	.L114:
 369:.\protocol.c  ****                 value[y]=value[y-1];
 1721              		.loc 1 369 0 discriminator 3
 1722 0042 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1723 0044 3A68     		ldr	r2, [r7]
 1724 0046 1344     		add	r3, r3, r2
 1725 0048 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1726 004a 013A     		subs	r2, r2, #1
 1727 004c 3968     		ldr	r1, [r7]
 1728 004e 0A44     		add	r2, r2, r1
 1729 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1730 0052 1A70     		strb	r2, [r3]
 368:.\protocol.c  ****             for(y=x;y>=2;y--){
 1731              		.loc 1 368 0 discriminator 3
 1732 0054 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1733 0056 013B     		subs	r3, r3, #1
 1734 0058 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 39


 1735              	.L113:
 368:.\protocol.c  ****             for(y=x;y>=2;y--){
 1736              		.loc 1 368 0 is_stmt 0 discriminator 1
 1737 005a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1738 005c 012B     		cmp	r3, #1
 1739 005e F0D8     		bhi	.L114
 370:.\protocol.c  ****             }
 371:.\protocol.c  ****             value[1]='0';
 1740              		.loc 1 371 0 is_stmt 1
 1741 0060 3B68     		ldr	r3, [r7]
 1742 0062 0133     		adds	r3, r3, #1
 1743 0064 3022     		movs	r2, #48
 1744 0066 1A70     		strb	r2, [r3]
 372:.\protocol.c  ****             break;
 1745              		.loc 1 372 0
 1746 0068 05E0     		b	.L115
 1747              	.L112:
 366:.\protocol.c  ****         if(value[x]==','){
 1748              		.loc 1 366 0 discriminator 2
 1749 006a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1750 006c 0133     		adds	r3, r3, #1
 1751 006e BB77     		strb	r3, [r7, #30]
 1752              	.L111:
 366:.\protocol.c  ****         if(value[x]==','){
 1753              		.loc 1 366 0 is_stmt 0 discriminator 1
 1754 0070 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1755 0072 062B     		cmp	r3, #6
 1756 0074 DCD9     		bls	.L116
 1757              	.L115:
 373:.\protocol.c  ****         }
 374:.\protocol.c  ****     }
 375:.\protocol.c  **** 	if(digits!=7){
 1758              		.loc 1 375 0 is_stmt 1
 1759 0076 914B     		ldr	r3, .L138+4
 1760 0078 1B78     		ldrb	r3, [r3]
 1761 007a DBB2     		uxtb	r3, r3
 1762 007c 072B     		cmp	r3, #7
 1763 007e 79D0     		beq	.L117
 376:.\protocol.c  **** 		buffer[1]=0xE5;
 1764              		.loc 1 376 0
 1765 0080 E523     		movs	r3, #229
 1766 0082 7B73     		strb	r3, [r7, #13]
 377:.\protocol.c  **** 		buffer[4]=(0xE0|((handle&0x0f)-1));
 1767              		.loc 1 377 0
 1768 0084 BB79     		ldrb	r3, [r7, #6]
 1769 0086 03F00F03 		and	r3, r3, #15
 1770 008a DBB2     		uxtb	r3, r3
 1771 008c 013B     		subs	r3, r3, #1
 1772 008e DBB2     		uxtb	r3, r3
 1773 0090 DBB2     		uxtb	r3, r3
 1774 0092 63F01F03 		orn	r3, r3, #31
 1775 0096 DBB2     		uxtb	r3, r3
 1776 0098 DBB2     		uxtb	r3, r3
 1777 009a 3B74     		strb	r3, [r7, #16]
 378:.\protocol.c  **** 		if(ppux10==0){
 1778              		.loc 1 378 0
 1779 009c 884B     		ldr	r3, .L138+8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 40


 1780 009e 1B78     		ldrb	r3, [r3]
 1781 00a0 DBB2     		uxtb	r3, r3
 1782 00a2 002B     		cmp	r3, #0
 1783 00a4 1FD1     		bne	.L118
 379:.\protocol.c  **** 			for(x=0;x<4;x++){
 1784              		.loc 1 379 0
 1785 00a6 0023     		movs	r3, #0
 1786 00a8 BB77     		strb	r3, [r7, #30]
 1787 00aa 18E0     		b	.L119
 1788              	.L120:
 380:.\protocol.c  **** 				buffer[6+x]=(0xE0|(value[6-x]&0x0F));
 1789              		.loc 1 380 0 discriminator 3
 1790 00ac BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1791 00ae 0633     		adds	r3, r3, #6
 1792 00b0 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1793 00b2 C2F10602 		rsb	r2, r2, #6
 1794 00b6 1146     		mov	r1, r2
 1795 00b8 3A68     		ldr	r2, [r7]
 1796 00ba 0A44     		add	r2, r2, r1
 1797 00bc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1798 00be D2B2     		uxtb	r2, r2
 1799 00c0 02F00F02 		and	r2, r2, #15
 1800 00c4 D2B2     		uxtb	r2, r2
 1801 00c6 62F01F02 		orn	r2, r2, #31
 1802 00ca D2B2     		uxtb	r2, r2
 1803 00cc D2B2     		uxtb	r2, r2
 1804 00ce 07F12001 		add	r1, r7, #32
 1805 00d2 0B44     		add	r3, r3, r1
 1806 00d4 03F8142C 		strb	r2, [r3, #-20]
 379:.\protocol.c  **** 			for(x=0;x<4;x++){
 1807              		.loc 1 379 0 discriminator 3
 1808 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1809 00da 0133     		adds	r3, r3, #1
 1810 00dc BB77     		strb	r3, [r7, #30]
 1811              	.L119:
 379:.\protocol.c  **** 			for(x=0;x<4;x++){
 1812              		.loc 1 379 0 is_stmt 0 discriminator 1
 1813 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1814 00e0 032B     		cmp	r3, #3
 1815 00e2 E3D9     		bls	.L120
 1816 00e4 1EE0     		b	.L121
 1817              	.L118:
 381:.\protocol.c  **** 			}
 382:.\protocol.c  **** 		}else{
 383:.\protocol.c  ****             for(x=0;x<4;x++){
 1818              		.loc 1 383 0 is_stmt 1
 1819 00e6 0023     		movs	r3, #0
 1820 00e8 BB77     		strb	r3, [r7, #30]
 1821 00ea 18E0     		b	.L122
 1822              	.L123:
 384:.\protocol.c  **** 				buffer[6+x]=(0xE0|(value[5-x]&0x0F));
 1823              		.loc 1 384 0 discriminator 3
 1824 00ec BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1825 00ee 0633     		adds	r3, r3, #6
 1826 00f0 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1827 00f2 C2F10502 		rsb	r2, r2, #5
 1828 00f6 1146     		mov	r1, r2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 41


 1829 00f8 3A68     		ldr	r2, [r7]
 1830 00fa 0A44     		add	r2, r2, r1
 1831 00fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1832 00fe D2B2     		uxtb	r2, r2
 1833 0100 02F00F02 		and	r2, r2, #15
 1834 0104 D2B2     		uxtb	r2, r2
 1835 0106 62F01F02 		orn	r2, r2, #31
 1836 010a D2B2     		uxtb	r2, r2
 1837 010c D2B2     		uxtb	r2, r2
 1838 010e 07F12001 		add	r1, r7, #32
 1839 0112 0B44     		add	r3, r3, r1
 1840 0114 03F8142C 		strb	r2, [r3, #-20]
 383:.\protocol.c  **** 				buffer[6+x]=(0xE0|(value[5-x]&0x0F));
 1841              		.loc 1 383 0 discriminator 3
 1842 0118 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1843 011a 0133     		adds	r3, r3, #1
 1844 011c BB77     		strb	r3, [r7, #30]
 1845              	.L122:
 383:.\protocol.c  **** 				buffer[6+x]=(0xE0|(value[5-x]&0x0F));
 1846              		.loc 1 383 0 is_stmt 0 discriminator 1
 1847 011e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1848 0120 032B     		cmp	r3, #3
 1849 0122 E3D9     		bls	.L123
 1850              	.L121:
 385:.\protocol.c  **** 			}	
 386:.\protocol.c  **** 		}
 387:.\protocol.c  **** 		buffer[10]=0xFB;
 1851              		.loc 1 387 0 is_stmt 1
 1852 0124 FB23     		movs	r3, #251
 1853 0126 BB75     		strb	r3, [r7, #22]
 388:.\protocol.c  **** 		for(x=0;x<=10;x++){
 1854              		.loc 1 388 0
 1855 0128 0023     		movs	r3, #0
 1856 012a BB77     		strb	r3, [r7, #30]
 1857 012c 0FE0     		b	.L124
 1858              	.L125:
 389:.\protocol.c  **** 			buffer[11]+=(buffer[x]&0x0F);	
 1859              		.loc 1 389 0 discriminator 3
 1860 012e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1861 0130 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1862 0132 07F12001 		add	r1, r7, #32
 1863 0136 0B44     		add	r3, r3, r1
 1864 0138 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 1865 013c 03F00F03 		and	r3, r3, #15
 1866 0140 DBB2     		uxtb	r3, r3
 1867 0142 1344     		add	r3, r3, r2
 1868 0144 DBB2     		uxtb	r3, r3
 1869 0146 FB75     		strb	r3, [r7, #23]
 388:.\protocol.c  **** 		for(x=0;x<=10;x++){
 1870              		.loc 1 388 0 discriminator 3
 1871 0148 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1872 014a 0133     		adds	r3, r3, #1
 1873 014c BB77     		strb	r3, [r7, #30]
 1874              	.L124:
 388:.\protocol.c  **** 		for(x=0;x<=10;x++){
 1875              		.loc 1 388 0 is_stmt 0 discriminator 1
 1876 014e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 42


 1877 0150 0A2B     		cmp	r3, #10
 1878 0152 ECD9     		bls	.L125
 390:.\protocol.c  **** 		}
 391:.\protocol.c  **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1879              		.loc 1 391 0 is_stmt 1
 1880 0154 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1881 0156 5B42     		negs	r3, r3
 1882 0158 DBB2     		uxtb	r3, r3
 1883 015a DBB2     		uxtb	r3, r3
 1884 015c 03F00F03 		and	r3, r3, #15
 1885 0160 DBB2     		uxtb	r3, r3
 1886 0162 63F01F03 		orn	r3, r3, #31
 1887 0166 DBB2     		uxtb	r3, r3
 1888 0168 DBB2     		uxtb	r3, r3
 1889 016a FB75     		strb	r3, [r7, #23]
 392:.\protocol.c  **** 		buffer[12]=0xF0;
 1890              		.loc 1 392 0
 1891 016c F023     		movs	r3, #240
 1892 016e 3B76     		strb	r3, [r7, #24]
 393:.\protocol.c  **** 		size=12;
 1893              		.loc 1 393 0
 1894 0170 0C23     		movs	r3, #12
 1895 0172 FB77     		strb	r3, [r7, #31]
 1896              	.L117:
 394:.\protocol.c  **** 	}
 395:.\protocol.c  **** 	if(digits==7){
 1897              		.loc 1 395 0
 1898 0174 514B     		ldr	r3, .L138+4
 1899 0176 1B78     		ldrb	r3, [r3]
 1900 0178 DBB2     		uxtb	r3, r3
 1901 017a 072B     		cmp	r3, #7
 1902 017c 54D1     		bne	.L126
 396:.\protocol.c  **** 		buffer[1]=0xE3;
 1903              		.loc 1 396 0
 1904 017e E323     		movs	r3, #227
 1905 0180 7B73     		strb	r3, [r7, #13]
 397:.\protocol.c  **** 		buffer[4]=(0xE0|((handle&0x0f)-1));	
 1906              		.loc 1 397 0
 1907 0182 BB79     		ldrb	r3, [r7, #6]
 1908 0184 03F00F03 		and	r3, r3, #15
 1909 0188 DBB2     		uxtb	r3, r3
 1910 018a 013B     		subs	r3, r3, #1
 1911 018c DBB2     		uxtb	r3, r3
 1912 018e DBB2     		uxtb	r3, r3
 1913 0190 63F01F03 		orn	r3, r3, #31
 1914 0194 DBB2     		uxtb	r3, r3
 1915 0196 DBB2     		uxtb	r3, r3
 1916 0198 3B74     		strb	r3, [r7, #16]
 398:.\protocol.c  ****         for(x=0;x<6;x++){
 1917              		.loc 1 398 0
 1918 019a 0023     		movs	r3, #0
 1919 019c BB77     		strb	r3, [r7, #30]
 1920 019e 18E0     		b	.L127
 1921              	.L128:
 399:.\protocol.c  ****             buffer[6+x]=(0xE0|(value[6-x]&0x0F));
 1922              		.loc 1 399 0 discriminator 3
 1923 01a0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 43


 1924 01a2 0633     		adds	r3, r3, #6
 1925 01a4 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1926 01a6 C2F10602 		rsb	r2, r2, #6
 1927 01aa 1146     		mov	r1, r2
 1928 01ac 3A68     		ldr	r2, [r7]
 1929 01ae 0A44     		add	r2, r2, r1
 1930 01b0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1931 01b2 D2B2     		uxtb	r2, r2
 1932 01b4 02F00F02 		and	r2, r2, #15
 1933 01b8 D2B2     		uxtb	r2, r2
 1934 01ba 62F01F02 		orn	r2, r2, #31
 1935 01be D2B2     		uxtb	r2, r2
 1936 01c0 D2B2     		uxtb	r2, r2
 1937 01c2 07F12001 		add	r1, r7, #32
 1938 01c6 0B44     		add	r3, r3, r1
 1939 01c8 03F8142C 		strb	r2, [r3, #-20]
 398:.\protocol.c  ****         for(x=0;x<6;x++){
 1940              		.loc 1 398 0 discriminator 3
 1941 01cc BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1942 01ce 0133     		adds	r3, r3, #1
 1943 01d0 BB77     		strb	r3, [r7, #30]
 1944              	.L127:
 398:.\protocol.c  ****         for(x=0;x<6;x++){
 1945              		.loc 1 398 0 is_stmt 0 discriminator 1
 1946 01d2 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1947 01d4 052B     		cmp	r3, #5
 1948 01d6 E3D9     		bls	.L128
 400:.\protocol.c  ****         }	
 401:.\protocol.c  **** 		buffer[12]=0xFB;
 1949              		.loc 1 401 0 is_stmt 1
 1950 01d8 FB23     		movs	r3, #251
 1951 01da 3B76     		strb	r3, [r7, #24]
 402:.\protocol.c  **** 		for(x=0;x<=12;x++){
 1952              		.loc 1 402 0
 1953 01dc 0023     		movs	r3, #0
 1954 01de BB77     		strb	r3, [r7, #30]
 1955 01e0 0FE0     		b	.L129
 1956              	.L130:
 403:.\protocol.c  **** 			buffer[13]+=(buffer[x]&0x0F);	
 1957              		.loc 1 403 0 discriminator 3
 1958 01e2 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 1959 01e4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1960 01e6 07F12001 		add	r1, r7, #32
 1961 01ea 0B44     		add	r3, r3, r1
 1962 01ec 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 1963 01f0 03F00F03 		and	r3, r3, #15
 1964 01f4 DBB2     		uxtb	r3, r3
 1965 01f6 1344     		add	r3, r3, r2
 1966 01f8 DBB2     		uxtb	r3, r3
 1967 01fa 7B76     		strb	r3, [r7, #25]
 402:.\protocol.c  **** 		for(x=0;x<=12;x++){
 1968              		.loc 1 402 0 discriminator 3
 1969 01fc BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1970 01fe 0133     		adds	r3, r3, #1
 1971 0200 BB77     		strb	r3, [r7, #30]
 1972              	.L129:
 402:.\protocol.c  **** 		for(x=0;x<=12;x++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 44


 1973              		.loc 1 402 0 is_stmt 0 discriminator 1
 1974 0202 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1975 0204 0C2B     		cmp	r3, #12
 1976 0206 ECD9     		bls	.L130
 404:.\protocol.c  **** 		}
 405:.\protocol.c  **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 1977              		.loc 1 405 0 is_stmt 1
 1978 0208 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 1979 020a 5B42     		negs	r3, r3
 1980 020c DBB2     		uxtb	r3, r3
 1981 020e DBB2     		uxtb	r3, r3
 1982 0210 03F00F03 		and	r3, r3, #15
 1983 0214 DBB2     		uxtb	r3, r3
 1984 0216 63F01F03 		orn	r3, r3, #31
 1985 021a DBB2     		uxtb	r3, r3
 1986 021c DBB2     		uxtb	r3, r3
 1987 021e 7B76     		strb	r3, [r7, #25]
 406:.\protocol.c  **** 		buffer[14]=0xF0;
 1988              		.loc 1 406 0
 1989 0220 F023     		movs	r3, #240
 1990 0222 BB76     		strb	r3, [r7, #26]
 407:.\protocol.c  **** 		size=14;
 1991              		.loc 1 407 0
 1992 0224 0E23     		movs	r3, #14
 1993 0226 FB77     		strb	r3, [r7, #31]
 1994              	.L126:
 408:.\protocol.c  **** 	}	
 409:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
 1995              		.loc 1 409 0
 1996 0228 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 410:.\protocol.c  **** 	Pump_AL_PutChar(0x20|pos);	
 1997              		.loc 1 410 0
 1998 022c FB79     		ldrb	r3, [r7, #7]
 1999 022e 43F02003 		orr	r3, r3, #32
 2000 0232 DBB2     		uxtb	r3, r3
 2001 0234 1846     		mov	r0, r3
 2002 0236 FFF7FEFF 		bl	Pump_AL_PutChar
 411:.\protocol.c  ****     CyDelay(100);
 2003              		.loc 1 411 0
 2004 023a 6420     		movs	r0, #100
 2005 023c FFF7FEFF 		bl	CyDelay
 412:.\protocol.c  ****     if(Pump_AL_GetRxBufferSize()>=1){
 2006              		.loc 1 412 0
 2007 0240 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 2008 0244 0346     		mov	r3, r0
 2009 0246 002B     		cmp	r3, #0
 2010 0248 30D0     		beq	.L131
 413:.\protocol.c  **** 		if(Pump_AL_ReadRxData()==(0xD0|pos)){
 2011              		.loc 1 413 0
 2012 024a FFF7FEFF 		bl	Pump_AL_ReadRxData
 2013 024e 0346     		mov	r3, r0
 2014 0250 1A46     		mov	r2, r3
 2015 0252 FB79     		ldrb	r3, [r7, #7]
 2016 0254 63F02F03 		orn	r3, r3, #47
 2017 0258 DBB2     		uxtb	r3, r3
 2018 025a 9A42     		cmp	r2, r3
 2019 025c 24D1     		bne	.L132
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 45


 414:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 2020              		.loc 1 414 0
 2021 025e FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 415:.\protocol.c  ****             for(x=0;x<=size;x++){
 2022              		.loc 1 415 0
 2023 0262 0023     		movs	r3, #0
 2024 0264 BB77     		strb	r3, [r7, #30]
 2025 0266 0BE0     		b	.L133
 2026              	.L134:
 416:.\protocol.c  ****                	Pump_AL_PutChar(buffer[x]); 	
 2027              		.loc 1 416 0 discriminator 3
 2028 0268 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2029 026a 07F12002 		add	r2, r7, #32
 2030 026e 1344     		add	r3, r3, r2
 2031 0270 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2032 0274 1846     		mov	r0, r3
 2033 0276 FFF7FEFF 		bl	Pump_AL_PutChar
 415:.\protocol.c  ****             for(x=0;x<=size;x++){
 2034              		.loc 1 415 0 discriminator 3
 2035 027a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2036 027c 0133     		adds	r3, r3, #1
 2037 027e BB77     		strb	r3, [r7, #30]
 2038              	.L133:
 415:.\protocol.c  ****             for(x=0;x<=size;x++){
 2039              		.loc 1 415 0 is_stmt 0 discriminator 1
 2040 0280 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2041 0282 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2042 0284 9A42     		cmp	r2, r3
 2043 0286 EFD9     		bls	.L134
 417:.\protocol.c  ****             }
 418:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 2044              		.loc 1 418 0 is_stmt 1
 2045 0288 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 419:.\protocol.c  **** 			CyDelay(50);
 2046              		.loc 1 419 0
 2047 028c 3220     		movs	r0, #50
 2048 028e FFF7FEFF 		bl	CyDelay
 420:.\protocol.c  **** 			if(get_state(pos)==0){
 2049              		.loc 1 420 0
 2050 0292 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2051 0294 1846     		mov	r0, r3
 2052 0296 FFF7FEFF 		bl	get_state
 2053 029a 0346     		mov	r3, r0
 2054 029c 002B     		cmp	r3, #0
 2055 029e 01D1     		bne	.L135
 421:.\protocol.c  **** 				return 0;
 2056              		.loc 1 421 0
 2057 02a0 0023     		movs	r3, #0
 2058 02a2 04E0     		b	.L137
 2059              	.L135:
 422:.\protocol.c  **** 			}
 423:.\protocol.c  **** 			else{
 424:.\protocol.c  **** 				return 1;
 2060              		.loc 1 424 0
 2061 02a4 0123     		movs	r3, #1
 2062 02a6 02E0     		b	.L137
 2063              	.L132:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 46


 425:.\protocol.c  **** 			}
 426:.\protocol.c  **** 		}
 427:.\protocol.c  **** 		else{
 428:.\protocol.c  **** 			return 0;
 2064              		.loc 1 428 0
 2065 02a8 0023     		movs	r3, #0
 2066 02aa 00E0     		b	.L137
 2067              	.L131:
 429:.\protocol.c  **** 		}
 430:.\protocol.c  **** 	}
 431:.\protocol.c  **** 	else{
 432:.\protocol.c  **** 		return 0;	
 2068              		.loc 1 432 0
 2069 02ac 0023     		movs	r3, #0
 2070              	.L137:
 433:.\protocol.c  **** 	}
 434:.\protocol.c  **** }
 2071              		.loc 1 434 0 discriminator 1
 2072 02ae 1846     		mov	r0, r3
 2073 02b0 2437     		adds	r7, r7, #36
 2074              		.cfi_def_cfa_offset 12
 2075 02b2 BD46     		mov	sp, r7
 2076              		.cfi_def_cfa_register 13
 2077              		@ sp needed
 2078 02b4 90BD     		pop	{r4, r7, pc}
 2079              	.L139:
 2080 02b6 00BF     		.align	2
 2081              	.L138:
 2082 02b8 0C000000 		.word	.LC1
 2083 02bc 00000000 		.word	digits
 2084 02c0 00000000 		.word	ppux10
 2085              		.cfi_endproc
 2086              	.LFE60:
 2087              		.size	price_change, .-price_change
 2088              		.section	.text.preset_data,"ax",%progbits
 2089              		.align	2
 2090              		.global	preset_data
 2091              		.thumb
 2092              		.thumb_func
 2093              		.type	preset_data, %function
 2094              	preset_data:
 2095              	.LFB61:
 435:.\protocol.c  **** 
 436:.\protocol.c  **** /*
 437:.\protocol.c  **** ***************************************************************************************************
 438:.\protocol.c  **** *                  uint8 preset_data(uint8 pos, uint8 grade, uint8 *value, uint8 preset)
 439:.\protocol.c  **** *
 440:.\protocol.c  **** * Description : 
 441:.\protocol.c  **** *               
 442:.\protocol.c  **** *
 443:.\protocol.c  **** * Argument(s) : none
 444:.\protocol.c  **** *
 445:.\protocol.c  **** * Return(s)   : none
 446:.\protocol.c  **** *
 447:.\protocol.c  **** * Caller(s)   : 
 448:.\protocol.c  **** *
 449:.\protocol.c  **** * Note(s)     : none.
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 47


 450:.\protocol.c  **** ***************************************************************************************************
 451:.\protocol.c  **** */
 452:.\protocol.c  **** uint8 preset_data(uint8 pos, uint8 grade, uint8 *value, uint8 preset){
 2096              		.loc 1 452 0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 32
 2099              		@ frame_needed = 1, uses_anonymous_args = 0
 2100 0000 80B5     		push	{r7, lr}
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 7, -8
 2103              		.cfi_offset 14, -4
 2104 0002 88B0     		sub	sp, sp, #32
 2105              		.cfi_def_cfa_offset 40
 2106 0004 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
 2108 0006 3A60     		str	r2, [r7]
 2109 0008 1A46     		mov	r2, r3
 2110 000a 0346     		mov	r3, r0
 2111 000c FB71     		strb	r3, [r7, #7]
 2112 000e 0B46     		mov	r3, r1
 2113 0010 BB71     		strb	r3, [r7, #6]
 2114 0012 1346     		mov	r3, r2
 2115 0014 7B71     		strb	r3, [r7, #5]
 453:.\protocol.c  ****     uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},x,y,z,decimal;
 2116              		.loc 1 453 0
 2117 0016 07F10803 		add	r3, r7, #8
 2118 001a 0022     		movs	r2, #0
 2119 001c 1A60     		str	r2, [r3]
 2120 001e 0433     		adds	r3, r3, #4
 2121 0020 0022     		movs	r2, #0
 2122 0022 1A60     		str	r2, [r3]
 2123 0024 0433     		adds	r3, r3, #4
 2124 0026 0022     		movs	r2, #0
 2125 0028 1A60     		str	r2, [r3]
 2126 002a 0433     		adds	r3, r3, #4
 2127 002c 0022     		movs	r2, #0
 2128 002e 1A60     		str	r2, [r3]
 2129 0030 0433     		adds	r3, r3, #4
 2130 0032 0022     		movs	r2, #0
 2131 0034 1A80     		strh	r2, [r3]	@ movhi
 2132 0036 0233     		adds	r3, r3, #2
 454:.\protocol.c  ****     buffer[0]=0xFF;
 2133              		.loc 1 454 0
 2134 0038 FF23     		movs	r3, #255
 2135 003a 3B72     		strb	r3, [r7, #8]
 455:.\protocol.c  ****     buffer[1]=0xE4;
 2136              		.loc 1 455 0
 2137 003c E423     		movs	r3, #228
 2138 003e 7B72     		strb	r3, [r7, #9]
 456:.\protocol.c  ****     if(((digits==5)||(digits==6))&&(preset==1)){
 2139              		.loc 1 456 0
 2140 0040 A84B     		ldr	r3, .L196
 2141 0042 1B78     		ldrb	r3, [r3]
 2142 0044 DBB2     		uxtb	r3, r3
 2143 0046 052B     		cmp	r3, #5
 2144 0048 04D0     		beq	.L141
 2145              		.loc 1 456 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 48


 2146 004a A64B     		ldr	r3, .L196
 2147 004c 1B78     		ldrb	r3, [r3]
 2148 004e DBB2     		uxtb	r3, r3
 2149 0050 062B     		cmp	r3, #6
 2150 0052 04D1     		bne	.L142
 2151              	.L141:
 2152              		.loc 1 456 0 discriminator 3
 2153 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2154 0056 012B     		cmp	r3, #1
 2155 0058 01D1     		bne	.L142
 457:.\protocol.c  **** 		buffer[1]=0xE3;
 2156              		.loc 1 457 0 is_stmt 1
 2157 005a E323     		movs	r3, #227
 2158 005c 7B72     		strb	r3, [r7, #9]
 2159              	.L142:
 458:.\protocol.c  **** 	}
 459:.\protocol.c  **** 	if((digits==5)&&(preset==2)){
 2160              		.loc 1 459 0
 2161 005e A14B     		ldr	r3, .L196
 2162 0060 1B78     		ldrb	r3, [r3]
 2163 0062 DBB2     		uxtb	r3, r3
 2164 0064 052B     		cmp	r3, #5
 2165 0066 04D1     		bne	.L143
 2166              		.loc 1 459 0 is_stmt 0 discriminator 1
 2167 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2168 006a 022B     		cmp	r3, #2
 2169 006c 01D1     		bne	.L143
 460:.\protocol.c  **** 		buffer[1]=0xE5;
 2170              		.loc 1 460 0 is_stmt 1
 2171 006e E523     		movs	r3, #229
 2172 0070 7B72     		strb	r3, [r7, #9]
 2173              	.L143:
 461:.\protocol.c  **** 	}
 462:.\protocol.c  **** 	if((digits==7)&&(preset==1)){
 2174              		.loc 1 462 0
 2175 0072 9C4B     		ldr	r3, .L196
 2176 0074 1B78     		ldrb	r3, [r3]
 2177 0076 DBB2     		uxtb	r3, r3
 2178 0078 072B     		cmp	r3, #7
 2179 007a 04D1     		bne	.L144
 2180              		.loc 1 462 0 is_stmt 0 discriminator 1
 2181 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2182 007e 012B     		cmp	r3, #1
 2183 0080 01D1     		bne	.L144
 463:.\protocol.c  **** 		buffer[1]=0xE0;
 2184              		.loc 1 463 0 is_stmt 1
 2185 0082 E023     		movs	r3, #224
 2186 0084 7B72     		strb	r3, [r7, #9]
 2187              	.L144:
 464:.\protocol.c  **** 	}
 465:.\protocol.c  **** 	if((digits==7)&&(preset==2)){
 2188              		.loc 1 465 0
 2189 0086 974B     		ldr	r3, .L196
 2190 0088 1B78     		ldrb	r3, [r3]
 2191 008a DBB2     		uxtb	r3, r3
 2192 008c 072B     		cmp	r3, #7
 2193 008e 04D1     		bne	.L145
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 49


 2194              		.loc 1 465 0 is_stmt 0 discriminator 1
 2195 0090 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2196 0092 022B     		cmp	r3, #2
 2197 0094 01D1     		bne	.L145
 466:.\protocol.c  **** 		buffer[1]=0xE2;
 2198              		.loc 1 466 0 is_stmt 1
 2199 0096 E223     		movs	r3, #226
 2200 0098 7B72     		strb	r3, [r7, #9]
 2201              	.L145:
 467:.\protocol.c  **** 	}
 468:.\protocol.c  ****     buffer[2]=(0xF0|preset);
 2202              		.loc 1 468 0
 2203 009a 7B79     		ldrb	r3, [r7, #5]
 2204 009c 63F00F03 		orn	r3, r3, #15
 2205 00a0 DBB2     		uxtb	r3, r3
 2206 00a2 BB72     		strb	r3, [r7, #10]
 469:.\protocol.c  ****     buffer[3]=0xF4;
 2207              		.loc 1 469 0
 2208 00a4 F423     		movs	r3, #244
 2209 00a6 FB72     		strb	r3, [r7, #11]
 470:.\protocol.c  ****     decimal=0;
 2210              		.loc 1 470 0
 2211 00a8 0023     		movs	r3, #0
 2212 00aa 3B77     		strb	r3, [r7, #28]
 471:.\protocol.c  ****     for(x=1;x<=value[0];x++){
 2213              		.loc 1 471 0
 2214 00ac 0123     		movs	r3, #1
 2215 00ae FB77     		strb	r3, [r7, #31]
 2216 00b0 29E0     		b	.L146
 2217              	.L153:
 472:.\protocol.c  ****         if(value[x]==','){
 2218              		.loc 1 472 0
 2219 00b2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2220 00b4 3A68     		ldr	r2, [r7]
 2221 00b6 1344     		add	r3, r3, r2
 2222 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 00ba 2C2B     		cmp	r3, #44
 2224 00bc 20D1     		bne	.L147
 473:.\protocol.c  ****             if((decimal=value[0]-x)>3){
 2225              		.loc 1 473 0
 2226 00be 3B68     		ldr	r3, [r7]
 2227 00c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2228 00c2 FB7F     		ldrb	r3, [r7, #31]
 2229 00c4 D31A     		subs	r3, r2, r3
 2230 00c6 3B77     		strb	r3, [r7, #28]
 2231 00c8 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2232 00ca 032B     		cmp	r3, #3
 2233 00cc 01D9     		bls	.L148
 474:.\protocol.c  ****                 return 0;
 2234              		.loc 1 474 0
 2235 00ce 0023     		movs	r3, #0
 2236 00d0 48E2     		b	.L195
 2237              	.L148:
 475:.\protocol.c  ****             }
 476:.\protocol.c  ****             for(y=x;y>=2;y--){
 2238              		.loc 1 476 0
 2239 00d2 FB7F     		ldrb	r3, [r7, #31]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 50


 2240 00d4 BB77     		strb	r3, [r7, #30]
 2241 00d6 0BE0     		b	.L150
 2242              	.L151:
 477:.\protocol.c  ****                 value[y]=value[y-1];
 2243              		.loc 1 477 0 discriminator 3
 2244 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2245 00da 3A68     		ldr	r2, [r7]
 2246 00dc 1344     		add	r3, r3, r2
 2247 00de BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2248 00e0 013A     		subs	r2, r2, #1
 2249 00e2 3968     		ldr	r1, [r7]
 2250 00e4 0A44     		add	r2, r2, r1
 2251 00e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2252 00e8 1A70     		strb	r2, [r3]
 476:.\protocol.c  ****                 value[y]=value[y-1];
 2253              		.loc 1 476 0 discriminator 3
 2254 00ea BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2255 00ec 013B     		subs	r3, r3, #1
 2256 00ee BB77     		strb	r3, [r7, #30]
 2257              	.L150:
 476:.\protocol.c  ****                 value[y]=value[y-1];
 2258              		.loc 1 476 0 is_stmt 0 discriminator 1
 2259 00f0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2260 00f2 012B     		cmp	r3, #1
 2261 00f4 F0D8     		bhi	.L151
 478:.\protocol.c  ****             }
 479:.\protocol.c  ****             value[1]='0';
 2262              		.loc 1 479 0 is_stmt 1
 2263 00f6 3B68     		ldr	r3, [r7]
 2264 00f8 0133     		adds	r3, r3, #1
 2265 00fa 3022     		movs	r2, #48
 2266 00fc 1A70     		strb	r2, [r3]
 480:.\protocol.c  ****             break;
 2267              		.loc 1 480 0
 2268 00fe 07E0     		b	.L152
 2269              	.L147:
 471:.\protocol.c  ****         if(value[x]==','){
 2270              		.loc 1 471 0 discriminator 2
 2271 0100 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2272 0102 0133     		adds	r3, r3, #1
 2273 0104 FB77     		strb	r3, [r7, #31]
 2274              	.L146:
 471:.\protocol.c  ****         if(value[x]==','){
 2275              		.loc 1 471 0 is_stmt 0 discriminator 1
 2276 0106 3B68     		ldr	r3, [r7]
 2277 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278 010a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2279 010c 9A42     		cmp	r2, r3
 2280 010e D0D9     		bls	.L153
 2281              	.L152:
 481:.\protocol.c  ****         }
 482:.\protocol.c  ****     }
 483:.\protocol.c  ****     if(digits!=value[0]){
 2282              		.loc 1 483 0 is_stmt 1
 2283 0110 3B68     		ldr	r3, [r7]
 2284 0112 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2285 0114 734B     		ldr	r3, .L196
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 51


 2286 0116 1B78     		ldrb	r3, [r3]
 2287 0118 DBB2     		uxtb	r3, r3
 2288 011a 9A42     		cmp	r2, r3
 2289 011c 35D0     		beq	.L154
 484:.\protocol.c  ****         for(x=0;x<value[0];x++){
 2290              		.loc 1 484 0
 2291 011e 0023     		movs	r3, #0
 2292 0120 FB77     		strb	r3, [r7, #31]
 2293 0122 15E0     		b	.L155
 2294              	.L156:
 485:.\protocol.c  ****             value[digits-x]=value[value[0]-x];
 2295              		.loc 1 485 0 discriminator 3
 2296 0124 6F4B     		ldr	r3, .L196
 2297 0126 1B78     		ldrb	r3, [r3]
 2298 0128 DBB2     		uxtb	r3, r3
 2299 012a 1A46     		mov	r2, r3
 2300 012c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2301 012e D31A     		subs	r3, r2, r3
 2302 0130 1A46     		mov	r2, r3
 2303 0132 3B68     		ldr	r3, [r7]
 2304 0134 1344     		add	r3, r3, r2
 2305 0136 3A68     		ldr	r2, [r7]
 2306 0138 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2307 013a 1146     		mov	r1, r2
 2308 013c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2309 013e 8A1A     		subs	r2, r1, r2
 2310 0140 1146     		mov	r1, r2
 2311 0142 3A68     		ldr	r2, [r7]
 2312 0144 0A44     		add	r2, r2, r1
 2313 0146 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2314 0148 1A70     		strb	r2, [r3]
 484:.\protocol.c  ****         for(x=0;x<value[0];x++){
 2315              		.loc 1 484 0 discriminator 3
 2316 014a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2317 014c 0133     		adds	r3, r3, #1
 2318 014e FB77     		strb	r3, [r7, #31]
 2319              	.L155:
 484:.\protocol.c  ****         for(x=0;x<value[0];x++){
 2320              		.loc 1 484 0 is_stmt 0 discriminator 1
 2321 0150 3B68     		ldr	r3, [r7]
 2322 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2323 0154 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2324 0156 9A42     		cmp	r2, r3
 2325 0158 E4D3     		bcc	.L156
 486:.\protocol.c  ****         }
 487:.\protocol.c  ****         for(x=(digits-value[0]);x>0;x--){
 2326              		.loc 1 487 0 is_stmt 1
 2327 015a 624B     		ldr	r3, .L196
 2328 015c 1B78     		ldrb	r3, [r3]
 2329 015e DAB2     		uxtb	r2, r3
 2330 0160 3B68     		ldr	r3, [r7]
 2331 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2332 0164 D31A     		subs	r3, r2, r3
 2333 0166 FB77     		strb	r3, [r7, #31]
 2334 0168 07E0     		b	.L157
 2335              	.L158:
 488:.\protocol.c  ****             value[x]='0';
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 52


 2336              		.loc 1 488 0 discriminator 3
 2337 016a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2338 016c 3A68     		ldr	r2, [r7]
 2339 016e 1344     		add	r3, r3, r2
 2340 0170 3022     		movs	r2, #48
 2341 0172 1A70     		strb	r2, [r3]
 487:.\protocol.c  ****             value[x]='0';
 2342              		.loc 1 487 0 discriminator 3
 2343 0174 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2344 0176 013B     		subs	r3, r3, #1
 2345 0178 FB77     		strb	r3, [r7, #31]
 2346              	.L157:
 487:.\protocol.c  ****             value[x]='0';
 2347              		.loc 1 487 0 is_stmt 0 discriminator 1
 2348 017a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2349 017c 002B     		cmp	r3, #0
 2350 017e F4D1     		bne	.L158
 489:.\protocol.c  ****         }
 490:.\protocol.c  ****         value[0]=digits;
 2351              		.loc 1 490 0 is_stmt 1
 2352 0180 584B     		ldr	r3, .L196
 2353 0182 1B78     		ldrb	r3, [r3]
 2354 0184 DAB2     		uxtb	r2, r3
 2355 0186 3B68     		ldr	r3, [r7]
 2356 0188 1A70     		strb	r2, [r3]
 2357              	.L154:
 491:.\protocol.c  ****     }
 492:.\protocol.c  ****     if(preset==1){//Volumen
 2358              		.loc 1 492 0
 2359 018a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2360 018c 012B     		cmp	r3, #1
 2361 018e 40F0E080 		bne	.L159
 493:.\protocol.c  ****         buffer[4]=0xF6;
 2362              		.loc 1 493 0
 2363 0192 F623     		movs	r3, #246
 2364 0194 3B73     		strb	r3, [r7, #12]
 494:.\protocol.c  ****         buffer[5]=(0xE0|(grade-1));
 2365              		.loc 1 494 0
 2366 0196 BB79     		ldrb	r3, [r7, #6]
 2367 0198 013B     		subs	r3, r3, #1
 2368 019a DBB2     		uxtb	r3, r3
 2369 019c DBB2     		uxtb	r3, r3
 2370 019e 63F01F03 		orn	r3, r3, #31
 2371 01a2 DBB2     		uxtb	r3, r3
 2372 01a4 DBB2     		uxtb	r3, r3
 2373 01a6 7B73     		strb	r3, [r7, #13]
 495:.\protocol.c  ****         buffer[6]=0xF8;
 2374              		.loc 1 495 0
 2375 01a8 F823     		movs	r3, #248
 2376 01aa BB73     		strb	r3, [r7, #14]
 496:.\protocol.c  ****         z=7;
 2377              		.loc 1 496 0
 2378 01ac 0723     		movs	r3, #7
 2379 01ae 7B77     		strb	r3, [r7, #29]
 497:.\protocol.c  ****         if(digits!=7){
 2380              		.loc 1 497 0
 2381 01b0 4C4B     		ldr	r3, .L196
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 53


 2382 01b2 1B78     		ldrb	r3, [r3]
 2383 01b4 DBB2     		uxtb	r3, r3
 2384 01b6 072B     		cmp	r3, #7
 2385 01b8 00F08380 		beq	.L160
 498:.\protocol.c  ****             if(decimal>(decimalVolume-1)){
 2386              		.loc 1 498 0
 2387 01bc 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2388 01be 4A4B     		ldr	r3, .L196+4
 2389 01c0 1B78     		ldrb	r3, [r3]
 2390 01c2 DBB2     		uxtb	r3, r3
 2391 01c4 013B     		subs	r3, r3, #1
 2392 01c6 9A42     		cmp	r2, r3
 2393 01c8 17DD     		ble	.L161
 499:.\protocol.c  ****                 for(x=value[0];x>1;x--){
 2394              		.loc 1 499 0
 2395 01ca 3B68     		ldr	r3, [r7]
 2396 01cc 1B78     		ldrb	r3, [r3]
 2397 01ce FB77     		strb	r3, [r7, #31]
 2398 01d0 0BE0     		b	.L162
 2399              	.L163:
 500:.\protocol.c  ****                     value[x]=value[x-1];
 2400              		.loc 1 500 0 discriminator 3
 2401 01d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2402 01d4 3A68     		ldr	r2, [r7]
 2403 01d6 1344     		add	r3, r3, r2
 2404 01d8 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2405 01da 013A     		subs	r2, r2, #1
 2406 01dc 3968     		ldr	r1, [r7]
 2407 01de 0A44     		add	r2, r2, r1
 2408 01e0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2409 01e2 1A70     		strb	r2, [r3]
 499:.\protocol.c  ****                 for(x=value[0];x>1;x--){
 2410              		.loc 1 499 0 discriminator 3
 2411 01e4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2412 01e6 013B     		subs	r3, r3, #1
 2413 01e8 FB77     		strb	r3, [r7, #31]
 2414              	.L162:
 499:.\protocol.c  ****                 for(x=value[0];x>1;x--){
 2415              		.loc 1 499 0 is_stmt 0 discriminator 1
 2416 01ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2417 01ec 012B     		cmp	r3, #1
 2418 01ee F0D8     		bhi	.L163
 501:.\protocol.c  ****                 }
 502:.\protocol.c  ****                 value[1]='0';
 2419              		.loc 1 502 0 is_stmt 1
 2420 01f0 3B68     		ldr	r3, [r7]
 2421 01f2 0133     		adds	r3, r3, #1
 2422 01f4 3022     		movs	r2, #48
 2423 01f6 1A70     		strb	r2, [r3]
 2424 01f8 42E0     		b	.L164
 2425              	.L161:
 503:.\protocol.c  ****             }else if(decimal<(decimalVolume-1)){
 2426              		.loc 1 503 0
 2427 01fa 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2428 01fc 3A4B     		ldr	r3, .L196+4
 2429 01fe 1B78     		ldrb	r3, [r3]
 2430 0200 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 54


 2431 0202 013B     		subs	r3, r3, #1
 2432 0204 9A42     		cmp	r2, r3
 2433 0206 3BDA     		bge	.L164
 504:.\protocol.c  ****                 y=(decimalVolume-1)-(decimal);
 2434              		.loc 1 504 0
 2435 0208 374B     		ldr	r3, .L196+4
 2436 020a 1B78     		ldrb	r3, [r3]
 2437 020c DAB2     		uxtb	r2, r3
 2438 020e 3B7F     		ldrb	r3, [r7, #28]
 2439 0210 D31A     		subs	r3, r2, r3
 2440 0212 DBB2     		uxtb	r3, r3
 2441 0214 013B     		subs	r3, r3, #1
 2442 0216 BB77     		strb	r3, [r7, #30]
 505:.\protocol.c  ****                 for(x=1;x<=value[0];x++){
 2443              		.loc 1 505 0
 2444 0218 0123     		movs	r3, #1
 2445 021a FB77     		strb	r3, [r7, #31]
 2446 021c 2BE0     		b	.L165
 2447              	.L169:
 506:.\protocol.c  ****                     value[x]=value[y+x];
 2448              		.loc 1 506 0
 2449 021e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2450 0220 3A68     		ldr	r2, [r7]
 2451 0222 1344     		add	r3, r3, r2
 2452 0224 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 2453 0226 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2454 0228 0A44     		add	r2, r2, r1
 2455 022a 1146     		mov	r1, r2
 2456 022c 3A68     		ldr	r2, [r7]
 2457 022e 0A44     		add	r2, r2, r1
 2458 0230 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2459 0232 1A70     		strb	r2, [r3]
 507:.\protocol.c  ****                     if((x+y)==value[0]){
 2460              		.loc 1 507 0
 2461 0234 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2462 0236 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2463 0238 1344     		add	r3, r3, r2
 2464 023a 3A68     		ldr	r2, [r7]
 2465 023c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2466 023e 9342     		cmp	r3, r2
 2467 0240 16D1     		bne	.L166
 508:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2468              		.loc 1 508 0
 2469 0242 0123     		movs	r3, #1
 2470 0244 BB77     		strb	r3, [r7, #30]
 2471 0246 0AE0     		b	.L167
 2472              	.L168:
 509:.\protocol.c  ****                             value[x+y]='0';
 2473              		.loc 1 509 0 discriminator 3
 2474 0248 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2475 024a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2476 024c 1344     		add	r3, r3, r2
 2477 024e 1A46     		mov	r2, r3
 2478 0250 3B68     		ldr	r3, [r7]
 2479 0252 1344     		add	r3, r3, r2
 2480 0254 3022     		movs	r2, #48
 2481 0256 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 55


 508:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2482              		.loc 1 508 0 discriminator 3
 2483 0258 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2484 025a 0133     		adds	r3, r3, #1
 2485 025c BB77     		strb	r3, [r7, #30]
 2486              	.L167:
 508:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2487              		.loc 1 508 0 is_stmt 0 discriminator 1
 2488 025e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2489 0260 3B68     		ldr	r3, [r7]
 2490 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0264 1946     		mov	r1, r3
 2492 0266 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2493 0268 CB1A     		subs	r3, r1, r3
 2494 026a 9A42     		cmp	r2, r3
 2495 026c ECDD     		ble	.L168
 510:.\protocol.c  ****                         }
 511:.\protocol.c  ****                         break;
 2496              		.loc 1 511 0 is_stmt 1
 2497 026e 07E0     		b	.L164
 2498              	.L166:
 505:.\protocol.c  ****                     value[x]=value[y+x];
 2499              		.loc 1 505 0 discriminator 2
 2500 0270 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2501 0272 0133     		adds	r3, r3, #1
 2502 0274 FB77     		strb	r3, [r7, #31]
 2503              	.L165:
 505:.\protocol.c  ****                     value[x]=value[y+x];
 2504              		.loc 1 505 0 is_stmt 0 discriminator 1
 2505 0276 3B68     		ldr	r3, [r7]
 2506 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 027a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2508 027c 9A42     		cmp	r2, r3
 2509 027e CED9     		bls	.L169
 2510              	.L164:
 512:.\protocol.c  ****                     }
 513:.\protocol.c  ****                 }
 514:.\protocol.c  ****             }
 515:.\protocol.c  ****             if(digits==6){
 2511              		.loc 1 515 0 is_stmt 1
 2512 0280 184B     		ldr	r3, .L196
 2513 0282 1B78     		ldrb	r3, [r3]
 2514 0284 DBB2     		uxtb	r3, r3
 2515 0286 062B     		cmp	r3, #6
 2516 0288 40F0A780 		bne	.L179
 516:.\protocol.c  ****                 for(x=1;x<value[0];x++){
 2517              		.loc 1 516 0
 2518 028c 0123     		movs	r3, #1
 2519 028e FB77     		strb	r3, [r7, #31]
 2520 0290 0BE0     		b	.L171
 2521              	.L172:
 517:.\protocol.c  ****                     value[x]=value[x+1];
 2522              		.loc 1 517 0 discriminator 3
 2523 0292 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2524 0294 3A68     		ldr	r2, [r7]
 2525 0296 1344     		add	r3, r3, r2
 2526 0298 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 56


 2527 029a 0132     		adds	r2, r2, #1
 2528 029c 3968     		ldr	r1, [r7]
 2529 029e 0A44     		add	r2, r2, r1
 2530 02a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2531 02a2 1A70     		strb	r2, [r3]
 516:.\protocol.c  ****                 for(x=1;x<value[0];x++){
 2532              		.loc 1 516 0 discriminator 3
 2533 02a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2534 02a6 0133     		adds	r3, r3, #1
 2535 02a8 FB77     		strb	r3, [r7, #31]
 2536              	.L171:
 516:.\protocol.c  ****                 for(x=1;x<value[0];x++){
 2537              		.loc 1 516 0 is_stmt 0 discriminator 1
 2538 02aa 3B68     		ldr	r3, [r7]
 2539 02ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2540 02ae FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2541 02b0 9A42     		cmp	r2, r3
 2542 02b2 EED3     		bcc	.L172
 518:.\protocol.c  ****                 }
 519:.\protocol.c  ****                 value[0]--;
 2543              		.loc 1 519 0 is_stmt 1
 2544 02b4 3B68     		ldr	r3, [r7]
 2545 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2546 02b8 013B     		subs	r3, r3, #1
 2547 02ba DAB2     		uxtb	r2, r3
 2548 02bc 3B68     		ldr	r3, [r7]
 2549 02be 1A70     		strb	r2, [r3]
 2550 02c0 8BE0     		b	.L179
 2551              	.L160:
 520:.\protocol.c  ****             }
 521:.\protocol.c  ****         }else{
 522:.\protocol.c  ****             if(decimal!=decimalVolume){
 2552              		.loc 1 522 0
 2553 02c2 094B     		ldr	r3, .L196+4
 2554 02c4 1B78     		ldrb	r3, [r3]
 2555 02c6 DBB2     		uxtb	r3, r3
 2556 02c8 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2557 02ca 9A42     		cmp	r2, r3
 2558 02cc 00F08580 		beq	.L179
 523:.\protocol.c  ****                 y=decimalVolume-decimal;
 2559              		.loc 1 523 0
 2560 02d0 054B     		ldr	r3, .L196+4
 2561 02d2 1B78     		ldrb	r3, [r3]
 2562 02d4 DAB2     		uxtb	r2, r3
 2563 02d6 3B7F     		ldrb	r3, [r7, #28]
 2564 02d8 D31A     		subs	r3, r2, r3
 2565 02da BB77     		strb	r3, [r7, #30]
 524:.\protocol.c  ****                 for(x=1;x<=value[0];x++){
 2566              		.loc 1 524 0
 2567 02dc 0123     		movs	r3, #1
 2568 02de FB77     		strb	r3, [r7, #31]
 2569 02e0 31E0     		b	.L174
 2570              	.L197:
 2571 02e2 00BF     		.align	2
 2572              	.L196:
 2573 02e4 00000000 		.word	digits
 2574 02e8 00000000 		.word	decimalVolume
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 57


 2575              	.L178:
 525:.\protocol.c  ****                     value[x]=value[y+x];
 2576              		.loc 1 525 0
 2577 02ec FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2578 02ee 3A68     		ldr	r2, [r7]
 2579 02f0 1344     		add	r3, r3, r2
 2580 02f2 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 2581 02f4 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2582 02f6 0A44     		add	r2, r2, r1
 2583 02f8 1146     		mov	r1, r2
 2584 02fa 3A68     		ldr	r2, [r7]
 2585 02fc 0A44     		add	r2, r2, r1
 2586 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2587 0300 1A70     		strb	r2, [r3]
 526:.\protocol.c  ****                     if((x+y)==value[0]){
 2588              		.loc 1 526 0
 2589 0302 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2590 0304 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2591 0306 1344     		add	r3, r3, r2
 2592 0308 3A68     		ldr	r2, [r7]
 2593 030a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2594 030c 9342     		cmp	r3, r2
 2595 030e 17D1     		bne	.L175
 527:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2596              		.loc 1 527 0
 2597 0310 0123     		movs	r3, #1
 2598 0312 BB77     		strb	r3, [r7, #30]
 2599 0314 0AE0     		b	.L176
 2600              	.L177:
 528:.\protocol.c  ****                             value[x+y]='0';
 2601              		.loc 1 528 0 discriminator 3
 2602 0316 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2603 0318 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2604 031a 1344     		add	r3, r3, r2
 2605 031c 1A46     		mov	r2, r3
 2606 031e 3B68     		ldr	r3, [r7]
 2607 0320 1344     		add	r3, r3, r2
 2608 0322 3022     		movs	r2, #48
 2609 0324 1A70     		strb	r2, [r3]
 527:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2610              		.loc 1 527 0 discriminator 3
 2611 0326 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2612 0328 0133     		adds	r3, r3, #1
 2613 032a BB77     		strb	r3, [r7, #30]
 2614              	.L176:
 527:.\protocol.c  ****                         for(y=1;y<=(value[0]-x);y++){
 2615              		.loc 1 527 0 is_stmt 0 discriminator 1
 2616 032c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2617 032e 3B68     		ldr	r3, [r7]
 2618 0330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2619 0332 1946     		mov	r1, r3
 2620 0334 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2621 0336 CB1A     		subs	r3, r1, r3
 2622 0338 9A42     		cmp	r2, r3
 2623 033a ECDD     		ble	.L177
 529:.\protocol.c  ****                         }
 530:.\protocol.c  ****                         break;
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 58


 2624              		.loc 1 530 0 is_stmt 1 discriminator 2
 2625 033c 00BF     		nop
 2626 033e 4CE0     		b	.L179
 2627              	.L175:
 524:.\protocol.c  ****                     value[x]=value[y+x];
 2628              		.loc 1 524 0 discriminator 2
 2629 0340 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2630 0342 0133     		adds	r3, r3, #1
 2631 0344 FB77     		strb	r3, [r7, #31]
 2632              	.L174:
 524:.\protocol.c  ****                     value[x]=value[y+x];
 2633              		.loc 1 524 0 is_stmt 0 discriminator 1
 2634 0346 3B68     		ldr	r3, [r7]
 2635 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2636 034a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2637 034c 9A42     		cmp	r2, r3
 2638 034e CDD9     		bls	.L178
 2639 0350 43E0     		b	.L179
 2640              	.L159:
 531:.\protocol.c  ****                     }
 532:.\protocol.c  ****                 }
 533:.\protocol.c  ****             }
 534:.\protocol.c  ****         }
 535:.\protocol.c  ****     }else{//Dinero
 536:.\protocol.c  ****         buffer[4]=0xF8;	
 2641              		.loc 1 536 0 is_stmt 1
 2642 0352 F823     		movs	r3, #248
 2643 0354 3B73     		strb	r3, [r7, #12]
 537:.\protocol.c  ****         z=5;
 2644              		.loc 1 537 0
 2645 0356 0523     		movs	r3, #5
 2646 0358 7B77     		strb	r3, [r7, #29]
 538:.\protocol.c  ****         if(decimal!=decimalMoney){
 2647              		.loc 1 538 0
 2648 035a 844B     		ldr	r3, .L198
 2649 035c 1B78     		ldrb	r3, [r3]
 2650 035e DBB2     		uxtb	r3, r3
 2651 0360 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2652 0362 9A42     		cmp	r2, r3
 2653 0364 39D0     		beq	.L179
 539:.\protocol.c  ****             y=decimalMoney-decimal;
 2654              		.loc 1 539 0
 2655 0366 814B     		ldr	r3, .L198
 2656 0368 1B78     		ldrb	r3, [r3]
 2657 036a DAB2     		uxtb	r2, r3
 2658 036c 3B7F     		ldrb	r3, [r7, #28]
 2659 036e D31A     		subs	r3, r2, r3
 2660 0370 BB77     		strb	r3, [r7, #30]
 540:.\protocol.c  ****             for(x=1;x<=value[0];x++){
 2661              		.loc 1 540 0
 2662 0372 0123     		movs	r3, #1
 2663 0374 FB77     		strb	r3, [r7, #31]
 2664 0376 2BE0     		b	.L180
 2665              	.L184:
 541:.\protocol.c  ****                 value[x]=value[y+x];
 2666              		.loc 1 541 0
 2667 0378 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 59


 2668 037a 3A68     		ldr	r2, [r7]
 2669 037c 1344     		add	r3, r3, r2
 2670 037e B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 2671 0380 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2672 0382 0A44     		add	r2, r2, r1
 2673 0384 1146     		mov	r1, r2
 2674 0386 3A68     		ldr	r2, [r7]
 2675 0388 0A44     		add	r2, r2, r1
 2676 038a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2677 038c 1A70     		strb	r2, [r3]
 542:.\protocol.c  ****                 if((x+y)==value[0]){
 2678              		.loc 1 542 0
 2679 038e FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2680 0390 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2681 0392 1344     		add	r3, r3, r2
 2682 0394 3A68     		ldr	r2, [r7]
 2683 0396 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2684 0398 9342     		cmp	r3, r2
 2685 039a 16D1     		bne	.L181
 543:.\protocol.c  ****                     for(y=1;y<=(value[0]-x);y++){
 2686              		.loc 1 543 0
 2687 039c 0123     		movs	r3, #1
 2688 039e BB77     		strb	r3, [r7, #30]
 2689 03a0 0AE0     		b	.L182
 2690              	.L183:
 544:.\protocol.c  ****                         value[x+y]='0';
 2691              		.loc 1 544 0 discriminator 3
 2692 03a2 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2693 03a4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2694 03a6 1344     		add	r3, r3, r2
 2695 03a8 1A46     		mov	r2, r3
 2696 03aa 3B68     		ldr	r3, [r7]
 2697 03ac 1344     		add	r3, r3, r2
 2698 03ae 3022     		movs	r2, #48
 2699 03b0 1A70     		strb	r2, [r3]
 543:.\protocol.c  ****                     for(y=1;y<=(value[0]-x);y++){
 2700              		.loc 1 543 0 discriminator 3
 2701 03b2 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2702 03b4 0133     		adds	r3, r3, #1
 2703 03b6 BB77     		strb	r3, [r7, #30]
 2704              	.L182:
 543:.\protocol.c  ****                     for(y=1;y<=(value[0]-x);y++){
 2705              		.loc 1 543 0 is_stmt 0 discriminator 1
 2706 03b8 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2707 03ba 3B68     		ldr	r3, [r7]
 2708 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2709 03be 1946     		mov	r1, r3
 2710 03c0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2711 03c2 CB1A     		subs	r3, r1, r3
 2712 03c4 9A42     		cmp	r2, r3
 2713 03c6 ECDD     		ble	.L183
 545:.\protocol.c  ****                     }
 546:.\protocol.c  ****                     break;
 2714              		.loc 1 546 0 is_stmt 1
 2715 03c8 07E0     		b	.L179
 2716              	.L181:
 540:.\protocol.c  ****                 value[x]=value[y+x];
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 60


 2717              		.loc 1 540 0 discriminator 2
 2718 03ca FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2719 03cc 0133     		adds	r3, r3, #1
 2720 03ce FB77     		strb	r3, [r7, #31]
 2721              	.L180:
 540:.\protocol.c  ****                 value[x]=value[y+x];
 2722              		.loc 1 540 0 is_stmt 0 discriminator 1
 2723 03d0 3B68     		ldr	r3, [r7]
 2724 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2725 03d4 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2726 03d6 9A42     		cmp	r2, r3
 2727 03d8 CED9     		bls	.L184
 2728              	.L179:
 547:.\protocol.c  ****                 }
 548:.\protocol.c  ****             }
 549:.\protocol.c  ****         }
 550:.\protocol.c  ****     }
 551:.\protocol.c  ****     for(x=0;x<value[0];x++){
 2729              		.loc 1 551 0 is_stmt 1
 2730 03da 0023     		movs	r3, #0
 2731 03dc FB77     		strb	r3, [r7, #31]
 2732 03de 1BE0     		b	.L185
 2733              	.L186:
 552:.\protocol.c  ****         buffer[z+x]=0xE0|(value[value[0]-x]&0x0F);
 2734              		.loc 1 552 0 discriminator 3
 2735 03e0 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2736 03e2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2737 03e4 1344     		add	r3, r3, r2
 2738 03e6 3A68     		ldr	r2, [r7]
 2739 03e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2740 03ea 1146     		mov	r1, r2
 2741 03ec FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2742 03ee 8A1A     		subs	r2, r1, r2
 2743 03f0 1146     		mov	r1, r2
 2744 03f2 3A68     		ldr	r2, [r7]
 2745 03f4 0A44     		add	r2, r2, r1
 2746 03f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2747 03f8 D2B2     		uxtb	r2, r2
 2748 03fa 02F00F02 		and	r2, r2, #15
 2749 03fe D2B2     		uxtb	r2, r2
 2750 0400 62F01F02 		orn	r2, r2, #31
 2751 0404 D2B2     		uxtb	r2, r2
 2752 0406 D2B2     		uxtb	r2, r2
 2753 0408 07F12001 		add	r1, r7, #32
 2754 040c 0B44     		add	r3, r3, r1
 2755 040e 03F8182C 		strb	r2, [r3, #-24]
 551:.\protocol.c  ****         buffer[z+x]=0xE0|(value[value[0]-x]&0x0F);
 2756              		.loc 1 551 0 discriminator 3
 2757 0412 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2758 0414 0133     		adds	r3, r3, #1
 2759 0416 FB77     		strb	r3, [r7, #31]
 2760              	.L185:
 551:.\protocol.c  ****         buffer[z+x]=0xE0|(value[value[0]-x]&0x0F);
 2761              		.loc 1 551 0 is_stmt 0 discriminator 1
 2762 0418 3B68     		ldr	r3, [r7]
 2763 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2764 041c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 61


 2765 041e 9A42     		cmp	r2, r3
 2766 0420 DED3     		bcc	.L186
 553:.\protocol.c  ****     }
 554:.\protocol.c  ****     if(value[0]>=7){
 2767              		.loc 1 554 0 is_stmt 1
 2768 0422 3B68     		ldr	r3, [r7]
 2769 0424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2770 0426 062B     		cmp	r3, #6
 2771 0428 0BD9     		bls	.L187
 555:.\protocol.c  ****         buffer[z+x]=0xE0;
 2772              		.loc 1 555 0
 2773 042a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2774 042c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2775 042e 1344     		add	r3, r3, r2
 2776 0430 07F12002 		add	r2, r7, #32
 2777 0434 1344     		add	r3, r3, r2
 2778 0436 E022     		movs	r2, #224
 2779 0438 03F8182C 		strb	r2, [r3, #-24]
 556:.\protocol.c  ****         x++;
 2780              		.loc 1 556 0
 2781 043c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2782 043e 0133     		adds	r3, r3, #1
 2783 0440 FB77     		strb	r3, [r7, #31]
 2784              	.L187:
 557:.\protocol.c  ****     }
 558:.\protocol.c  ****     buffer[z+x]=0xFB;
 2785              		.loc 1 558 0
 2786 0442 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2787 0444 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2788 0446 1344     		add	r3, r3, r2
 2789 0448 07F12002 		add	r2, r7, #32
 2790 044c 1344     		add	r3, r3, r2
 2791 044e FB22     		movs	r2, #251
 2792 0450 03F8182C 		strb	r2, [r3, #-24]
 559:.\protocol.c  ****     z=z+x+1;
 2793              		.loc 1 559 0
 2794 0454 7A7F     		ldrb	r2, [r7, #29]
 2795 0456 FB7F     		ldrb	r3, [r7, #31]
 2796 0458 1344     		add	r3, r3, r2
 2797 045a DBB2     		uxtb	r3, r3
 2798 045c 0133     		adds	r3, r3, #1
 2799 045e 7B77     		strb	r3, [r7, #29]
 560:.\protocol.c  ****     for(x=0;x<z;x++){
 2800              		.loc 1 560 0
 2801 0460 0023     		movs	r3, #0
 2802 0462 FB77     		strb	r3, [r7, #31]
 2803 0464 19E0     		b	.L188
 2804              	.L189:
 561:.\protocol.c  **** 		buffer[z]+=(buffer[x]&0x0F);	
 2805              		.loc 1 561 0 discriminator 3
 2806 0466 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2807 0468 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2808 046a 07F12001 		add	r1, r7, #32
 2809 046e 0A44     		add	r2, r2, r1
 2810 0470 12F8181C 		ldrb	r1, [r2, #-24]	@ zero_extendqisi2
 2811 0474 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2812 0476 07F12000 		add	r0, r7, #32
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 62


 2813 047a 0244     		add	r2, r2, r0
 2814 047c 12F8182C 		ldrb	r2, [r2, #-24]	@ zero_extendqisi2
 2815 0480 02F00F02 		and	r2, r2, #15
 2816 0484 D2B2     		uxtb	r2, r2
 2817 0486 0A44     		add	r2, r2, r1
 2818 0488 D2B2     		uxtb	r2, r2
 2819 048a 07F12001 		add	r1, r7, #32
 2820 048e 0B44     		add	r3, r3, r1
 2821 0490 03F8182C 		strb	r2, [r3, #-24]
 560:.\protocol.c  ****     for(x=0;x<z;x++){
 2822              		.loc 1 560 0 discriminator 3
 2823 0494 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2824 0496 0133     		adds	r3, r3, #1
 2825 0498 FB77     		strb	r3, [r7, #31]
 2826              	.L188:
 560:.\protocol.c  ****     for(x=0;x<z;x++){
 2827              		.loc 1 560 0 is_stmt 0 discriminator 1
 2828 049a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2829 049c 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2830 049e 9A42     		cmp	r2, r3
 2831 04a0 E1D3     		bcc	.L189
 562:.\protocol.c  **** 	}
 563:.\protocol.c  ****     buffer[z]=(((~buffer[z])+1)&0x0F)|0xE0;
 2832              		.loc 1 563 0 is_stmt 1
 2833 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2834 04a4 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2835 04a6 07F12001 		add	r1, r7, #32
 2836 04aa 0A44     		add	r2, r2, r1
 2837 04ac 12F8182C 		ldrb	r2, [r2, #-24]	@ zero_extendqisi2
 2838 04b0 5242     		negs	r2, r2
 2839 04b2 D2B2     		uxtb	r2, r2
 2840 04b4 D2B2     		uxtb	r2, r2
 2841 04b6 02F00F02 		and	r2, r2, #15
 2842 04ba D2B2     		uxtb	r2, r2
 2843 04bc 62F01F02 		orn	r2, r2, #31
 2844 04c0 D2B2     		uxtb	r2, r2
 2845 04c2 D2B2     		uxtb	r2, r2
 2846 04c4 07F12001 		add	r1, r7, #32
 2847 04c8 0B44     		add	r3, r3, r1
 2848 04ca 03F8182C 		strb	r2, [r3, #-24]
 564:.\protocol.c  ****     z++;
 2849              		.loc 1 564 0
 2850 04ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2851 04d0 0133     		adds	r3, r3, #1
 2852 04d2 7B77     		strb	r3, [r7, #29]
 565:.\protocol.c  ****     buffer[z]=0xF0;
 2853              		.loc 1 565 0
 2854 04d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2855 04d6 07F12002 		add	r2, r7, #32
 2856 04da 1344     		add	r3, r3, r2
 2857 04dc F022     		movs	r2, #240
 2858 04de 03F8182C 		strb	r2, [r3, #-24]
 566:.\protocol.c  ****     Pump_AL_ClearRxBuffer();
 2859              		.loc 1 566 0
 2860 04e2 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 567:.\protocol.c  **** 	Pump_AL_PutChar(0x20|pos);	
 2861              		.loc 1 567 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 63


 2862 04e6 FB79     		ldrb	r3, [r7, #7]
 2863 04e8 43F02003 		orr	r3, r3, #32
 2864 04ec DBB2     		uxtb	r3, r3
 2865 04ee 1846     		mov	r0, r3
 2866 04f0 FFF7FEFF 		bl	Pump_AL_PutChar
 568:.\protocol.c  ****     CyDelay(50);
 2867              		.loc 1 568 0
 2868 04f4 3220     		movs	r0, #50
 2869 04f6 FFF7FEFF 		bl	CyDelay
 569:.\protocol.c  ****     if(Pump_AL_GetRxBufferSize()>=1){
 2870              		.loc 1 569 0
 2871 04fa FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 2872 04fe 0346     		mov	r3, r0
 2873 0500 002B     		cmp	r3, #0
 2874 0502 2ED0     		beq	.L190
 570:.\protocol.c  **** 		if(Pump_AL_ReadRxData()==(0xD0|pos)){
 2875              		.loc 1 570 0
 2876 0504 FFF7FEFF 		bl	Pump_AL_ReadRxData
 2877 0508 0346     		mov	r3, r0
 2878 050a 1A46     		mov	r2, r3
 2879 050c FB79     		ldrb	r3, [r7, #7]
 2880 050e 63F02F03 		orn	r3, r3, #47
 2881 0512 DBB2     		uxtb	r3, r3
 2882 0514 9A42     		cmp	r2, r3
 2883 0516 22D1     		bne	.L191
 571:.\protocol.c  ****             Pump_AL_ClearRxBuffer();
 2884              		.loc 1 571 0
 2885 0518 FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 572:.\protocol.c  ****             for(x=0;x<=z;x++){
 2886              		.loc 1 572 0
 2887 051c 0023     		movs	r3, #0
 2888 051e FB77     		strb	r3, [r7, #31]
 2889 0520 0BE0     		b	.L192
 2890              	.L193:
 573:.\protocol.c  ****                	Pump_AL_PutChar(buffer[x]);
 2891              		.loc 1 573 0 discriminator 3
 2892 0522 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2893 0524 07F12002 		add	r2, r7, #32
 2894 0528 1344     		add	r3, r3, r2
 2895 052a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2896 052e 1846     		mov	r0, r3
 2897 0530 FFF7FEFF 		bl	Pump_AL_PutChar
 572:.\protocol.c  ****             for(x=0;x<=z;x++){
 2898              		.loc 1 572 0 discriminator 3
 2899 0534 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2900 0536 0133     		adds	r3, r3, #1
 2901 0538 FB77     		strb	r3, [r7, #31]
 2902              	.L192:
 572:.\protocol.c  ****             for(x=0;x<=z;x++){
 2903              		.loc 1 572 0 is_stmt 0 discriminator 1
 2904 053a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2905 053c 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2906 053e 9A42     		cmp	r2, r3
 2907 0540 EFD9     		bls	.L193
 574:.\protocol.c  ****             }
 575:.\protocol.c  **** 			CyDelay(50);
 2908              		.loc 1 575 0 is_stmt 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 64


 2909 0542 3220     		movs	r0, #50
 2910 0544 FFF7FEFF 		bl	CyDelay
 576:.\protocol.c  **** 			if(get_state(pos)==0){
 2911              		.loc 1 576 0
 2912 0548 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2913 054a 1846     		mov	r0, r3
 2914 054c FFF7FEFF 		bl	get_state
 2915 0550 0346     		mov	r3, r0
 2916 0552 002B     		cmp	r3, #0
 2917 0554 01D1     		bne	.L194
 577:.\protocol.c  **** 				return 0; 
 2918              		.loc 1 577 0
 2919 0556 0023     		movs	r3, #0
 2920 0558 04E0     		b	.L195
 2921              	.L194:
 578:.\protocol.c  **** 			}
 579:.\protocol.c  **** 			else{
 580:.\protocol.c  **** 				return 1;
 2922              		.loc 1 580 0
 2923 055a 0123     		movs	r3, #1
 2924 055c 02E0     		b	.L195
 2925              	.L191:
 581:.\protocol.c  **** 			}
 582:.\protocol.c  **** 		}
 583:.\protocol.c  **** 		else{
 584:.\protocol.c  **** 			return 0;
 2926              		.loc 1 584 0
 2927 055e 0023     		movs	r3, #0
 2928 0560 00E0     		b	.L195
 2929              	.L190:
 585:.\protocol.c  **** 		}
 586:.\protocol.c  **** 	}
 587:.\protocol.c  **** 	else{
 588:.\protocol.c  **** 		return 0;	
 2930              		.loc 1 588 0
 2931 0562 0023     		movs	r3, #0
 2932              	.L195:
 589:.\protocol.c  **** 	}      
 590:.\protocol.c  **** }
 2933              		.loc 1 590 0 discriminator 3
 2934 0564 1846     		mov	r0, r3
 2935 0566 2037     		adds	r7, r7, #32
 2936              		.cfi_def_cfa_offset 8
 2937 0568 BD46     		mov	sp, r7
 2938              		.cfi_def_cfa_register 13
 2939              		@ sp needed
 2940 056a 80BD     		pop	{r7, pc}
 2941              	.L199:
 2942              		.align	2
 2943              	.L198:
 2944 056c 00000000 		.word	decimalMoney
 2945              		.cfi_endproc
 2946              	.LFE61:
 2947              		.size	preset_data, .-preset_data
 2948              		.section	.text.get_sale,"ax",%progbits
 2949              		.align	2
 2950              		.global	get_sale
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 65


 2951              		.thumb
 2952              		.thumb_func
 2953              		.type	get_sale, %function
 2954              	get_sale:
 2955              	.LFB62:
 591:.\protocol.c  **** 
 592:.\protocol.c  **** 
 593:.\protocol.c  **** /*
 594:.\protocol.c  **** ***************************************************************************************************
 595:.\protocol.c  **** *                                         uint8 get_sale(uint8 pos)
 596:.\protocol.c  **** *
 597:.\protocol.c  **** * Description : 
 598:.\protocol.c  **** *               
 599:.\protocol.c  **** *
 600:.\protocol.c  **** * Argument(s) : none
 601:.\protocol.c  **** *
 602:.\protocol.c  **** * Return(s)   : none
 603:.\protocol.c  **** *
 604:.\protocol.c  **** * Caller(s)   : 
 605:.\protocol.c  **** *
 606:.\protocol.c  **** * Note(s)     : none.
 607:.\protocol.c  **** ***************************************************************************************************
 608:.\protocol.c  **** */
 609:.\protocol.c  **** uint8 get_sale(uint8 pos){
 2956              		.loc 1 609 0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 16
 2959              		@ frame_needed = 1, uses_anonymous_args = 0
 2960 0000 80B5     		push	{r7, lr}
 2961              		.cfi_def_cfa_offset 8
 2962              		.cfi_offset 7, -8
 2963              		.cfi_offset 14, -4
 2964 0002 84B0     		sub	sp, sp, #16
 2965              		.cfi_def_cfa_offset 24
 2966 0004 00AF     		add	r7, sp, #0
 2967              		.cfi_def_cfa_register 7
 2968 0006 0346     		mov	r3, r0
 2969 0008 FB71     		strb	r3, [r7, #7]
 610:.\protocol.c  **** 	uint8 x;
 611:.\protocol.c  **** 	Pump_AL_ClearRxBuffer();
 2970              		.loc 1 611 0
 2971 000a FFF7FEFF 		bl	Pump_AL_ClearRxBuffer
 612:.\protocol.c  **** 	Pump_AL_PutChar(0x40|pos);
 2972              		.loc 1 612 0
 2973 000e FB79     		ldrb	r3, [r7, #7]
 2974 0010 43F04003 		orr	r3, r3, #64
 2975 0014 DBB2     		uxtb	r3, r3
 2976 0016 1846     		mov	r0, r3
 2977 0018 FFF7FEFF 		bl	Pump_AL_PutChar
 613:.\protocol.c  ****     CyDelay(300);
 2978              		.loc 1 613 0
 2979 001c 4FF49670 		mov	r0, #300
 2980 0020 FFF7FEFF 		bl	CyDelay
 614:.\protocol.c  ****     CyWdtClear();
 2981              		.loc 1 614 0
 2982 0024 FFF7FEFF 		bl	CyWdtClear
 615:.\protocol.c  **** 	if((digits!=7)&&(Pump_AL_GetRxBufferSize()==33)){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 66


 2983              		.loc 1 615 0
 2984 0028 A74B     		ldr	r3, .L242
 2985 002a 1B78     		ldrb	r3, [r3]
 2986 002c DBB2     		uxtb	r3, r3
 2987 002e 072B     		cmp	r3, #7
 2988 0030 00F05281 		beq	.L201
 2989              		.loc 1 615 0 is_stmt 0 discriminator 1
 2990 0034 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 2991 0038 0346     		mov	r3, r0
 2992 003a 212B     		cmp	r3, #33
 2993 003c 40F04C81 		bne	.L201
 616:.\protocol.c  **** 		if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[2]==0xF8)&&(Pump_AL_rxBuffer[32]==0xF0)){
 2994              		.loc 1 616 0 is_stmt 1
 2995 0040 A24B     		ldr	r3, .L242+4
 2996 0042 1B78     		ldrb	r3, [r3]
 2997 0044 DBB2     		uxtb	r3, r3
 2998 0046 FF2B     		cmp	r3, #255
 2999 0048 40F03C81 		bne	.L202
 3000              		.loc 1 616 0 is_stmt 0 discriminator 1
 3001 004c 9F4B     		ldr	r3, .L242+4
 3002 004e 9B78     		ldrb	r3, [r3, #2]
 3003 0050 DBB2     		uxtb	r3, r3
 3004 0052 F82B     		cmp	r3, #248
 3005 0054 40F03681 		bne	.L202
 3006              		.loc 1 616 0 discriminator 2
 3007 0058 9C4B     		ldr	r3, .L242+4
 3008 005a 93F82030 		ldrb	r3, [r3, #32]
 3009 005e DBB2     		uxtb	r3, r3
 3010 0060 F02B     		cmp	r3, #240
 3011 0062 40F02F81 		bne	.L202
 617:.\protocol.c  **** 			if(pos==side.a.dir){
 3012              		.loc 1 617 0 is_stmt 1
 3013 0066 9A4B     		ldr	r3, .L242+8
 3014 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3015 006a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3016 006c 9A42     		cmp	r2, r3
 3017 006e 40F09480 		bne	.L203
 618:.\protocol.c  **** 				side.a.productSale=((Pump_AL_rxBuffer[9]&0x0F)+1)+0x30;
 3018              		.loc 1 618 0
 3019 0072 964B     		ldr	r3, .L242+4
 3020 0074 5B7A     		ldrb	r3, [r3, #9]
 3021 0076 DBB2     		uxtb	r3, r3
 3022 0078 03F00F03 		and	r3, r3, #15
 3023 007c DBB2     		uxtb	r3, r3
 3024 007e 3133     		adds	r3, r3, #49
 3025 0080 DAB2     		uxtb	r2, r3
 3026 0082 934B     		ldr	r3, .L242+8
 3027 0084 83F8FF20 		strb	r2, [r3, #255]
 619:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3028              		.loc 1 619 0
 3029 0088 0123     		movs	r3, #1
 3030 008a FB73     		strb	r3, [r7, #15]
 3031 008c 14E0     		b	.L204
 3032              	.L205:
 620:.\protocol.c  **** 					side.a.ppuSale[5-x]=((Pump_AL_rxBuffer[x+11]&0x0F)+0x30);
 3033              		.loc 1 620 0 discriminator 3
 3034 008e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 67


 3035 0090 C3F10503 		rsb	r3, r3, #5
 3036 0094 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3037 0096 0B32     		adds	r2, r2, #11
 3038 0098 8C49     		ldr	r1, .L242+4
 3039 009a 8A5C     		ldrb	r2, [r1, r2]
 3040 009c D2B2     		uxtb	r2, r2
 3041 009e 02F00F02 		and	r2, r2, #15
 3042 00a2 D2B2     		uxtb	r2, r2
 3043 00a4 3032     		adds	r2, r2, #48
 3044 00a6 D1B2     		uxtb	r1, r2
 3045 00a8 894A     		ldr	r2, .L242+8
 3046 00aa 1344     		add	r3, r3, r2
 3047 00ac 0A46     		mov	r2, r1
 3048 00ae 83F8F120 		strb	r2, [r3, #241]
 619:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3049              		.loc 1 619 0 discriminator 3
 3050 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3051 00b4 0133     		adds	r3, r3, #1
 3052 00b6 FB73     		strb	r3, [r7, #15]
 3053              	.L204:
 619:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3054              		.loc 1 619 0 is_stmt 0 discriminator 1
 3055 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3056 00ba 042B     		cmp	r3, #4
 3057 00bc E7D9     		bls	.L205
 621:.\protocol.c  **** 				}
 622:.\protocol.c  ****                 side.a.ppuSale[0]=4;
 3058              		.loc 1 622 0 is_stmt 1
 3059 00be 844B     		ldr	r3, .L242+8
 3060 00c0 0422     		movs	r2, #4
 3061 00c2 83F8F120 		strb	r2, [r3, #241]
 623:.\protocol.c  ****                 if(ppux10==1){
 3062              		.loc 1 623 0
 3063 00c6 834B     		ldr	r3, .L242+12
 3064 00c8 1B78     		ldrb	r3, [r3]
 3065 00ca DBB2     		uxtb	r3, r3
 3066 00cc 012B     		cmp	r3, #1
 3067 00ce 07D1     		bne	.L206
 624:.\protocol.c  ****                     side.a.ppuSale[0]=5;
 3068              		.loc 1 624 0
 3069 00d0 7F4B     		ldr	r3, .L242+8
 3070 00d2 0522     		movs	r2, #5
 3071 00d4 83F8F120 		strb	r2, [r3, #241]
 625:.\protocol.c  ****                     side.a.ppuSale[5]='0';
 3072              		.loc 1 625 0
 3073 00d8 7D4B     		ldr	r3, .L242+8
 3074 00da 3022     		movs	r2, #48
 3075 00dc 83F8F620 		strb	r2, [r3, #246]
 3076              	.L206:
 626:.\protocol.c  ****                 }
 627:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3077              		.loc 1 627 0
 3078 00e0 0123     		movs	r3, #1
 3079 00e2 FB73     		strb	r3, [r7, #15]
 3080 00e4 14E0     		b	.L207
 3081              	.L208:
 628:.\protocol.c  **** 					side.a.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 68


 3082              		.loc 1 628 0 discriminator 3
 3083 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3084 00e8 C3F10703 		rsb	r3, r3, #7
 3085 00ec FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3086 00ee 1032     		adds	r2, r2, #16
 3087 00f0 7649     		ldr	r1, .L242+4
 3088 00f2 8A5C     		ldrb	r2, [r1, r2]
 3089 00f4 D2B2     		uxtb	r2, r2
 3090 00f6 02F00F02 		and	r2, r2, #15
 3091 00fa D2B2     		uxtb	r2, r2
 3092 00fc 3032     		adds	r2, r2, #48
 3093 00fe D1B2     		uxtb	r1, r2
 3094 0100 734A     		ldr	r2, .L242+8
 3095 0102 1344     		add	r3, r3, r2
 3096 0104 0A46     		mov	r2, r1
 3097 0106 83F8E320 		strb	r2, [r3, #227]
 627:.\protocol.c  **** 					side.a.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
 3098              		.loc 1 627 0 discriminator 3
 3099 010a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3100 010c 0133     		adds	r3, r3, #1
 3101 010e FB73     		strb	r3, [r7, #15]
 3102              	.L207:
 627:.\protocol.c  **** 					side.a.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
 3103              		.loc 1 627 0 is_stmt 0 discriminator 1
 3104 0110 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3105 0112 062B     		cmp	r3, #6
 3106 0114 E7D9     		bls	.L208
 629:.\protocol.c  **** 				}		
 630:.\protocol.c  ****                 side.a.volumeSale[0]=6;
 3107              		.loc 1 630 0 is_stmt 1
 3108 0116 6E4B     		ldr	r3, .L242+8
 3109 0118 0622     		movs	r2, #6
 3110 011a 83F8E320 		strb	r2, [r3, #227]
 631:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3111              		.loc 1 631 0
 3112 011e 0123     		movs	r3, #1
 3113 0120 FB73     		strb	r3, [r7, #15]
 3114 0122 14E0     		b	.L209
 3115              	.L210:
 632:.\protocol.c  **** 					side.a.moneySale[7-x]=((Pump_AL_rxBuffer[x+23]&0x0F)+0x30);
 3116              		.loc 1 632 0 discriminator 3
 3117 0124 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3118 0126 C3F10703 		rsb	r3, r3, #7
 3119 012a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3120 012c 1732     		adds	r2, r2, #23
 3121 012e 6749     		ldr	r1, .L242+4
 3122 0130 8A5C     		ldrb	r2, [r1, r2]
 3123 0132 D2B2     		uxtb	r2, r2
 3124 0134 02F00F02 		and	r2, r2, #15
 3125 0138 D2B2     		uxtb	r2, r2
 3126 013a 3032     		adds	r2, r2, #48
 3127 013c D1B2     		uxtb	r1, r2
 3128 013e 644A     		ldr	r2, .L242+8
 3129 0140 1344     		add	r3, r3, r2
 3130 0142 0A46     		mov	r2, r1
 3131 0144 83F8D520 		strb	r2, [r3, #213]
 631:.\protocol.c  **** 				for(x=1;x<=6;x++){
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 69


 3132              		.loc 1 631 0 discriminator 3
 3133 0148 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3134 014a 0133     		adds	r3, r3, #1
 3135 014c FB73     		strb	r3, [r7, #15]
 3136              	.L209:
 631:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3137              		.loc 1 631 0 is_stmt 0 discriminator 1
 3138 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3139 0150 062B     		cmp	r3, #6
 3140 0152 E7D9     		bls	.L210
 633:.\protocol.c  **** 				}
 634:.\protocol.c  ****                 if(digits==5){
 3141              		.loc 1 634 0 is_stmt 1
 3142 0154 5C4B     		ldr	r3, .L242
 3143 0156 1B78     		ldrb	r3, [r3]
 3144 0158 DBB2     		uxtb	r3, r3
 3145 015a 052B     		cmp	r3, #5
 3146 015c 18D1     		bne	.L211
 635:.\protocol.c  ****                     for(x=6;x>1;x--){
 3147              		.loc 1 635 0
 3148 015e 0623     		movs	r3, #6
 3149 0160 FB73     		strb	r3, [r7, #15]
 3150 0162 0EE0     		b	.L212
 3151              	.L213:
 636:.\protocol.c  ****                         side.a.moneySale[x]=side.a.moneySale[x-1];
 3152              		.loc 1 636 0 discriminator 3
 3153 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3154 0166 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3155 0168 013A     		subs	r2, r2, #1
 3156 016a 5949     		ldr	r1, .L242+8
 3157 016c 0A44     		add	r2, r2, r1
 3158 016e 92F8D510 		ldrb	r1, [r2, #213]	@ zero_extendqisi2
 3159 0172 574A     		ldr	r2, .L242+8
 3160 0174 1344     		add	r3, r3, r2
 3161 0176 0A46     		mov	r2, r1
 3162 0178 83F8D520 		strb	r2, [r3, #213]
 635:.\protocol.c  ****                     for(x=6;x>1;x--){
 3163              		.loc 1 635 0 discriminator 3
 3164 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3165 017e 013B     		subs	r3, r3, #1
 3166 0180 FB73     		strb	r3, [r7, #15]
 3167              	.L212:
 635:.\protocol.c  ****                     for(x=6;x>1;x--){
 3168              		.loc 1 635 0 is_stmt 0 discriminator 1
 3169 0182 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3170 0184 012B     		cmp	r3, #1
 3171 0186 EDD8     		bhi	.L213
 637:.\protocol.c  ****                     }
 638:.\protocol.c  ****                     side.a.moneySale[1]='0';
 3172              		.loc 1 638 0 is_stmt 1
 3173 0188 514B     		ldr	r3, .L242+8
 3174 018a 3022     		movs	r2, #48
 3175 018c 83F8D620 		strb	r2, [r3, #214]
 3176              	.L211:
 639:.\protocol.c  ****                 }
 640:.\protocol.c  ****                 side.a.moneySale[0]=6;
 3177              		.loc 1 640 0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 70


 3178 0190 4F4B     		ldr	r3, .L242+8
 3179 0192 0622     		movs	r2, #6
 3180 0194 83F8D520 		strb	r2, [r3, #213]
 3181 0198 92E0     		b	.L214
 3182              	.L203:
 641:.\protocol.c  **** 			}
 642:.\protocol.c  **** 			else{
 643:.\protocol.c  **** 				side.b.productSale=((Pump_AL_rxBuffer[9]&0x0F)+1)+0x30;
 3183              		.loc 1 643 0
 3184 019a 4C4B     		ldr	r3, .L242+4
 3185 019c 5B7A     		ldrb	r3, [r3, #9]
 3186 019e DBB2     		uxtb	r3, r3
 3187 01a0 03F00F03 		and	r3, r3, #15
 3188 01a4 DBB2     		uxtb	r3, r3
 3189 01a6 3133     		adds	r3, r3, #49
 3190 01a8 DAB2     		uxtb	r2, r3
 3191 01aa 494B     		ldr	r3, .L242+8
 3192 01ac 83F8FF21 		strb	r2, [r3, #511]
 644:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3193              		.loc 1 644 0
 3194 01b0 0123     		movs	r3, #1
 3195 01b2 FB73     		strb	r3, [r7, #15]
 3196 01b4 14E0     		b	.L215
 3197              	.L216:
 645:.\protocol.c  **** 					side.b.ppuSale[5-x]=((Pump_AL_rxBuffer[x+11]&0x0F)+0x30);
 3198              		.loc 1 645 0 discriminator 3
 3199 01b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3200 01b8 C3F10503 		rsb	r3, r3, #5
 3201 01bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3202 01be 0B32     		adds	r2, r2, #11
 3203 01c0 4249     		ldr	r1, .L242+4
 3204 01c2 8A5C     		ldrb	r2, [r1, r2]
 3205 01c4 D2B2     		uxtb	r2, r2
 3206 01c6 02F00F02 		and	r2, r2, #15
 3207 01ca D2B2     		uxtb	r2, r2
 3208 01cc 3032     		adds	r2, r2, #48
 3209 01ce D1B2     		uxtb	r1, r2
 3210 01d0 3F4A     		ldr	r2, .L242+8
 3211 01d2 1344     		add	r3, r3, r2
 3212 01d4 0A46     		mov	r2, r1
 3213 01d6 83F8F121 		strb	r2, [r3, #497]
 644:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3214              		.loc 1 644 0 discriminator 3
 3215 01da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3216 01dc 0133     		adds	r3, r3, #1
 3217 01de FB73     		strb	r3, [r7, #15]
 3218              	.L215:
 644:.\protocol.c  **** 				for(x=1;x<=4;x++){
 3219              		.loc 1 644 0 is_stmt 0 discriminator 1
 3220 01e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3221 01e2 042B     		cmp	r3, #4
 3222 01e4 E7D9     		bls	.L216
 646:.\protocol.c  **** 				}
 647:.\protocol.c  ****                 side.b.ppuSale[0]=4;
 3223              		.loc 1 647 0 is_stmt 1
 3224 01e6 3A4B     		ldr	r3, .L242+8
 3225 01e8 0422     		movs	r2, #4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 71


 3226 01ea 83F8F121 		strb	r2, [r3, #497]
 648:.\protocol.c  ****                 if(ppux10==1){
 3227              		.loc 1 648 0
 3228 01ee 394B     		ldr	r3, .L242+12
 3229 01f0 1B78     		ldrb	r3, [r3]
 3230 01f2 DBB2     		uxtb	r3, r3
 3231 01f4 012B     		cmp	r3, #1
 3232 01f6 07D1     		bne	.L217
 649:.\protocol.c  ****                     side.b.ppuSale[0]=5;
 3233              		.loc 1 649 0
 3234 01f8 354B     		ldr	r3, .L242+8
 3235 01fa 0522     		movs	r2, #5
 3236 01fc 83F8F121 		strb	r2, [r3, #497]
 650:.\protocol.c  ****                     side.b.ppuSale[5]='0';
 3237              		.loc 1 650 0
 3238 0200 334B     		ldr	r3, .L242+8
 3239 0202 3022     		movs	r2, #48
 3240 0204 83F8F621 		strb	r2, [r3, #502]
 3241              	.L217:
 651:.\protocol.c  ****                 }
 652:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3242              		.loc 1 652 0
 3243 0208 0123     		movs	r3, #1
 3244 020a FB73     		strb	r3, [r7, #15]
 3245 020c 14E0     		b	.L218
 3246              	.L219:
 653:.\protocol.c  **** 					side.b.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
 3247              		.loc 1 653 0 discriminator 3
 3248 020e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3249 0210 C3F10703 		rsb	r3, r3, #7
 3250 0214 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3251 0216 1032     		adds	r2, r2, #16
 3252 0218 2C49     		ldr	r1, .L242+4
 3253 021a 8A5C     		ldrb	r2, [r1, r2]
 3254 021c D2B2     		uxtb	r2, r2
 3255 021e 02F00F02 		and	r2, r2, #15
 3256 0222 D2B2     		uxtb	r2, r2
 3257 0224 3032     		adds	r2, r2, #48
 3258 0226 D1B2     		uxtb	r1, r2
 3259 0228 294A     		ldr	r2, .L242+8
 3260 022a 1344     		add	r3, r3, r2
 3261 022c 0A46     		mov	r2, r1
 3262 022e 83F8E321 		strb	r2, [r3, #483]
 652:.\protocol.c  **** 					side.b.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
 3263              		.loc 1 652 0 discriminator 3
 3264 0232 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3265 0234 0133     		adds	r3, r3, #1
 3266 0236 FB73     		strb	r3, [r7, #15]
 3267              	.L218:
 652:.\protocol.c  **** 					side.b.volumeSale[7-x]=((Pump_AL_rxBuffer[x+16]&0x0F)+0x30);
 3268              		.loc 1 652 0 is_stmt 0 discriminator 1
 3269 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3270 023a 062B     		cmp	r3, #6
 3271 023c E7D9     		bls	.L219
 654:.\protocol.c  **** 				}
 655:.\protocol.c  ****                 side.b.volumeSale[0]=6;
 3272              		.loc 1 655 0 is_stmt 1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 72


 3273 023e 244B     		ldr	r3, .L242+8
 3274 0240 0622     		movs	r2, #6
 3275 0242 83F8E321 		strb	r2, [r3, #483]
 656:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3276              		.loc 1 656 0
 3277 0246 0123     		movs	r3, #1
 3278 0248 FB73     		strb	r3, [r7, #15]
 3279 024a 14E0     		b	.L220
 3280              	.L221:
 657:.\protocol.c  **** 					side.b.moneySale[7-x]=((Pump_AL_rxBuffer[x+23]&0x0F)+0x30);
 3281              		.loc 1 657 0 discriminator 3
 3282 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3283 024e C3F10703 		rsb	r3, r3, #7
 3284 0252 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3285 0254 1732     		adds	r2, r2, #23
 3286 0256 1D49     		ldr	r1, .L242+4
 3287 0258 8A5C     		ldrb	r2, [r1, r2]
 3288 025a D2B2     		uxtb	r2, r2
 3289 025c 02F00F02 		and	r2, r2, #15
 3290 0260 D2B2     		uxtb	r2, r2
 3291 0262 3032     		adds	r2, r2, #48
 3292 0264 D1B2     		uxtb	r1, r2
 3293 0266 1A4A     		ldr	r2, .L242+8
 3294 0268 1344     		add	r3, r3, r2
 3295 026a 0A46     		mov	r2, r1
 3296 026c 83F8D521 		strb	r2, [r3, #469]
 656:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3297              		.loc 1 656 0 discriminator 3
 3298 0270 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3299 0272 0133     		adds	r3, r3, #1
 3300 0274 FB73     		strb	r3, [r7, #15]
 3301              	.L220:
 656:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3302              		.loc 1 656 0 is_stmt 0 discriminator 1
 3303 0276 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3304 0278 062B     		cmp	r3, #6
 3305 027a E7D9     		bls	.L221
 658:.\protocol.c  **** 				}	
 659:.\protocol.c  ****                 if(digits==5){
 3306              		.loc 1 659 0 is_stmt 1
 3307 027c 124B     		ldr	r3, .L242
 3308 027e 1B78     		ldrb	r3, [r3]
 3309 0280 DBB2     		uxtb	r3, r3
 3310 0282 052B     		cmp	r3, #5
 3311 0284 18D1     		bne	.L222
 660:.\protocol.c  ****                     for(x=6;x>1;x--){
 3312              		.loc 1 660 0
 3313 0286 0623     		movs	r3, #6
 3314 0288 FB73     		strb	r3, [r7, #15]
 3315 028a 0EE0     		b	.L223
 3316              	.L224:
 661:.\protocol.c  ****                         side.b.moneySale[x]=side.b.moneySale[x-1];
 3317              		.loc 1 661 0 discriminator 3
 3318 028c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3319 028e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3320 0290 013A     		subs	r2, r2, #1
 3321 0292 0F49     		ldr	r1, .L242+8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 73


 3322 0294 0A44     		add	r2, r2, r1
 3323 0296 92F8D511 		ldrb	r1, [r2, #469]	@ zero_extendqisi2
 3324 029a 0D4A     		ldr	r2, .L242+8
 3325 029c 1344     		add	r3, r3, r2
 3326 029e 0A46     		mov	r2, r1
 3327 02a0 83F8D521 		strb	r2, [r3, #469]
 660:.\protocol.c  ****                     for(x=6;x>1;x--){
 3328              		.loc 1 660 0 discriminator 3
 3329 02a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3330 02a6 013B     		subs	r3, r3, #1
 3331 02a8 FB73     		strb	r3, [r7, #15]
 3332              	.L223:
 660:.\protocol.c  ****                     for(x=6;x>1;x--){
 3333              		.loc 1 660 0 is_stmt 0 discriminator 1
 3334 02aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3335 02ac 012B     		cmp	r3, #1
 3336 02ae EDD8     		bhi	.L224
 662:.\protocol.c  ****                     }
 663:.\protocol.c  ****                     side.b.moneySale[1]='0';
 3337              		.loc 1 663 0 is_stmt 1
 3338 02b0 074B     		ldr	r3, .L242+8
 3339 02b2 3022     		movs	r2, #48
 3340 02b4 83F8D621 		strb	r2, [r3, #470]
 3341              	.L222:
 664:.\protocol.c  ****                 }
 665:.\protocol.c  ****                 side.b.moneySale[0]=6;
 3342              		.loc 1 665 0
 3343 02b8 054B     		ldr	r3, .L242+8
 3344 02ba 0622     		movs	r2, #6
 3345 02bc 83F8D521 		strb	r2, [r3, #469]
 3346              	.L214:
 666:.\protocol.c  **** 			}
 667:.\protocol.c  **** 			return 1;
 3347              		.loc 1 667 0
 3348 02c0 0123     		movs	r3, #1
 3349 02c2 0BE1     		b	.L225
 3350              	.L202:
 668:.\protocol.c  **** 		}
 669:.\protocol.c  **** 		else{
 670:.\protocol.c  **** 			return 0;
 3351              		.loc 1 670 0
 3352 02c4 0023     		movs	r3, #0
 3353 02c6 09E1     		b	.L225
 3354              	.L243:
 3355              		.align	2
 3356              	.L242:
 3357 02c8 00000000 		.word	digits
 3358 02cc 00000000 		.word	Pump_AL_rxBuffer
 3359 02d0 00000000 		.word	side
 3360 02d4 00000000 		.word	ppux10
 3361              	.L201:
 671:.\protocol.c  **** 		}
 672:.\protocol.c  **** 	}
 673:.\protocol.c  **** 	else if((digits==7)&&(Pump_AL_GetRxBufferSize()==39)){
 3362              		.loc 1 673 0
 3363 02d8 824B     		ldr	r3, .L244
 3364 02da 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 74


 3365 02dc DBB2     		uxtb	r3, r3
 3366 02de 072B     		cmp	r3, #7
 3367 02e0 40F0FB80 		bne	.L226
 3368              		.loc 1 673 0 is_stmt 0 discriminator 1
 3369 02e4 FFF7FEFF 		bl	Pump_AL_GetRxBufferSize
 3370 02e8 0346     		mov	r3, r0
 3371 02ea 272B     		cmp	r3, #39
 3372 02ec 40F0F580 		bne	.L226
 674:.\protocol.c  **** 		if((Pump_AL_rxBuffer[0]==0xFF)&&(Pump_AL_rxBuffer[2]==0xF8)&&(Pump_AL_rxBuffer[38]==0xF0)){
 3373              		.loc 1 674 0 is_stmt 1
 3374 02f0 7D4B     		ldr	r3, .L244+4
 3375 02f2 1B78     		ldrb	r3, [r3]
 3376 02f4 DBB2     		uxtb	r3, r3
 3377 02f6 FF2B     		cmp	r3, #255
 3378 02f8 40F0ED80 		bne	.L227
 3379              		.loc 1 674 0 is_stmt 0 discriminator 1
 3380 02fc 7A4B     		ldr	r3, .L244+4
 3381 02fe 9B78     		ldrb	r3, [r3, #2]
 3382 0300 DBB2     		uxtb	r3, r3
 3383 0302 F82B     		cmp	r3, #248
 3384 0304 40F0E780 		bne	.L227
 3385              		.loc 1 674 0 discriminator 2
 3386 0308 774B     		ldr	r3, .L244+4
 3387 030a 93F82630 		ldrb	r3, [r3, #38]
 3388 030e DBB2     		uxtb	r3, r3
 3389 0310 F02B     		cmp	r3, #240
 3390 0312 40F0E080 		bne	.L227
 675:.\protocol.c  **** 			if(pos==side.a.dir){
 3391              		.loc 1 675 0 is_stmt 1
 3392 0316 754B     		ldr	r3, .L244+8
 3393 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3395 031c 9A42     		cmp	r2, r3
 3396 031e 6CD1     		bne	.L228
 676:.\protocol.c  **** 				side.a.productSale=((Pump_AL_rxBuffer[9]&0x0F)+1)+0x30;
 3397              		.loc 1 676 0
 3398 0320 714B     		ldr	r3, .L244+4
 3399 0322 5B7A     		ldrb	r3, [r3, #9]
 3400 0324 DBB2     		uxtb	r3, r3
 3401 0326 03F00F03 		and	r3, r3, #15
 3402 032a DBB2     		uxtb	r3, r3
 3403 032c 3133     		adds	r3, r3, #49
 3404 032e DAB2     		uxtb	r2, r3
 3405 0330 6E4B     		ldr	r3, .L244+8
 3406 0332 83F8FF20 		strb	r2, [r3, #255]
 677:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3407              		.loc 1 677 0
 3408 0336 0123     		movs	r3, #1
 3409 0338 FB73     		strb	r3, [r7, #15]
 3410 033a 14E0     		b	.L229
 3411              	.L230:
 678:.\protocol.c  **** 					side.a.ppuSale[7-x]=((Pump_AL_rxBuffer[x+11]&0x0F)+0x30);
 3412              		.loc 1 678 0 discriminator 3
 3413 033c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3414 033e C3F10703 		rsb	r3, r3, #7
 3415 0342 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3416 0344 0B32     		adds	r2, r2, #11
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 75


 3417 0346 6849     		ldr	r1, .L244+4
 3418 0348 8A5C     		ldrb	r2, [r1, r2]
 3419 034a D2B2     		uxtb	r2, r2
 3420 034c 02F00F02 		and	r2, r2, #15
 3421 0350 D2B2     		uxtb	r2, r2
 3422 0352 3032     		adds	r2, r2, #48
 3423 0354 D1B2     		uxtb	r1, r2
 3424 0356 654A     		ldr	r2, .L244+8
 3425 0358 1344     		add	r3, r3, r2
 3426 035a 0A46     		mov	r2, r1
 3427 035c 83F8F120 		strb	r2, [r3, #241]
 677:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3428              		.loc 1 677 0 discriminator 3
 3429 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3430 0362 0133     		adds	r3, r3, #1
 3431 0364 FB73     		strb	r3, [r7, #15]
 3432              	.L229:
 677:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3433              		.loc 1 677 0 is_stmt 0 discriminator 1
 3434 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3435 0368 062B     		cmp	r3, #6
 3436 036a E7D9     		bls	.L230
 679:.\protocol.c  **** 				}
 680:.\protocol.c  ****                 side.a.ppuSale[0]=6;
 3437              		.loc 1 680 0 is_stmt 1
 3438 036c 5F4B     		ldr	r3, .L244+8
 3439 036e 0622     		movs	r2, #6
 3440 0370 83F8F120 		strb	r2, [r3, #241]
 681:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3441              		.loc 1 681 0
 3442 0374 0123     		movs	r3, #1
 3443 0376 FB73     		strb	r3, [r7, #15]
 3444 0378 14E0     		b	.L231
 3445              	.L232:
 682:.\protocol.c  **** 					side.a.volumeSale[9-x]=((Pump_AL_rxBuffer[x+18]&0x0F)+0x30);
 3446              		.loc 1 682 0 discriminator 3
 3447 037a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3448 037c C3F10903 		rsb	r3, r3, #9
 3449 0380 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3450 0382 1232     		adds	r2, r2, #18
 3451 0384 5849     		ldr	r1, .L244+4
 3452 0386 8A5C     		ldrb	r2, [r1, r2]
 3453 0388 D2B2     		uxtb	r2, r2
 3454 038a 02F00F02 		and	r2, r2, #15
 3455 038e D2B2     		uxtb	r2, r2
 3456 0390 3032     		adds	r2, r2, #48
 3457 0392 D1B2     		uxtb	r1, r2
 3458 0394 554A     		ldr	r2, .L244+8
 3459 0396 1344     		add	r3, r3, r2
 3460 0398 0A46     		mov	r2, r1
 3461 039a 83F8E320 		strb	r2, [r3, #227]
 681:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3462              		.loc 1 681 0 discriminator 3
 3463 039e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3464 03a0 0133     		adds	r3, r3, #1
 3465 03a2 FB73     		strb	r3, [r7, #15]
 3466              	.L231:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 76


 681:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3467              		.loc 1 681 0 is_stmt 0 discriminator 1
 3468 03a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3469 03a6 082B     		cmp	r3, #8
 3470 03a8 E7D9     		bls	.L232
 683:.\protocol.c  **** 				}		
 684:.\protocol.c  ****                 side.a.volumeSale[0]=8;
 3471              		.loc 1 684 0 is_stmt 1
 3472 03aa 504B     		ldr	r3, .L244+8
 3473 03ac 0822     		movs	r2, #8
 3474 03ae 83F8E320 		strb	r2, [r3, #227]
 685:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3475              		.loc 1 685 0
 3476 03b2 0123     		movs	r3, #1
 3477 03b4 FB73     		strb	r3, [r7, #15]
 3478 03b6 14E0     		b	.L233
 3479              	.L234:
 686:.\protocol.c  **** 					side.a.moneySale[9-x]=((Pump_AL_rxBuffer[x+28]&0x0F)+0x30);
 3480              		.loc 1 686 0 discriminator 3
 3481 03b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3482 03ba C3F10903 		rsb	r3, r3, #9
 3483 03be FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3484 03c0 1C32     		adds	r2, r2, #28
 3485 03c2 4949     		ldr	r1, .L244+4
 3486 03c4 8A5C     		ldrb	r2, [r1, r2]
 3487 03c6 D2B2     		uxtb	r2, r2
 3488 03c8 02F00F02 		and	r2, r2, #15
 3489 03cc D2B2     		uxtb	r2, r2
 3490 03ce 3032     		adds	r2, r2, #48
 3491 03d0 D1B2     		uxtb	r1, r2
 3492 03d2 464A     		ldr	r2, .L244+8
 3493 03d4 1344     		add	r3, r3, r2
 3494 03d6 0A46     		mov	r2, r1
 3495 03d8 83F8D520 		strb	r2, [r3, #213]
 685:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3496              		.loc 1 685 0 discriminator 3
 3497 03dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3498 03de 0133     		adds	r3, r3, #1
 3499 03e0 FB73     		strb	r3, [r7, #15]
 3500              	.L233:
 685:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3501              		.loc 1 685 0 is_stmt 0 discriminator 1
 3502 03e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3503 03e4 072B     		cmp	r3, #7
 3504 03e6 E7D9     		bls	.L234
 687:.\protocol.c  **** 				}
 688:.\protocol.c  ****                 side.a.moneySale[1]='0';
 3505              		.loc 1 688 0 is_stmt 1
 3506 03e8 404B     		ldr	r3, .L244+8
 3507 03ea 3022     		movs	r2, #48
 3508 03ec 83F8D620 		strb	r2, [r3, #214]
 689:.\protocol.c  ****                 side.a.moneySale[0]=8;
 3509              		.loc 1 689 0
 3510 03f0 3E4B     		ldr	r3, .L244+8
 3511 03f2 0822     		movs	r2, #8
 3512 03f4 83F8D520 		strb	r2, [r3, #213]
 3513 03f8 6BE0     		b	.L235
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 77


 3514              	.L228:
 690:.\protocol.c  **** 			}
 691:.\protocol.c  **** 			else{
 692:.\protocol.c  **** 				side.b.productSale=((Pump_AL_rxBuffer[9]&0x0F)+1)+0x30;
 3515              		.loc 1 692 0
 3516 03fa 3B4B     		ldr	r3, .L244+4
 3517 03fc 5B7A     		ldrb	r3, [r3, #9]
 3518 03fe DBB2     		uxtb	r3, r3
 3519 0400 03F00F03 		and	r3, r3, #15
 3520 0404 DBB2     		uxtb	r3, r3
 3521 0406 3133     		adds	r3, r3, #49
 3522 0408 DAB2     		uxtb	r2, r3
 3523 040a 384B     		ldr	r3, .L244+8
 3524 040c 83F8FF21 		strb	r2, [r3, #511]
 693:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3525              		.loc 1 693 0
 3526 0410 0123     		movs	r3, #1
 3527 0412 FB73     		strb	r3, [r7, #15]
 3528 0414 14E0     		b	.L236
 3529              	.L237:
 694:.\protocol.c  **** 					side.b.ppuSale[7-x]=((Pump_AL_rxBuffer[x+11]&0x0F)+0x30);
 3530              		.loc 1 694 0 discriminator 3
 3531 0416 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3532 0418 C3F10703 		rsb	r3, r3, #7
 3533 041c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3534 041e 0B32     		adds	r2, r2, #11
 3535 0420 3149     		ldr	r1, .L244+4
 3536 0422 8A5C     		ldrb	r2, [r1, r2]
 3537 0424 D2B2     		uxtb	r2, r2
 3538 0426 02F00F02 		and	r2, r2, #15
 3539 042a D2B2     		uxtb	r2, r2
 3540 042c 3032     		adds	r2, r2, #48
 3541 042e D1B2     		uxtb	r1, r2
 3542 0430 2E4A     		ldr	r2, .L244+8
 3543 0432 1344     		add	r3, r3, r2
 3544 0434 0A46     		mov	r2, r1
 3545 0436 83F8F121 		strb	r2, [r3, #497]
 693:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3546              		.loc 1 693 0 discriminator 3
 3547 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3548 043c 0133     		adds	r3, r3, #1
 3549 043e FB73     		strb	r3, [r7, #15]
 3550              	.L236:
 693:.\protocol.c  **** 				for(x=1;x<=6;x++){
 3551              		.loc 1 693 0 is_stmt 0 discriminator 1
 3552 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3553 0442 062B     		cmp	r3, #6
 3554 0444 E7D9     		bls	.L237
 695:.\protocol.c  **** 				}
 696:.\protocol.c  ****                 side.b.ppuSale[0]=6;
 3555              		.loc 1 696 0 is_stmt 1
 3556 0446 294B     		ldr	r3, .L244+8
 3557 0448 0622     		movs	r2, #6
 3558 044a 83F8F121 		strb	r2, [r3, #497]
 697:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3559              		.loc 1 697 0
 3560 044e 0123     		movs	r3, #1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 78


 3561 0450 FB73     		strb	r3, [r7, #15]
 3562 0452 14E0     		b	.L238
 3563              	.L239:
 698:.\protocol.c  **** 					side.b.volumeSale[9-x]=((Pump_AL_rxBuffer[x+18]&0x0F)+0x30);
 3564              		.loc 1 698 0 discriminator 3
 3565 0454 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3566 0456 C3F10903 		rsb	r3, r3, #9
 3567 045a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3568 045c 1232     		adds	r2, r2, #18
 3569 045e 2249     		ldr	r1, .L244+4
 3570 0460 8A5C     		ldrb	r2, [r1, r2]
 3571 0462 D2B2     		uxtb	r2, r2
 3572 0464 02F00F02 		and	r2, r2, #15
 3573 0468 D2B2     		uxtb	r2, r2
 3574 046a 3032     		adds	r2, r2, #48
 3575 046c D1B2     		uxtb	r1, r2
 3576 046e 1F4A     		ldr	r2, .L244+8
 3577 0470 1344     		add	r3, r3, r2
 3578 0472 0A46     		mov	r2, r1
 3579 0474 83F8E321 		strb	r2, [r3, #483]
 697:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3580              		.loc 1 697 0 discriminator 3
 3581 0478 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3582 047a 0133     		adds	r3, r3, #1
 3583 047c FB73     		strb	r3, [r7, #15]
 3584              	.L238:
 697:.\protocol.c  **** 				for(x=1;x<=8;x++){
 3585              		.loc 1 697 0 is_stmt 0 discriminator 1
 3586 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3587 0480 082B     		cmp	r3, #8
 3588 0482 E7D9     		bls	.L239
 699:.\protocol.c  **** 				}	
 700:.\protocol.c  ****                 side.b.volumeSale[0]=8;
 3589              		.loc 1 700 0 is_stmt 1
 3590 0484 194B     		ldr	r3, .L244+8
 3591 0486 0822     		movs	r2, #8
 3592 0488 83F8E321 		strb	r2, [r3, #483]
 701:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3593              		.loc 1 701 0
 3594 048c 0123     		movs	r3, #1
 3595 048e FB73     		strb	r3, [r7, #15]
 3596 0490 14E0     		b	.L240
 3597              	.L241:
 702:.\protocol.c  **** 					side.b.moneySale[9-x]=((Pump_AL_rxBuffer[x+28]&0x0F)+0x30);
 3598              		.loc 1 702 0 discriminator 3
 3599 0492 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3600 0494 C3F10903 		rsb	r3, r3, #9
 3601 0498 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3602 049a 1C32     		adds	r2, r2, #28
 3603 049c 1249     		ldr	r1, .L244+4
 3604 049e 8A5C     		ldrb	r2, [r1, r2]
 3605 04a0 D2B2     		uxtb	r2, r2
 3606 04a2 02F00F02 		and	r2, r2, #15
 3607 04a6 D2B2     		uxtb	r2, r2
 3608 04a8 3032     		adds	r2, r2, #48
 3609 04aa D1B2     		uxtb	r1, r2
 3610 04ac 0F4A     		ldr	r2, .L244+8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 79


 3611 04ae 1344     		add	r3, r3, r2
 3612 04b0 0A46     		mov	r2, r1
 3613 04b2 83F8D521 		strb	r2, [r3, #469]
 701:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3614              		.loc 1 701 0 discriminator 3
 3615 04b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3616 04b8 0133     		adds	r3, r3, #1
 3617 04ba FB73     		strb	r3, [r7, #15]
 3618              	.L240:
 701:.\protocol.c  **** 				for(x=1;x<=7;x++){
 3619              		.loc 1 701 0 is_stmt 0 discriminator 1
 3620 04bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3621 04be 072B     		cmp	r3, #7
 3622 04c0 E7D9     		bls	.L241
 703:.\protocol.c  **** 				}	
 704:.\protocol.c  ****                 side.b.moneySale[1]='0';
 3623              		.loc 1 704 0 is_stmt 1
 3624 04c2 0A4B     		ldr	r3, .L244+8
 3625 04c4 3022     		movs	r2, #48
 3626 04c6 83F8D621 		strb	r2, [r3, #470]
 705:.\protocol.c  ****                 side.b.moneySale[0]=8;
 3627              		.loc 1 705 0
 3628 04ca 084B     		ldr	r3, .L244+8
 3629 04cc 0822     		movs	r2, #8
 3630 04ce 83F8D521 		strb	r2, [r3, #469]
 3631              	.L235:
 706:.\protocol.c  **** 			}
 707:.\protocol.c  **** 			return 1;
 3632              		.loc 1 707 0
 3633 04d2 0123     		movs	r3, #1
 3634 04d4 02E0     		b	.L225
 3635              	.L227:
 708:.\protocol.c  **** 		}
 709:.\protocol.c  **** 		else{
 710:.\protocol.c  **** 			return 0;
 3636              		.loc 1 710 0
 3637 04d6 0023     		movs	r3, #0
 3638 04d8 00E0     		b	.L225
 3639              	.L226:
 711:.\protocol.c  **** 		}
 712:.\protocol.c  **** 	}
 713:.\protocol.c  **** 	return 0;
 3640              		.loc 1 713 0
 3641 04da 0023     		movs	r3, #0
 3642              	.L225:
 714:.\protocol.c  **** }...
 3643              		.loc 1 714 0
 3644 04dc 1846     		mov	r0, r3
 3645 04de 1037     		adds	r7, r7, #16
 3646              		.cfi_def_cfa_offset 8
 3647 04e0 BD46     		mov	sp, r7
 3648              		.cfi_def_cfa_register 13
 3649              		@ sp needed
 3650 04e2 80BD     		pop	{r7, pc}
 3651              	.L245:
 3652              		.align	2
 3653              	.L244:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 80


 3654 04e4 00000000 		.word	digits
 3655 04e8 00000000 		.word	Pump_AL_rxBuffer
 3656 04ec 00000000 		.word	side
 3657              		.cfi_endproc
 3658              	.LFE62:
 3659              		.size	get_sale, .-get_sale
 3660              		.text
 3661              	.Letext0:
 3662              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3663              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3664              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3665              		.file 5 "./variables.h"
 3666              		.file 6 "Generated_Source\\PSoC5/Pump_AL.h"
 3667              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 3668              		.section	.debug_info,"",%progbits
 3669              	.Ldebug_info0:
 3670 0000 5C0A0000 		.4byte	0xa5c
 3671 0004 0400     		.2byte	0x4
 3672 0006 00000000 		.4byte	.Ldebug_abbrev0
 3673 000a 04       		.byte	0x4
 3674 000b 01       		.uleb128 0x1
 3675 000c 5F030000 		.4byte	.LASF126
 3676 0010 01       		.byte	0x1
 3677 0011 F6010000 		.4byte	.LASF127
 3678 0015 73000000 		.4byte	.LASF128
 3679 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3680 001d 00000000 		.4byte	0
 3681 0021 00000000 		.4byte	.Ldebug_line0
 3682 0025 02       		.uleb128 0x2
 3683 0026 01       		.byte	0x1
 3684 0027 06       		.byte	0x6
 3685 0028 21060000 		.4byte	.LASF0
 3686 002c 02       		.uleb128 0x2
 3687 002d 01       		.byte	0x1
 3688 002e 08       		.byte	0x8
 3689 002f A5050000 		.4byte	.LASF1
 3690 0033 02       		.uleb128 0x2
 3691 0034 02       		.byte	0x2
 3692 0035 05       		.byte	0x5
 3693 0036 B1040000 		.4byte	.LASF2
 3694 003a 02       		.uleb128 0x2
 3695 003b 02       		.byte	0x2
 3696 003c 07       		.byte	0x7
 3697 003d 2D060000 		.4byte	.LASF3
 3698 0041 03       		.uleb128 0x3
 3699 0042 5A000000 		.4byte	.LASF9
 3700 0046 02       		.byte	0x2
 3701 0047 3F       		.byte	0x3f
 3702 0048 4C000000 		.4byte	0x4c
 3703 004c 02       		.uleb128 0x2
 3704 004d 04       		.byte	0x4
 3705 004e 05       		.byte	0x5
 3706 004f BB040000 		.4byte	.LASF4
 3707 0053 02       		.uleb128 0x2
 3708 0054 04       		.byte	0x4
 3709 0055 07       		.byte	0x7
 3710 0056 5B050000 		.4byte	.LASF5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 81


 3711 005a 02       		.uleb128 0x2
 3712 005b 08       		.byte	0x8
 3713 005c 05       		.byte	0x5
 3714 005d 07030000 		.4byte	.LASF6
 3715 0061 02       		.uleb128 0x2
 3716 0062 08       		.byte	0x8
 3717 0063 07       		.byte	0x7
 3718 0064 4B010000 		.4byte	.LASF7
 3719 0068 04       		.uleb128 0x4
 3720 0069 04       		.byte	0x4
 3721 006a 05       		.byte	0x5
 3722 006b 696E7400 		.ascii	"int\000"
 3723 006f 02       		.uleb128 0x2
 3724 0070 04       		.byte	0x4
 3725 0071 07       		.byte	0x7
 3726 0072 3F000000 		.4byte	.LASF8
 3727 0076 03       		.uleb128 0x3
 3728 0077 7F050000 		.4byte	.LASF10
 3729 007b 03       		.byte	0x3
 3730 007c 2C       		.byte	0x2c
 3731 007d 41000000 		.4byte	0x41
 3732 0081 03       		.uleb128 0x3
 3733 0082 53060000 		.4byte	.LASF11
 3734 0086 04       		.byte	0x4
 3735 0087 A1       		.byte	0xa1
 3736 0088 2C000000 		.4byte	0x2c
 3737 008c 03       		.uleb128 0x3
 3738 008d 1A040000 		.4byte	.LASF12
 3739 0091 04       		.byte	0x4
 3740 0092 A3       		.byte	0xa3
 3741 0093 53000000 		.4byte	0x53
 3742 0097 02       		.uleb128 0x2
 3743 0098 04       		.byte	0x4
 3744 0099 04       		.byte	0x4
 3745 009a 45010000 		.4byte	.LASF13
 3746 009e 02       		.uleb128 0x2
 3747 009f 08       		.byte	0x8
 3748 00a0 04       		.byte	0x4
 3749 00a1 59060000 		.4byte	.LASF14
 3750 00a5 03       		.uleb128 0x3
 3751 00a6 19050000 		.4byte	.LASF15
 3752 00aa 04       		.byte	0x4
 3753 00ab AD       		.byte	0xad
 3754 00ac 61000000 		.4byte	0x61
 3755 00b0 02       		.uleb128 0x2
 3756 00b1 01       		.byte	0x1
 3757 00b2 08       		.byte	0x8
 3758 00b3 6E020000 		.4byte	.LASF16
 3759 00b7 05       		.uleb128 0x5
 3760 00b8 81000000 		.4byte	0x81
 3761 00bc 05       		.uleb128 0x5
 3762 00bd 8C000000 		.4byte	0x8c
 3763 00c1 02       		.uleb128 0x2
 3764 00c2 04       		.byte	0x4
 3765 00c3 07       		.byte	0x7
 3766 00c4 52050000 		.4byte	.LASF17
 3767 00c8 06       		.uleb128 0x6
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 82


 3768 00c9 16000000 		.4byte	.LASF66
 3769 00cd 7B02     		.2byte	0x27b
 3770 00cf 05       		.byte	0x5
 3771 00d0 52       		.byte	0x52
 3772 00d1 2A030000 		.4byte	0x32a
 3773 00d5 07       		.uleb128 0x7
 3774 00d6 DD000000 		.4byte	.LASF18
 3775 00da 05       		.byte	0x5
 3776 00db 53       		.byte	0x53
 3777 00dc 81000000 		.4byte	0x81
 3778 00e0 00       		.byte	0
 3779 00e1 07       		.uleb128 0x7
 3780 00e2 BD010000 		.4byte	.LASF19
 3781 00e6 05       		.byte	0x5
 3782 00e7 54       		.byte	0x54
 3783 00e8 2A030000 		.4byte	0x32a
 3784 00ec 01       		.byte	0x1
 3785 00ed 07       		.uleb128 0x7
 3786 00ee 60060000 		.4byte	.LASF20
 3787 00f2 05       		.byte	0x5
 3788 00f3 55       		.byte	0x55
 3789 00f4 81000000 		.4byte	0x81
 3790 00f8 1A       		.byte	0x1a
 3791 00f9 07       		.uleb128 0x7
 3792 00fa F1000000 		.4byte	.LASF21
 3793 00fe 05       		.byte	0x5
 3794 00ff 56       		.byte	0x56
 3795 0100 3A030000 		.4byte	0x33a
 3796 0104 1B       		.byte	0x1b
 3797 0105 07       		.uleb128 0x7
 3798 0106 7E040000 		.4byte	.LASF22
 3799 010a 05       		.byte	0x5
 3800 010b 57       		.byte	0x57
 3801 010c 3A030000 		.4byte	0x33a
 3802 0110 25       		.byte	0x25
 3803 0111 07       		.uleb128 0x7
 3804 0112 8C060000 		.4byte	.LASF23
 3805 0116 05       		.byte	0x5
 3806 0117 58       		.byte	0x58
 3807 0118 2A030000 		.4byte	0x32a
 3808 011c 2F       		.byte	0x2f
 3809 011d 07       		.uleb128 0x7
 3810 011e 48040000 		.4byte	.LASF24
 3811 0122 05       		.byte	0x5
 3812 0123 59       		.byte	0x59
 3813 0124 81000000 		.4byte	0x81
 3814 0128 48       		.byte	0x48
 3815 0129 07       		.uleb128 0x7
 3816 012a B3050000 		.4byte	.LASF25
 3817 012e 05       		.byte	0x5
 3818 012f 5A       		.byte	0x5a
 3819 0130 81000000 		.4byte	0x81
 3820 0134 49       		.byte	0x49
 3821 0135 07       		.uleb128 0x7
 3822 0136 64020000 		.4byte	.LASF26
 3823 013a 05       		.byte	0x5
 3824 013b 5B       		.byte	0x5b
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 83


 3825 013c 4A030000 		.4byte	0x34a
 3826 0140 4A       		.byte	0x4a
 3827 0141 07       		.uleb128 0x7
 3828 0142 FC030000 		.4byte	.LASF27
 3829 0146 05       		.byte	0x5
 3830 0147 5C       		.byte	0x5c
 3831 0148 81000000 		.4byte	0x81
 3832 014c 5F       		.byte	0x5f
 3833 014d 07       		.uleb128 0x7
 3834 014e 5B020000 		.4byte	.LASF28
 3835 0152 05       		.byte	0x5
 3836 0153 5D       		.byte	0x5d
 3837 0154 81000000 		.4byte	0x81
 3838 0158 60       		.byte	0x60
 3839 0159 07       		.uleb128 0x7
 3840 015a 33000000 		.4byte	.LASF29
 3841 015e 05       		.byte	0x5
 3842 015f 5E       		.byte	0x5e
 3843 0160 81000000 		.4byte	0x81
 3844 0164 61       		.byte	0x61
 3845 0165 07       		.uleb128 0x7
 3846 0166 F3050000 		.4byte	.LASF30
 3847 016a 05       		.byte	0x5
 3848 016b 5F       		.byte	0x5f
 3849 016c 5A030000 		.4byte	0x35a
 3850 0170 62       		.byte	0x62
 3851 0171 07       		.uleb128 0x7
 3852 0172 2D020000 		.4byte	.LASF31
 3853 0176 05       		.byte	0x5
 3854 0177 60       		.byte	0x60
 3855 0178 6A030000 		.4byte	0x36a
 3856 017c 64       		.byte	0x64
 3857 017d 07       		.uleb128 0x7
 3858 017e 94010000 		.4byte	.LASF32
 3859 0182 05       		.byte	0x5
 3860 0183 61       		.byte	0x61
 3861 0184 81000000 		.4byte	0x81
 3862 0188 78       		.byte	0x78
 3863 0189 07       		.uleb128 0x7
 3864 018a 3C050000 		.4byte	.LASF33
 3865 018e 05       		.byte	0x5
 3866 018f 62       		.byte	0x62
 3867 0190 80030000 		.4byte	0x380
 3868 0194 79       		.byte	0x79
 3869 0195 07       		.uleb128 0x7
 3870 0196 EA040000 		.4byte	.LASF34
 3871 019a 05       		.byte	0x5
 3872 019b 63       		.byte	0x63
 3873 019c 90030000 		.4byte	0x390
 3874 01a0 7E       		.byte	0x7e
 3875 01a1 07       		.uleb128 0x7
 3876 01a2 AE010000 		.4byte	.LASF35
 3877 01a6 05       		.byte	0x5
 3878 01a7 64       		.byte	0x64
 3879 01a8 90030000 		.4byte	0x390
 3880 01ac 84       		.byte	0x84
 3881 01ad 07       		.uleb128 0x7
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 84


 3882 01ae 6F060000 		.4byte	.LASF36
 3883 01b2 05       		.byte	0x5
 3884 01b3 65       		.byte	0x65
 3885 01b4 90030000 		.4byte	0x390
 3886 01b8 8A       		.byte	0x8a
 3887 01b9 07       		.uleb128 0x7
 3888 01ba ED030000 		.4byte	.LASF37
 3889 01be 05       		.byte	0x5
 3890 01bf 66       		.byte	0x66
 3891 01c0 90030000 		.4byte	0x390
 3892 01c4 90       		.byte	0x90
 3893 01c5 07       		.uleb128 0x7
 3894 01c6 60040000 		.4byte	.LASF38
 3895 01ca 05       		.byte	0x5
 3896 01cb 67       		.byte	0x67
 3897 01cc A0030000 		.4byte	0x3a0
 3898 01d0 96       		.byte	0x96
 3899 01d1 07       		.uleb128 0x7
 3900 01d2 6E010000 		.4byte	.LASF39
 3901 01d6 05       		.byte	0x5
 3902 01d7 68       		.byte	0x68
 3903 01d8 A0030000 		.4byte	0x3a0
 3904 01dc A4       		.byte	0xa4
 3905 01dd 07       		.uleb128 0x7
 3906 01de 32030000 		.4byte	.LASF40
 3907 01e2 05       		.byte	0x5
 3908 01e3 69       		.byte	0x69
 3909 01e4 A0030000 		.4byte	0x3a0
 3910 01e8 B2       		.byte	0xb2
 3911 01e9 07       		.uleb128 0x7
 3912 01ea CE020000 		.4byte	.LASF41
 3913 01ee 05       		.byte	0x5
 3914 01ef 6A       		.byte	0x6a
 3915 01f0 A0030000 		.4byte	0x3a0
 3916 01f4 C0       		.byte	0xc0
 3917 01f5 07       		.uleb128 0x7
 3918 01f6 08050000 		.4byte	.LASF42
 3919 01fa 05       		.byte	0x5
 3920 01fb 6B       		.byte	0x6b
 3921 01fc A0030000 		.4byte	0x3a0
 3922 0200 CE       		.byte	0xce
 3923 0201 07       		.uleb128 0x7
 3924 0202 3A040000 		.4byte	.LASF43
 3925 0206 05       		.byte	0x5
 3926 0207 6C       		.byte	0x6c
 3927 0208 A0030000 		.4byte	0x3a0
 3928 020c DC       		.byte	0xdc
 3929 020d 07       		.uleb128 0x7
 3930 020e 98040000 		.4byte	.LASF44
 3931 0212 05       		.byte	0x5
 3932 0213 6D       		.byte	0x6d
 3933 0214 B0030000 		.4byte	0x3b0
 3934 0218 EA       		.byte	0xea
 3935 0219 07       		.uleb128 0x7
 3936 021a DC010000 		.4byte	.LASF45
 3937 021e 05       		.byte	0x5
 3938 021f 6E       		.byte	0x6e
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 85


 3939 0220 B0030000 		.4byte	0x3b0
 3940 0224 F5       		.byte	0xf5
 3941 0225 08       		.uleb128 0x8
 3942 0226 3E020000 		.4byte	.LASF46
 3943 022a 05       		.byte	0x5
 3944 022b 6F       		.byte	0x6f
 3945 022c B0030000 		.4byte	0x3b0
 3946 0230 0001     		.2byte	0x100
 3947 0232 08       		.uleb128 0x8
 3948 0233 08040000 		.4byte	.LASF47
 3949 0237 05       		.byte	0x5
 3950 0238 70       		.byte	0x70
 3951 0239 81000000 		.4byte	0x81
 3952 023d 0B01     		.2byte	0x10b
 3953 023f 08       		.uleb128 0x8
 3954 0240 A8020000 		.4byte	.LASF48
 3955 0244 05       		.byte	0x5
 3956 0245 71       		.byte	0x71
 3957 0246 81000000 		.4byte	0x81
 3958 024a 0C01     		.2byte	0x10c
 3959 024c 08       		.uleb128 0x8
 3960 024d 64000000 		.4byte	.LASF49
 3961 0251 05       		.byte	0x5
 3962 0252 72       		.byte	0x72
 3963 0253 81000000 		.4byte	0x81
 3964 0257 0D01     		.2byte	0x10d
 3965 0259 08       		.uleb128 0x8
 3966 025a DE040000 		.4byte	.LASF50
 3967 025e 05       		.byte	0x5
 3968 025f 73       		.byte	0x73
 3969 0260 81000000 		.4byte	0x81
 3970 0264 0E01     		.2byte	0x10e
 3971 0266 08       		.uleb128 0x8
 3972 0267 0E000000 		.4byte	.LASF51
 3973 026b 05       		.byte	0x5
 3974 026c 74       		.byte	0x74
 3975 026d C0030000 		.4byte	0x3c0
 3976 0271 0F01     		.2byte	0x10f
 3977 0273 08       		.uleb128 0x8
 3978 0274 DE020000 		.4byte	.LASF52
 3979 0278 05       		.byte	0x5
 3980 0279 75       		.byte	0x75
 3981 027a 3A030000 		.4byte	0x33a
 3982 027e 5001     		.2byte	0x150
 3983 0280 08       		.uleb128 0x8
 3984 0281 32010000 		.4byte	.LASF53
 3985 0285 05       		.byte	0x5
 3986 0286 76       		.byte	0x76
 3987 0287 3A030000 		.4byte	0x33a
 3988 028b 5A01     		.2byte	0x15a
 3989 028d 08       		.uleb128 0x8
 3990 028e B4020000 		.4byte	.LASF54
 3991 0292 05       		.byte	0x5
 3992 0293 77       		.byte	0x77
 3993 0294 3A030000 		.4byte	0x33a
 3994 0298 6401     		.2byte	0x164
 3995 029a 08       		.uleb128 0x8
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 86


 3996 029b 13020000 		.4byte	.LASF55
 3997 029f 05       		.byte	0x5
 3998 02a0 78       		.byte	0x78
 3999 02a1 D0030000 		.4byte	0x3d0
 4000 02a5 6E01     		.2byte	0x16e
 4001 02a7 08       		.uleb128 0x8
 4002 02a8 4C000000 		.4byte	.LASF56
 4003 02ac 05       		.byte	0x5
 4004 02ad 79       		.byte	0x79
 4005 02ae D0030000 		.4byte	0x3d0
 4006 02b2 B901     		.2byte	0x1b9
 4007 02b4 08       		.uleb128 0x8
 4008 02b5 FE000000 		.4byte	.LASF57
 4009 02b9 05       		.byte	0x5
 4010 02ba 7A       		.byte	0x7a
 4011 02bb E6030000 		.4byte	0x3e6
 4012 02bf 0402     		.2byte	0x204
 4013 02c1 08       		.uleb128 0x8
 4014 02c2 92050000 		.4byte	.LASF58
 4015 02c6 05       		.byte	0x5
 4016 02c7 7B       		.byte	0x7b
 4017 02c8 E6030000 		.4byte	0x3e6
 4018 02cc 1302     		.2byte	0x213
 4019 02ce 08       		.uleb128 0x8
 4020 02cf C5050000 		.4byte	.LASF59
 4021 02d3 05       		.byte	0x5
 4022 02d4 7C       		.byte	0x7c
 4023 02d5 FC030000 		.4byte	0x3fc
 4024 02d9 2202     		.2byte	0x222
 4025 02db 08       		.uleb128 0x8
 4026 02dc FE050000 		.4byte	.LASF60
 4027 02e0 05       		.byte	0x5
 4028 02e1 7D       		.byte	0x7d
 4029 02e2 FC030000 		.4byte	0x3fc
 4030 02e6 4002     		.2byte	0x240
 4031 02e8 08       		.uleb128 0x8
 4032 02e9 53030000 		.4byte	.LASF61
 4033 02ed 05       		.byte	0x5
 4034 02ee 7E       		.byte	0x7e
 4035 02ef 3A030000 		.4byte	0x33a
 4036 02f3 5E02     		.2byte	0x25e
 4037 02f5 08       		.uleb128 0x8
 4038 02f6 6D050000 		.4byte	.LASF62
 4039 02fa 05       		.byte	0x5
 4040 02fb 7F       		.byte	0x7f
 4041 02fc 81000000 		.4byte	0x81
 4042 0300 6802     		.2byte	0x268
 4043 0302 08       		.uleb128 0x8
 4044 0303 A4040000 		.4byte	.LASF63
 4045 0307 05       		.byte	0x5
 4046 0308 80       		.byte	0x80
 4047 0309 12040000 		.4byte	0x412
 4048 030d 6902     		.2byte	0x269
 4049 030f 08       		.uleb128 0x8
 4050 0310 E9020000 		.4byte	.LASF64
 4051 0314 05       		.byte	0x5
 4052 0315 81       		.byte	0x81
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 87


 4053 0316 5A030000 		.4byte	0x35a
 4054 031a 7802     		.2byte	0x278
 4055 031c 08       		.uleb128 0x8
 4056 031d E8010000 		.4byte	.LASF65
 4057 0321 05       		.byte	0x5
 4058 0322 82       		.byte	0x82
 4059 0323 81000000 		.4byte	0x81
 4060 0327 7A02     		.2byte	0x27a
 4061 0329 00       		.byte	0
 4062 032a 09       		.uleb128 0x9
 4063 032b 81000000 		.4byte	0x81
 4064 032f 3A030000 		.4byte	0x33a
 4065 0333 0A       		.uleb128 0xa
 4066 0334 C1000000 		.4byte	0xc1
 4067 0338 18       		.byte	0x18
 4068 0339 00       		.byte	0
 4069 033a 09       		.uleb128 0x9
 4070 033b 81000000 		.4byte	0x81
 4071 033f 4A030000 		.4byte	0x34a
 4072 0343 0A       		.uleb128 0xa
 4073 0344 C1000000 		.4byte	0xc1
 4074 0348 09       		.byte	0x9
 4075 0349 00       		.byte	0
 4076 034a 09       		.uleb128 0x9
 4077 034b 81000000 		.4byte	0x81
 4078 034f 5A030000 		.4byte	0x35a
 4079 0353 0A       		.uleb128 0xa
 4080 0354 C1000000 		.4byte	0xc1
 4081 0358 14       		.byte	0x14
 4082 0359 00       		.byte	0
 4083 035a 09       		.uleb128 0x9
 4084 035b 81000000 		.4byte	0x81
 4085 035f 6A030000 		.4byte	0x36a
 4086 0363 0A       		.uleb128 0xa
 4087 0364 C1000000 		.4byte	0xc1
 4088 0368 01       		.byte	0x1
 4089 0369 00       		.byte	0
 4090 036a 09       		.uleb128 0x9
 4091 036b 81000000 		.4byte	0x81
 4092 036f 80030000 		.4byte	0x380
 4093 0373 0A       		.uleb128 0xa
 4094 0374 C1000000 		.4byte	0xc1
 4095 0378 01       		.byte	0x1
 4096 0379 0A       		.uleb128 0xa
 4097 037a C1000000 		.4byte	0xc1
 4098 037e 09       		.byte	0x9
 4099 037f 00       		.byte	0
 4100 0380 09       		.uleb128 0x9
 4101 0381 81000000 		.4byte	0x81
 4102 0385 90030000 		.4byte	0x390
 4103 0389 0A       		.uleb128 0xa
 4104 038a C1000000 		.4byte	0xc1
 4105 038e 04       		.byte	0x4
 4106 038f 00       		.byte	0
 4107 0390 09       		.uleb128 0x9
 4108 0391 81000000 		.4byte	0x81
 4109 0395 A0030000 		.4byte	0x3a0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 88


 4110 0399 0A       		.uleb128 0xa
 4111 039a C1000000 		.4byte	0xc1
 4112 039e 05       		.byte	0x5
 4113 039f 00       		.byte	0
 4114 03a0 09       		.uleb128 0x9
 4115 03a1 81000000 		.4byte	0x81
 4116 03a5 B0030000 		.4byte	0x3b0
 4117 03a9 0A       		.uleb128 0xa
 4118 03aa C1000000 		.4byte	0xc1
 4119 03ae 0D       		.byte	0xd
 4120 03af 00       		.byte	0
 4121 03b0 09       		.uleb128 0x9
 4122 03b1 81000000 		.4byte	0x81
 4123 03b5 C0030000 		.4byte	0x3c0
 4124 03b9 0A       		.uleb128 0xa
 4125 03ba C1000000 		.4byte	0xc1
 4126 03be 0A       		.byte	0xa
 4127 03bf 00       		.byte	0
 4128 03c0 09       		.uleb128 0x9
 4129 03c1 81000000 		.4byte	0x81
 4130 03c5 D0030000 		.4byte	0x3d0
 4131 03c9 0A       		.uleb128 0xa
 4132 03ca C1000000 		.4byte	0xc1
 4133 03ce 40       		.byte	0x40
 4134 03cf 00       		.byte	0
 4135 03d0 09       		.uleb128 0x9
 4136 03d1 81000000 		.4byte	0x81
 4137 03d5 E6030000 		.4byte	0x3e6
 4138 03d9 0A       		.uleb128 0xa
 4139 03da C1000000 		.4byte	0xc1
 4140 03de 02       		.byte	0x2
 4141 03df 0A       		.uleb128 0xa
 4142 03e0 C1000000 		.4byte	0xc1
 4143 03e4 18       		.byte	0x18
 4144 03e5 00       		.byte	0
 4145 03e6 09       		.uleb128 0x9
 4146 03e7 81000000 		.4byte	0x81
 4147 03eb FC030000 		.4byte	0x3fc
 4148 03ef 0A       		.uleb128 0xa
 4149 03f0 C1000000 		.4byte	0xc1
 4150 03f4 02       		.byte	0x2
 4151 03f5 0A       		.uleb128 0xa
 4152 03f6 C1000000 		.4byte	0xc1
 4153 03fa 04       		.byte	0x4
 4154 03fb 00       		.byte	0
 4155 03fc 09       		.uleb128 0x9
 4156 03fd 81000000 		.4byte	0x81
 4157 0401 12040000 		.4byte	0x412
 4158 0405 0A       		.uleb128 0xa
 4159 0406 C1000000 		.4byte	0xc1
 4160 040a 02       		.byte	0x2
 4161 040b 0A       		.uleb128 0xa
 4162 040c C1000000 		.4byte	0xc1
 4163 0410 09       		.byte	0x9
 4164 0411 00       		.byte	0
 4165 0412 09       		.uleb128 0x9
 4166 0413 81000000 		.4byte	0x81
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 89


 4167 0417 22040000 		.4byte	0x422
 4168 041b 0A       		.uleb128 0xa
 4169 041c C1000000 		.4byte	0xc1
 4170 0420 0E       		.byte	0xe
 4171 0421 00       		.byte	0
 4172 0422 06       		.uleb128 0x6
 4173 0423 9F060000 		.4byte	.LASF67
 4174 0427 0001     		.2byte	0x100
 4175 0429 05       		.byte	0x5
 4176 042a 90       		.byte	0x90
 4177 042b 84040000 		.4byte	0x484
 4178 042f 0B       		.uleb128 0xb
 4179 0430 64697200 		.ascii	"dir\000"
 4180 0434 05       		.byte	0x5
 4181 0435 91       		.byte	0x91
 4182 0436 81000000 		.4byte	0x81
 4183 043a 00       		.byte	0
 4184 043b 07       		.uleb128 0x7
 4185 043c 20020000 		.4byte	.LASF68
 4186 0440 05       		.byte	0x5
 4187 0441 92       		.byte	0x92
 4188 0442 84040000 		.4byte	0x484
 4189 0446 01       		.byte	0x1
 4190 0447 07       		.uleb128 0x7
 4191 0448 7E060000 		.4byte	.LASF69
 4192 044c 05       		.byte	0x5
 4193 044d 93       		.byte	0x93
 4194 044e A0040000 		.4byte	0x4a0
 4195 0452 B5       		.byte	0xb5
 4196 0453 07       		.uleb128 0x7
 4197 0454 FD020000 		.4byte	.LASF70
 4198 0458 05       		.byte	0x5
 4199 0459 94       		.byte	0x94
 4200 045a A0030000 		.4byte	0x3a0
 4201 045e D5       		.byte	0xd5
 4202 045f 07       		.uleb128 0x7
 4203 0460 16060000 		.4byte	.LASF71
 4204 0464 05       		.byte	0x5
 4205 0465 95       		.byte	0x95
 4206 0466 A0030000 		.4byte	0x3a0
 4207 046a E3       		.byte	0xe3
 4208 046b 07       		.uleb128 0x7
 4209 046c 15030000 		.4byte	.LASF72
 4210 0470 05       		.byte	0x5
 4211 0471 96       		.byte	0x96
 4212 0472 A0030000 		.4byte	0x3a0
 4213 0476 F1       		.byte	0xf1
 4214 0477 07       		.uleb128 0x7
 4215 0478 47060000 		.4byte	.LASF73
 4216 047c 05       		.byte	0x5
 4217 047d 97       		.byte	0x97
 4218 047e 81000000 		.4byte	0x81
 4219 0482 FF       		.byte	0xff
 4220 0483 00       		.byte	0
 4221 0484 09       		.uleb128 0x9
 4222 0485 81000000 		.4byte	0x81
 4223 0489 A0040000 		.4byte	0x4a0
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 90


 4224 048d 0A       		.uleb128 0xa
 4225 048e C1000000 		.4byte	0xc1
 4226 0492 03       		.byte	0x3
 4227 0493 0A       		.uleb128 0xa
 4228 0494 C1000000 		.4byte	0xc1
 4229 0498 02       		.byte	0x2
 4230 0499 0A       		.uleb128 0xa
 4231 049a C1000000 		.4byte	0xc1
 4232 049e 0E       		.byte	0xe
 4233 049f 00       		.byte	0
 4234 04a0 09       		.uleb128 0x9
 4235 04a1 81000000 		.4byte	0x81
 4236 04a5 B6040000 		.4byte	0x4b6
 4237 04a9 0A       		.uleb128 0xa
 4238 04aa C1000000 		.4byte	0xc1
 4239 04ae 03       		.byte	0x3
 4240 04af 0A       		.uleb128 0xa
 4241 04b0 C1000000 		.4byte	0xc1
 4242 04b4 07       		.byte	0x7
 4243 04b5 00       		.byte	0
 4244 04b6 06       		.uleb128 0x6
 4245 04b7 DF050000 		.4byte	.LASF74
 4246 04bb 0002     		.2byte	0x200
 4247 04bd 05       		.byte	0x5
 4248 04be 9A       		.byte	0x9a
 4249 04bf D9040000 		.4byte	0x4d9
 4250 04c3 0B       		.uleb128 0xb
 4251 04c4 6100     		.ascii	"a\000"
 4252 04c6 05       		.byte	0x5
 4253 04c7 9B       		.byte	0x9b
 4254 04c8 22040000 		.4byte	0x422
 4255 04cc 00       		.byte	0
 4256 04cd 0C       		.uleb128 0xc
 4257 04ce 6200     		.ascii	"b\000"
 4258 04d0 05       		.byte	0x5
 4259 04d1 9C       		.byte	0x9c
 4260 04d2 22040000 		.4byte	0x422
 4261 04d6 0001     		.2byte	0x100
 4262 04d8 00       		.byte	0
 4263 04d9 0D       		.uleb128 0xd
 4264 04da 99020000 		.4byte	.LASF75
 4265 04de 01       		.byte	0x1
 4266 04df 38       		.byte	0x38
 4267 04e0 81000000 		.4byte	0x81
 4268 04e4 00000000 		.4byte	.LFB56
 4269 04e8 42000000 		.4byte	.LFE56-.LFB56
 4270 04ec 01       		.uleb128 0x1
 4271 04ed 9C       		.byte	0x9c
 4272 04ee 0F050000 		.4byte	0x50f
 4273 04f2 0E       		.uleb128 0xe
 4274 04f3 706F7300 		.ascii	"pos\000"
 4275 04f7 01       		.byte	0x1
 4276 04f8 38       		.byte	0x38
 4277 04f9 81000000 		.4byte	0x81
 4278 04fd 02       		.uleb128 0x2
 4279 04fe 91       		.byte	0x91
 4280 04ff 6F       		.sleb128 -17
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 91


 4281 0500 0F       		.uleb128 0xf
 4282 0501 ED050000 		.4byte	.LASF77
 4283 0505 01       		.byte	0x1
 4284 0506 39       		.byte	0x39
 4285 0507 81000000 		.4byte	0x81
 4286 050b 02       		.uleb128 0x2
 4287 050c 91       		.byte	0x91
 4288 050d 77       		.sleb128 -9
 4289 050e 00       		.byte	0
 4290 050f 0D       		.uleb128 0xd
 4291 0510 E4000000 		.4byte	.LASF76
 4292 0514 01       		.byte	0x1
 4293 0515 57       		.byte	0x57
 4294 0516 81000000 		.4byte	0x81
 4295 051a 00000000 		.4byte	.LFB57
 4296 051e B8000000 		.4byte	.LFE57-.LFB57
 4297 0522 01       		.uleb128 0x1
 4298 0523 9C       		.byte	0x9c
 4299 0524 35050000 		.4byte	0x535
 4300 0528 10       		.uleb128 0x10
 4301 0529 7800     		.ascii	"x\000"
 4302 052b 01       		.byte	0x1
 4303 052c 58       		.byte	0x58
 4304 052d 81000000 		.4byte	0x81
 4305 0531 02       		.uleb128 0x2
 4306 0532 91       		.byte	0x91
 4307 0533 77       		.sleb128 -9
 4308 0534 00       		.byte	0
 4309 0535 0D       		.uleb128 0xd
 4310 0536 20010000 		.4byte	.LASF78
 4311 053a 01       		.byte	0x1
 4312 053b 86       		.byte	0x86
 4313 053c 81000000 		.4byte	0x81
 4314 0540 00000000 		.4byte	.LFB58
 4315 0544 1C010000 		.4byte	.LFE58-.LFB58
 4316 0548 01       		.uleb128 0x1
 4317 0549 9C       		.byte	0x9c
 4318 054a 85050000 		.4byte	0x585
 4319 054e 0E       		.uleb128 0xe
 4320 054f 706F7300 		.ascii	"pos\000"
 4321 0553 01       		.byte	0x1
 4322 0554 86       		.byte	0x86
 4323 0555 81000000 		.4byte	0x81
 4324 0559 02       		.uleb128 0x2
 4325 055a 91       		.byte	0x91
 4326 055b 4F       		.sleb128 -49
 4327 055c 0F       		.uleb128 0xf
 4328 055d 16000000 		.4byte	.LASF66
 4329 0561 01       		.byte	0x1
 4330 0562 87       		.byte	0x87
 4331 0563 85050000 		.4byte	0x585
 4332 0567 02       		.uleb128 0x2
 4333 0568 91       		.byte	0x91
 4334 0569 5C       		.sleb128 -36
 4335 056a 0F       		.uleb128 0xf
 4336 056b 0E060000 		.4byte	.LASF79
 4337 056f 01       		.byte	0x1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 92


 4338 0570 87       		.byte	0x87
 4339 0571 95050000 		.4byte	0x595
 4340 0575 02       		.uleb128 0x2
 4341 0576 91       		.byte	0x91
 4342 0577 50       		.sleb128 -48
 4343 0578 10       		.uleb128 0x10
 4344 0579 7800     		.ascii	"x\000"
 4345 057b 01       		.byte	0x1
 4346 057c 87       		.byte	0x87
 4347 057d 81000000 		.4byte	0x81
 4348 0581 02       		.uleb128 0x2
 4349 0582 91       		.byte	0x91
 4350 0583 6F       		.sleb128 -17
 4351 0584 00       		.byte	0
 4352 0585 09       		.uleb128 0x9
 4353 0586 81000000 		.4byte	0x81
 4354 058a 95050000 		.4byte	0x595
 4355 058e 0A       		.uleb128 0xa
 4356 058f C1000000 		.4byte	0xc1
 4357 0593 12       		.byte	0x12
 4358 0594 00       		.byte	0
 4359 0595 09       		.uleb128 0x9
 4360 0596 81000000 		.4byte	0x81
 4361 059a A5050000 		.4byte	0x5a5
 4362 059e 0A       		.uleb128 0xa
 4363 059f C1000000 		.4byte	0xc1
 4364 05a3 08       		.byte	0x8
 4365 05a4 00       		.byte	0
 4366 05a5 0D       		.uleb128 0xd
 4367 05a6 87050000 		.4byte	.LASF80
 4368 05aa 01       		.byte	0x1
 4369 05ab BC       		.byte	0xbc
 4370 05ac 81000000 		.4byte	0x81
 4371 05b0 00000000 		.4byte	.LFB59
 4372 05b4 C8070000 		.4byte	.LFE59-.LFB59
 4373 05b8 01       		.uleb128 0x1
 4374 05b9 9C       		.byte	0x9c
 4375 05ba 0B060000 		.4byte	0x60b
 4376 05be 0E       		.uleb128 0xe
 4377 05bf 706F7300 		.ascii	"pos\000"
 4378 05c3 01       		.byte	0x1
 4379 05c4 BC       		.byte	0xbc
 4380 05c5 81000000 		.4byte	0x81
 4381 05c9 02       		.uleb128 0x2
 4382 05ca 91       		.byte	0x91
 4383 05cb 67       		.sleb128 -25
 4384 05cc 10       		.uleb128 0x10
 4385 05cd 7800     		.ascii	"x\000"
 4386 05cf 01       		.byte	0x1
 4387 05d0 BD       		.byte	0xbd
 4388 05d1 81000000 		.4byte	0x81
 4389 05d5 02       		.uleb128 0x2
 4390 05d6 91       		.byte	0x91
 4391 05d7 6F       		.sleb128 -17
 4392 05d8 10       		.uleb128 0x10
 4393 05d9 7900     		.ascii	"y\000"
 4394 05db 01       		.byte	0x1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 93


 4395 05dc BD       		.byte	0xbd
 4396 05dd 81000000 		.4byte	0x81
 4397 05e1 02       		.uleb128 0x2
 4398 05e2 91       		.byte	0x91
 4399 05e3 6E       		.sleb128 -18
 4400 05e4 10       		.uleb128 0x10
 4401 05e5 7A00     		.ascii	"z\000"
 4402 05e7 01       		.byte	0x1
 4403 05e8 BD       		.byte	0xbd
 4404 05e9 81000000 		.4byte	0x81
 4405 05ed 02       		.uleb128 0x2
 4406 05ee 91       		.byte	0x91
 4407 05ef 6D       		.sleb128 -19
 4408 05f0 10       		.uleb128 0x10
 4409 05f1 7700     		.ascii	"w\000"
 4410 05f3 01       		.byte	0x1
 4411 05f4 BD       		.byte	0xbd
 4412 05f5 81000000 		.4byte	0x81
 4413 05f9 02       		.uleb128 0x2
 4414 05fa 91       		.byte	0x91
 4415 05fb 6C       		.sleb128 -20
 4416 05fc 0F       		.uleb128 0xf
 4417 05fd 2E040000 		.4byte	.LASF81
 4418 0601 01       		.byte	0x1
 4419 0602 BD       		.byte	0xbd
 4420 0603 81000000 		.4byte	0x81
 4421 0607 02       		.uleb128 0x2
 4422 0608 91       		.byte	0x91
 4423 0609 6B       		.sleb128 -21
 4424 060a 00       		.byte	0
 4425 060b 11       		.uleb128 0x11
 4426 060c 45050000 		.4byte	.LASF82
 4427 0610 01       		.byte	0x1
 4428 0611 6C01     		.2byte	0x16c
 4429 0613 81000000 		.4byte	0x81
 4430 0617 00000000 		.4byte	.LFB60
 4431 061b C4020000 		.4byte	.LFE60-.LFB60
 4432 061f 01       		.uleb128 0x1
 4433 0620 9C       		.byte	0x9c
 4434 0621 8B060000 		.4byte	0x68b
 4435 0625 12       		.uleb128 0x12
 4436 0626 706F7300 		.ascii	"pos\000"
 4437 062a 01       		.byte	0x1
 4438 062b 6C01     		.2byte	0x16c
 4439 062d 81000000 		.4byte	0x81
 4440 0631 02       		.uleb128 0x2
 4441 0632 91       		.byte	0x91
 4442 0633 57       		.sleb128 -41
 4443 0634 13       		.uleb128 0x13
 4444 0635 40060000 		.4byte	.LASF83
 4445 0639 01       		.byte	0x1
 4446 063a 6C01     		.2byte	0x16c
 4447 063c 81000000 		.4byte	0x81
 4448 0640 02       		.uleb128 0x2
 4449 0641 91       		.byte	0x91
 4450 0642 56       		.sleb128 -42
 4451 0643 13       		.uleb128 0x13
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 94


 4452 0644 8E010000 		.4byte	.LASF84
 4453 0648 01       		.byte	0x1
 4454 0649 6C01     		.2byte	0x16c
 4455 064b 8B060000 		.4byte	0x68b
 4456 064f 02       		.uleb128 0x2
 4457 0650 91       		.byte	0x91
 4458 0651 50       		.sleb128 -48
 4459 0652 14       		.uleb128 0x14
 4460 0653 16000000 		.4byte	.LASF66
 4461 0657 01       		.byte	0x1
 4462 0658 6D01     		.2byte	0x16d
 4463 065a 12040000 		.4byte	0x412
 4464 065e 02       		.uleb128 0x2
 4465 065f 91       		.byte	0x91
 4466 0660 5C       		.sleb128 -36
 4467 0661 14       		.uleb128 0x14
 4468 0662 15040000 		.4byte	.LASF85
 4469 0666 01       		.byte	0x1
 4470 0667 6D01     		.2byte	0x16d
 4471 0669 81000000 		.4byte	0x81
 4472 066d 02       		.uleb128 0x2
 4473 066e 91       		.byte	0x91
 4474 066f 6F       		.sleb128 -17
 4475 0670 15       		.uleb128 0x15
 4476 0671 7800     		.ascii	"x\000"
 4477 0673 01       		.byte	0x1
 4478 0674 6D01     		.2byte	0x16d
 4479 0676 81000000 		.4byte	0x81
 4480 067a 02       		.uleb128 0x2
 4481 067b 91       		.byte	0x91
 4482 067c 6E       		.sleb128 -18
 4483 067d 15       		.uleb128 0x15
 4484 067e 7900     		.ascii	"y\000"
 4485 0680 01       		.byte	0x1
 4486 0681 6D01     		.2byte	0x16d
 4487 0683 81000000 		.4byte	0x81
 4488 0687 02       		.uleb128 0x2
 4489 0688 91       		.byte	0x91
 4490 0689 6D       		.sleb128 -19
 4491 068a 00       		.byte	0
 4492 068b 16       		.uleb128 0x16
 4493 068c 04       		.byte	0x4
 4494 068d 81000000 		.4byte	0x81
 4495 0691 11       		.uleb128 0x11
 4496 0692 62010000 		.4byte	.LASF86
 4497 0696 01       		.byte	0x1
 4498 0697 C401     		.2byte	0x1c4
 4499 0699 81000000 		.4byte	0x81
 4500 069d 00000000 		.4byte	.LFB61
 4501 06a1 70050000 		.4byte	.LFE61-.LFB61
 4502 06a5 01       		.uleb128 0x1
 4503 06a6 9C       		.byte	0x9c
 4504 06a7 2D070000 		.4byte	0x72d
 4505 06ab 12       		.uleb128 0x12
 4506 06ac 706F7300 		.ascii	"pos\000"
 4507 06b0 01       		.byte	0x1
 4508 06b1 C401     		.2byte	0x1c4
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 95


 4509 06b3 81000000 		.4byte	0x81
 4510 06b7 02       		.uleb128 0x2
 4511 06b8 91       		.byte	0x91
 4512 06b9 5F       		.sleb128 -33
 4513 06ba 13       		.uleb128 0x13
 4514 06bb 69060000 		.4byte	.LASF87
 4515 06bf 01       		.byte	0x1
 4516 06c0 C401     		.2byte	0x1c4
 4517 06c2 81000000 		.4byte	0x81
 4518 06c6 02       		.uleb128 0x2
 4519 06c7 91       		.byte	0x91
 4520 06c8 5E       		.sleb128 -34
 4521 06c9 13       		.uleb128 0x13
 4522 06ca 8E010000 		.4byte	.LASF84
 4523 06ce 01       		.byte	0x1
 4524 06cf C401     		.2byte	0x1c4
 4525 06d1 8B060000 		.4byte	0x68b
 4526 06d5 02       		.uleb128 0x2
 4527 06d6 91       		.byte	0x91
 4528 06d7 58       		.sleb128 -40
 4529 06d8 13       		.uleb128 0x13
 4530 06d9 3E010000 		.4byte	.LASF88
 4531 06dd 01       		.byte	0x1
 4532 06de C401     		.2byte	0x1c4
 4533 06e0 81000000 		.4byte	0x81
 4534 06e4 02       		.uleb128 0x2
 4535 06e5 91       		.byte	0x91
 4536 06e6 5D       		.sleb128 -35
 4537 06e7 14       		.uleb128 0x14
 4538 06e8 16000000 		.4byte	.LASF66
 4539 06ec 01       		.byte	0x1
 4540 06ed C501     		.2byte	0x1c5
 4541 06ef 2D070000 		.4byte	0x72d
 4542 06f3 02       		.uleb128 0x2
 4543 06f4 91       		.byte	0x91
 4544 06f5 60       		.sleb128 -32
 4545 06f6 15       		.uleb128 0x15
 4546 06f7 7800     		.ascii	"x\000"
 4547 06f9 01       		.byte	0x1
 4548 06fa C501     		.2byte	0x1c5
 4549 06fc 81000000 		.4byte	0x81
 4550 0700 02       		.uleb128 0x2
 4551 0701 91       		.byte	0x91
 4552 0702 77       		.sleb128 -9
 4553 0703 15       		.uleb128 0x15
 4554 0704 7900     		.ascii	"y\000"
 4555 0706 01       		.byte	0x1
 4556 0707 C501     		.2byte	0x1c5
 4557 0709 81000000 		.4byte	0x81
 4558 070d 02       		.uleb128 0x2
 4559 070e 91       		.byte	0x91
 4560 070f 76       		.sleb128 -10
 4561 0710 15       		.uleb128 0x15
 4562 0711 7A00     		.ascii	"z\000"
 4563 0713 01       		.byte	0x1
 4564 0714 C501     		.2byte	0x1c5
 4565 0716 81000000 		.4byte	0x81
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 96


 4566 071a 02       		.uleb128 0x2
 4567 071b 91       		.byte	0x91
 4568 071c 75       		.sleb128 -11
 4569 071d 14       		.uleb128 0x14
 4570 071e 0D010000 		.4byte	.LASF89
 4571 0722 01       		.byte	0x1
 4572 0723 C501     		.2byte	0x1c5
 4573 0725 81000000 		.4byte	0x81
 4574 0729 02       		.uleb128 0x2
 4575 072a 91       		.byte	0x91
 4576 072b 74       		.sleb128 -12
 4577 072c 00       		.byte	0
 4578 072d 09       		.uleb128 0x9
 4579 072e 81000000 		.4byte	0x81
 4580 0732 3D070000 		.4byte	0x73d
 4581 0736 0A       		.uleb128 0xa
 4582 0737 C1000000 		.4byte	0xc1
 4583 073b 11       		.byte	0x11
 4584 073c 00       		.byte	0
 4585 073d 11       		.uleb128 0x11
 4586 073e 0A020000 		.4byte	.LASF90
 4587 0742 01       		.byte	0x1
 4588 0743 6102     		.2byte	0x261
 4589 0745 81000000 		.4byte	0x81
 4590 0749 00000000 		.4byte	.LFB62
 4591 074d F0040000 		.4byte	.LFE62-.LFB62
 4592 0751 01       		.uleb128 0x1
 4593 0752 9C       		.byte	0x9c
 4594 0753 74070000 		.4byte	0x774
 4595 0757 12       		.uleb128 0x12
 4596 0758 706F7300 		.ascii	"pos\000"
 4597 075c 01       		.byte	0x1
 4598 075d 6102     		.2byte	0x261
 4599 075f 81000000 		.4byte	0x81
 4600 0763 02       		.uleb128 0x2
 4601 0764 91       		.byte	0x91
 4602 0765 6F       		.sleb128 -17
 4603 0766 15       		.uleb128 0x15
 4604 0767 7800     		.ascii	"x\000"
 4605 0769 01       		.byte	0x1
 4606 076a 6202     		.2byte	0x262
 4607 076c 81000000 		.4byte	0x81
 4608 0770 02       		.uleb128 0x2
 4609 0771 91       		.byte	0x91
 4610 0772 77       		.sleb128 -9
 4611 0773 00       		.byte	0
 4612 0774 09       		.uleb128 0x9
 4613 0775 81000000 		.4byte	0x81
 4614 0779 84070000 		.4byte	0x784
 4615 077d 0A       		.uleb128 0xa
 4616 077e C1000000 		.4byte	0xc1
 4617 0782 FF       		.byte	0xff
 4618 0783 00       		.byte	0
 4619 0784 17       		.uleb128 0x17
 4620 0785 BD020000 		.4byte	.LASF91
 4621 0789 06       		.byte	0x6
 4622 078a 5201     		.2byte	0x152
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 97


 4623 078c 90070000 		.4byte	0x790
 4624 0790 05       		.uleb128 0x5
 4625 0791 74070000 		.4byte	0x774
 4626 0795 17       		.uleb128 0x17
 4627 0796 C4040000 		.4byte	.LASF92
 4628 079a 07       		.byte	0x7
 4629 079b 1606     		.2byte	0x616
 4630 079d A1070000 		.4byte	0x7a1
 4631 07a1 05       		.uleb128 0x5
 4632 07a2 76000000 		.4byte	0x76
 4633 07a6 18       		.uleb128 0x18
 4634 07a7 22030000 		.4byte	.LASF93
 4635 07ab 05       		.byte	0x5
 4636 07ac 2C       		.byte	0x2c
 4637 07ad B7070000 		.4byte	0x7b7
 4638 07b1 05       		.uleb128 0x5
 4639 07b2 03       		.byte	0x3
 4640 07b3 00000000 		.4byte	countAnimation1
 4641 07b7 05       		.uleb128 0x5
 4642 07b8 A5000000 		.4byte	0xa5
 4643 07bc 18       		.uleb128 0x18
 4644 07bd 43030000 		.4byte	.LASF94
 4645 07c1 05       		.byte	0x5
 4646 07c2 2D       		.byte	0x2d
 4647 07c3 B7070000 		.4byte	0x7b7
 4648 07c7 05       		.uleb128 0x5
 4649 07c8 03       		.byte	0x3
 4650 07c9 00000000 		.4byte	countAnimation2
 4651 07cd 18       		.uleb128 0x18
 4652 07ce 8B020000 		.4byte	.LASF95
 4653 07d2 05       		.byte	0x5
 4654 07d3 2E       		.byte	0x2e
 4655 07d4 B7070000 		.4byte	0x7b7
 4656 07d8 05       		.uleb128 0x5
 4657 07d9 03       		.byte	0x3
 4658 07da 00000000 		.4byte	countBeagleTX
 4659 07de 18       		.uleb128 0x18
 4660 07df 49020000 		.4byte	.LASF96
 4661 07e3 05       		.byte	0x5
 4662 07e4 2F       		.byte	0x2f
 4663 07e5 BC000000 		.4byte	0xbc
 4664 07e9 05       		.uleb128 0x5
 4665 07ea 03       		.byte	0x3
 4666 07eb 00000000 		.4byte	flowLCD1
 4667 07ef 18       		.uleb128 0x18
 4668 07f0 52020000 		.4byte	.LASF97
 4669 07f4 05       		.byte	0x5
 4670 07f5 30       		.byte	0x30
 4671 07f6 BC000000 		.4byte	0xbc
 4672 07fa 05       		.uleb128 0x5
 4673 07fb 03       		.byte	0x3
 4674 07fc 00000000 		.4byte	flowLCD2
 4675 0800 18       		.uleb128 0x18
 4676 0801 82010000 		.4byte	.LASF98
 4677 0805 05       		.byte	0x5
 4678 0806 31       		.byte	0x31
 4679 0807 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 98


 4680 080b 05       		.uleb128 0x5
 4681 080c 03       		.byte	0x3
 4682 080d 00000000 		.4byte	digits
 4683 0811 09       		.uleb128 0x9
 4684 0812 81000000 		.4byte	0x81
 4685 0816 21080000 		.4byte	0x821
 4686 081a 0A       		.uleb128 0xa
 4687 081b C1000000 		.4byte	0xc1
 4688 081f 0B       		.byte	0xb
 4689 0820 00       		.byte	0
 4690 0821 18       		.uleb128 0x18
 4691 0822 1D000000 		.4byte	.LASF99
 4692 0826 05       		.byte	0x5
 4693 0827 32       		.byte	0x32
 4694 0828 32080000 		.4byte	0x832
 4695 082c 05       		.uleb128 0x5
 4696 082d 03       		.byte	0x3
 4697 082e 00000000 		.4byte	ipAdress
 4698 0832 05       		.uleb128 0x5
 4699 0833 11080000 		.4byte	0x811
 4700 0837 18       		.uleb128 0x18
 4701 0838 73020000 		.4byte	.LASF100
 4702 083c 05       		.byte	0x5
 4703 083d 33       		.byte	0x33
 4704 083e B7000000 		.4byte	0xb7
 4705 0842 05       		.uleb128 0x5
 4706 0843 03       		.byte	0x3
 4707 0844 00000000 		.4byte	numberKeys1
 4708 0848 18       		.uleb128 0x18
 4709 0849 7F020000 		.4byte	.LASF101
 4710 084d 05       		.byte	0x5
 4711 084e 34       		.byte	0x34
 4712 084f B7000000 		.4byte	0xb7
 4713 0853 05       		.uleb128 0x5
 4714 0854 03       		.byte	0x3
 4715 0855 00000000 		.4byte	numberKeys2
 4716 0859 18       		.uleb128 0x18
 4717 085a 73040000 		.4byte	.LASF102
 4718 085e 05       		.byte	0x5
 4719 085f 35       		.byte	0x35
 4720 0860 B7000000 		.4byte	0xb7
 4721 0864 05       		.uleb128 0x5
 4722 0865 03       		.byte	0x3
 4723 0866 00000000 		.4byte	flagPoint1
 4724 086a 18       		.uleb128 0x18
 4725 086b 15010000 		.4byte	.LASF103
 4726 086f 05       		.byte	0x5
 4727 0870 36       		.byte	0x36
 4728 0871 B7000000 		.4byte	0xb7
 4729 0875 05       		.uleb128 0x5
 4730 0876 03       		.byte	0x3
 4731 0877 00000000 		.4byte	flagPoint2
 4732 087b 09       		.uleb128 0x9
 4733 087c 81000000 		.4byte	0x81
 4734 0880 91080000 		.4byte	0x891
 4735 0884 0A       		.uleb128 0xa
 4736 0885 C1000000 		.4byte	0xc1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 99


 4737 0889 77       		.byte	0x77
 4738 088a 0A       		.uleb128 0xa
 4739 088b C1000000 		.4byte	0xc1
 4740 088f 07       		.byte	0x7
 4741 0890 00       		.byte	0
 4742 0891 18       		.uleb128 0x18
 4743 0892 03020000 		.4byte	.LASF104
 4744 0896 05       		.byte	0x5
 4745 0897 37       		.byte	0x37
 4746 0898 A2080000 		.4byte	0x8a2
 4747 089c 05       		.uleb128 0x5
 4748 089d 03       		.byte	0x3
 4749 089e 00000000 		.4byte	button
 4750 08a2 05       		.uleb128 0x5
 4751 08a3 7B080000 		.4byte	0x87b
 4752 08a7 18       		.uleb128 0x18
 4753 08a8 A0010000 		.4byte	.LASF105
 4754 08ac 05       		.byte	0x5
 4755 08ad 38       		.byte	0x38
 4756 08ae B7000000 		.4byte	0xb7
 4757 08b2 05       		.uleb128 0x5
 4758 08b3 03       		.byte	0x3
 4759 08b4 00000000 		.4byte	productNumber
 4760 08b8 18       		.uleb128 0x18
 4761 08b9 F2020000 		.4byte	.LASF106
 4762 08bd 05       		.byte	0x5
 4763 08be 39       		.byte	0x39
 4764 08bf FC030000 		.4byte	0x3fc
 4765 08c3 05       		.uleb128 0x5
 4766 08c4 03       		.byte	0x3
 4767 08c5 00000000 		.4byte	presetFast
 4768 08c9 18       		.uleb128 0x18
 4769 08ca 20050000 		.4byte	.LASF107
 4770 08ce 05       		.byte	0x5
 4771 08cf 3A       		.byte	0x3a
 4772 08d0 BC000000 		.4byte	0xbc
 4773 08d4 05       		.uleb128 0x5
 4774 08d5 03       		.byte	0x3
 4775 08d6 00000000 		.4byte	delayPicture1
 4776 08da 18       		.uleb128 0x18
 4777 08db 2E050000 		.4byte	.LASF108
 4778 08df 05       		.byte	0x5
 4779 08e0 3B       		.byte	0x3b
 4780 08e1 BC000000 		.4byte	0xbc
 4781 08e5 05       		.uleb128 0x5
 4782 08e6 03       		.byte	0x3
 4783 08e7 00000000 		.4byte	delayPicture2
 4784 08eb 18       		.uleb128 0x18
 4785 08ec 59040000 		.4byte	.LASF109
 4786 08f0 05       		.byte	0x5
 4787 08f1 3C       		.byte	0x3c
 4788 08f2 B7000000 		.4byte	0xb7
 4789 08f6 05       		.uleb128 0x5
 4790 08f7 03       		.byte	0x3
 4791 08f8 00000000 		.4byte	ppux10
 4792 08fc 18       		.uleb128 0x18
 4793 08fd 26000000 		.4byte	.LASF110
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 100


 4794 0901 05       		.byte	0x5
 4795 0902 3D       		.byte	0x3d
 4796 0903 B7000000 		.4byte	0xb7
 4797 0907 05       		.uleb128 0x5
 4798 0908 03       		.byte	0x3
 4799 0909 00000000 		.4byte	decimalMoney
 4800 090d 18       		.uleb128 0x18
 4801 090e 00000000 		.4byte	.LASF111
 4802 0912 05       		.byte	0x5
 4803 0913 3E       		.byte	0x3e
 4804 0914 B7000000 		.4byte	0xb7
 4805 0918 05       		.uleb128 0x5
 4806 0919 03       		.byte	0x3
 4807 091a 00000000 		.4byte	decimalVolume
 4808 091e 18       		.uleb128 0x18
 4809 091f 90040000 		.4byte	.LASF112
 4810 0923 05       		.byte	0x5
 4811 0924 3F       		.byte	0x3f
 4812 0925 2F090000 		.4byte	0x92f
 4813 0929 05       		.uleb128 0x5
 4814 092a 03       		.byte	0x3
 4815 092b 00000000 		.4byte	symbols
 4816 092f 05       		.uleb128 0x5
 4817 0930 5A030000 		.4byte	0x35a
 4818 0934 09       		.uleb128 0x9
 4819 0935 81000000 		.4byte	0x81
 4820 0939 44090000 		.4byte	0x944
 4821 093d 0A       		.uleb128 0xa
 4822 093e C1000000 		.4byte	0xc1
 4823 0942 02       		.byte	0x2
 4824 0943 00       		.byte	0
 4825 0944 18       		.uleb128 0x18
 4826 0945 89010000 		.4byte	.LASF113
 4827 0949 05       		.byte	0x5
 4828 094a 40       		.byte	0x40
 4829 094b 55090000 		.4byte	0x955
 4830 094f 05       		.uleb128 0x5
 4831 0950 03       		.byte	0x3
 4832 0951 00000000 		.4byte	time
 4833 0955 05       		.uleb128 0x5
 4834 0956 34090000 		.4byte	0x934
 4835 095a 18       		.uleb128 0x18
 4836 095b A3020000 		.4byte	.LASF114
 4837 095f 05       		.byte	0x5
 4838 0960 41       		.byte	0x41
 4839 0961 6B090000 		.4byte	0x96b
 4840 0965 05       		.uleb128 0x5
 4841 0966 03       		.byte	0x3
 4842 0967 00000000 		.4byte	date
 4843 096b 05       		.uleb128 0x5
 4844 096c 34090000 		.4byte	0x934
 4845 0970 18       		.uleb128 0x18
 4846 0971 2B010000 		.4byte	.LASF115
 4847 0975 05       		.byte	0x5
 4848 0976 42       		.byte	0x42
 4849 0977 81090000 		.4byte	0x981
 4850 097b 05       		.uleb128 0x5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 101


 4851 097c 03       		.byte	0x3
 4852 097d 00000000 		.4byte	screen
 4853 0981 05       		.uleb128 0x5
 4854 0982 5A030000 		.4byte	0x35a
 4855 0986 18       		.uleb128 0x18
 4856 0987 D5000000 		.4byte	.LASF116
 4857 098b 05       		.byte	0x5
 4858 098c 43       		.byte	0x43
 4859 098d 97090000 		.4byte	0x997
 4860 0991 05       		.uleb128 0x5
 4861 0992 03       		.byte	0x3
 4862 0993 00000000 		.4byte	residue
 4863 0997 05       		.uleb128 0x5
 4864 0998 A0030000 		.4byte	0x3a0
 4865 099c 09       		.uleb128 0x9
 4866 099d 81000000 		.4byte	0x81
 4867 09a1 AC090000 		.4byte	0x9ac
 4868 09a5 0A       		.uleb128 0xa
 4869 09a6 C1000000 		.4byte	0xc1
 4870 09aa 1D       		.byte	0x1d
 4871 09ab 00       		.byte	0
 4872 09ac 18       		.uleb128 0x18
 4873 09ad E4050000 		.4byte	.LASF117
 4874 09b1 05       		.byte	0x5
 4875 09b2 44       		.byte	0x44
 4876 09b3 9C090000 		.4byte	0x99c
 4877 09b7 05       		.uleb128 0x5
 4878 09b8 03       		.byte	0x3
 4879 09b9 00000000 		.4byte	temporal
 4880 09bd 18       		.uleb128 0x18
 4881 09be 39020000 		.4byte	.LASF118
 4882 09c2 05       		.byte	0x5
 4883 09c3 45       		.byte	0x45
 4884 09c4 B7000000 		.4byte	0xb7
 4885 09c8 05       		.uleb128 0x5
 4886 09c9 03       		.byte	0x3
 4887 09ca 00000000 		.4byte	turn
 4888 09ce 18       		.uleb128 0x18
 4889 09cf D6050000 		.4byte	.LASF119
 4890 09d3 05       		.byte	0x5
 4891 09d4 46       		.byte	0x46
 4892 09d5 DF090000 		.4byte	0x9df
 4893 09d9 05       		.uleb128 0x5
 4894 09da 03       		.byte	0x3
 4895 09db 00000000 		.4byte	idSeller
 4896 09df 05       		.uleb128 0x5
 4897 09e0 2A030000 		.4byte	0x32a
 4898 09e4 18       		.uleb128 0x18
 4899 09e5 D1040000 		.4byte	.LASF120
 4900 09e9 05       		.byte	0x5
 4901 09ea 47       		.byte	0x47
 4902 09eb B7000000 		.4byte	0xb7
 4903 09ef 05       		.uleb128 0x5
 4904 09f0 03       		.byte	0x3
 4905 09f1 00000000 		.4byte	typeIdSeller
 4906 09f5 09       		.uleb128 0x9
 4907 09f6 81000000 		.4byte	0x81
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 102


 4908 09fa 050A0000 		.4byte	0xa05
 4909 09fe 0A       		.uleb128 0xa
 4910 09ff C1000000 		.4byte	0xc1
 4911 0a03 07       		.byte	0x7
 4912 0a04 00       		.byte	0
 4913 0a05 18       		.uleb128 0x18
 4914 0a06 F9040000 		.4byte	.LASF121
 4915 0a0a 05       		.byte	0x5
 4916 0a0b 48       		.byte	0x48
 4917 0a0c 160A0000 		.4byte	0xa16
 4918 0a10 05       		.uleb128 0x5
 4919 0a11 03       		.byte	0x3
 4920 0a12 00000000 		.4byte	passwordSeller
 4921 0a16 05       		.uleb128 0x5
 4922 0a17 F5090000 		.4byte	0x9f5
 4923 0a1b 18       		.uleb128 0x18
 4924 0a1c 21040000 		.4byte	.LASF122
 4925 0a20 05       		.byte	0x5
 4926 0a21 49       		.byte	0x49
 4927 0a22 B7000000 		.4byte	0xb7
 4928 0a26 05       		.uleb128 0x5
 4929 0a27 03       		.byte	0x3
 4930 0a28 00000000 		.4byte	flagResetMux
 4931 0a2c 18       		.uleb128 0x18
 4932 0a2d C6010000 		.4byte	.LASF123
 4933 0a31 05       		.byte	0x5
 4934 0a32 85       		.byte	0x85
 4935 0a33 C8000000 		.4byte	0xc8
 4936 0a37 05       		.uleb128 0x5
 4937 0a38 03       		.byte	0x3
 4938 0a39 00000000 		.4byte	bufferLCD1
 4939 0a3d 18       		.uleb128 0x18
 4940 0a3e D1010000 		.4byte	.LASF124
 4941 0a42 05       		.byte	0x5
 4942 0a43 86       		.byte	0x86
 4943 0a44 C8000000 		.4byte	0xc8
 4944 0a48 05       		.uleb128 0x5
 4945 0a49 03       		.byte	0x3
 4946 0a4a 00000000 		.4byte	bufferLCD2
 4947 0a4e 18       		.uleb128 0x18
 4948 0a4f 1D030000 		.4byte	.LASF125
 4949 0a53 05       		.byte	0x5
 4950 0a54 9F       		.byte	0x9f
 4951 0a55 B6040000 		.4byte	0x4b6
 4952 0a59 05       		.uleb128 0x5
 4953 0a5a 03       		.byte	0x3
 4954 0a5b 00000000 		.4byte	side
 4955 0a5f 00       		.byte	0
 4956              		.section	.debug_abbrev,"",%progbits
 4957              	.Ldebug_abbrev0:
 4958 0000 01       		.uleb128 0x1
 4959 0001 11       		.uleb128 0x11
 4960 0002 01       		.byte	0x1
 4961 0003 25       		.uleb128 0x25
 4962 0004 0E       		.uleb128 0xe
 4963 0005 13       		.uleb128 0x13
 4964 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 103


 4965 0007 03       		.uleb128 0x3
 4966 0008 0E       		.uleb128 0xe
 4967 0009 1B       		.uleb128 0x1b
 4968 000a 0E       		.uleb128 0xe
 4969 000b 55       		.uleb128 0x55
 4970 000c 17       		.uleb128 0x17
 4971 000d 11       		.uleb128 0x11
 4972 000e 01       		.uleb128 0x1
 4973 000f 10       		.uleb128 0x10
 4974 0010 17       		.uleb128 0x17
 4975 0011 00       		.byte	0
 4976 0012 00       		.byte	0
 4977 0013 02       		.uleb128 0x2
 4978 0014 24       		.uleb128 0x24
 4979 0015 00       		.byte	0
 4980 0016 0B       		.uleb128 0xb
 4981 0017 0B       		.uleb128 0xb
 4982 0018 3E       		.uleb128 0x3e
 4983 0019 0B       		.uleb128 0xb
 4984 001a 03       		.uleb128 0x3
 4985 001b 0E       		.uleb128 0xe
 4986 001c 00       		.byte	0
 4987 001d 00       		.byte	0
 4988 001e 03       		.uleb128 0x3
 4989 001f 16       		.uleb128 0x16
 4990 0020 00       		.byte	0
 4991 0021 03       		.uleb128 0x3
 4992 0022 0E       		.uleb128 0xe
 4993 0023 3A       		.uleb128 0x3a
 4994 0024 0B       		.uleb128 0xb
 4995 0025 3B       		.uleb128 0x3b
 4996 0026 0B       		.uleb128 0xb
 4997 0027 49       		.uleb128 0x49
 4998 0028 13       		.uleb128 0x13
 4999 0029 00       		.byte	0
 5000 002a 00       		.byte	0
 5001 002b 04       		.uleb128 0x4
 5002 002c 24       		.uleb128 0x24
 5003 002d 00       		.byte	0
 5004 002e 0B       		.uleb128 0xb
 5005 002f 0B       		.uleb128 0xb
 5006 0030 3E       		.uleb128 0x3e
 5007 0031 0B       		.uleb128 0xb
 5008 0032 03       		.uleb128 0x3
 5009 0033 08       		.uleb128 0x8
 5010 0034 00       		.byte	0
 5011 0035 00       		.byte	0
 5012 0036 05       		.uleb128 0x5
 5013 0037 35       		.uleb128 0x35
 5014 0038 00       		.byte	0
 5015 0039 49       		.uleb128 0x49
 5016 003a 13       		.uleb128 0x13
 5017 003b 00       		.byte	0
 5018 003c 00       		.byte	0
 5019 003d 06       		.uleb128 0x6
 5020 003e 13       		.uleb128 0x13
 5021 003f 01       		.byte	0x1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 104


 5022 0040 03       		.uleb128 0x3
 5023 0041 0E       		.uleb128 0xe
 5024 0042 0B       		.uleb128 0xb
 5025 0043 05       		.uleb128 0x5
 5026 0044 3A       		.uleb128 0x3a
 5027 0045 0B       		.uleb128 0xb
 5028 0046 3B       		.uleb128 0x3b
 5029 0047 0B       		.uleb128 0xb
 5030 0048 01       		.uleb128 0x1
 5031 0049 13       		.uleb128 0x13
 5032 004a 00       		.byte	0
 5033 004b 00       		.byte	0
 5034 004c 07       		.uleb128 0x7
 5035 004d 0D       		.uleb128 0xd
 5036 004e 00       		.byte	0
 5037 004f 03       		.uleb128 0x3
 5038 0050 0E       		.uleb128 0xe
 5039 0051 3A       		.uleb128 0x3a
 5040 0052 0B       		.uleb128 0xb
 5041 0053 3B       		.uleb128 0x3b
 5042 0054 0B       		.uleb128 0xb
 5043 0055 49       		.uleb128 0x49
 5044 0056 13       		.uleb128 0x13
 5045 0057 38       		.uleb128 0x38
 5046 0058 0B       		.uleb128 0xb
 5047 0059 00       		.byte	0
 5048 005a 00       		.byte	0
 5049 005b 08       		.uleb128 0x8
 5050 005c 0D       		.uleb128 0xd
 5051 005d 00       		.byte	0
 5052 005e 03       		.uleb128 0x3
 5053 005f 0E       		.uleb128 0xe
 5054 0060 3A       		.uleb128 0x3a
 5055 0061 0B       		.uleb128 0xb
 5056 0062 3B       		.uleb128 0x3b
 5057 0063 0B       		.uleb128 0xb
 5058 0064 49       		.uleb128 0x49
 5059 0065 13       		.uleb128 0x13
 5060 0066 38       		.uleb128 0x38
 5061 0067 05       		.uleb128 0x5
 5062 0068 00       		.byte	0
 5063 0069 00       		.byte	0
 5064 006a 09       		.uleb128 0x9
 5065 006b 01       		.uleb128 0x1
 5066 006c 01       		.byte	0x1
 5067 006d 49       		.uleb128 0x49
 5068 006e 13       		.uleb128 0x13
 5069 006f 01       		.uleb128 0x1
 5070 0070 13       		.uleb128 0x13
 5071 0071 00       		.byte	0
 5072 0072 00       		.byte	0
 5073 0073 0A       		.uleb128 0xa
 5074 0074 21       		.uleb128 0x21
 5075 0075 00       		.byte	0
 5076 0076 49       		.uleb128 0x49
 5077 0077 13       		.uleb128 0x13
 5078 0078 2F       		.uleb128 0x2f
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 105


 5079 0079 0B       		.uleb128 0xb
 5080 007a 00       		.byte	0
 5081 007b 00       		.byte	0
 5082 007c 0B       		.uleb128 0xb
 5083 007d 0D       		.uleb128 0xd
 5084 007e 00       		.byte	0
 5085 007f 03       		.uleb128 0x3
 5086 0080 08       		.uleb128 0x8
 5087 0081 3A       		.uleb128 0x3a
 5088 0082 0B       		.uleb128 0xb
 5089 0083 3B       		.uleb128 0x3b
 5090 0084 0B       		.uleb128 0xb
 5091 0085 49       		.uleb128 0x49
 5092 0086 13       		.uleb128 0x13
 5093 0087 38       		.uleb128 0x38
 5094 0088 0B       		.uleb128 0xb
 5095 0089 00       		.byte	0
 5096 008a 00       		.byte	0
 5097 008b 0C       		.uleb128 0xc
 5098 008c 0D       		.uleb128 0xd
 5099 008d 00       		.byte	0
 5100 008e 03       		.uleb128 0x3
 5101 008f 08       		.uleb128 0x8
 5102 0090 3A       		.uleb128 0x3a
 5103 0091 0B       		.uleb128 0xb
 5104 0092 3B       		.uleb128 0x3b
 5105 0093 0B       		.uleb128 0xb
 5106 0094 49       		.uleb128 0x49
 5107 0095 13       		.uleb128 0x13
 5108 0096 38       		.uleb128 0x38
 5109 0097 05       		.uleb128 0x5
 5110 0098 00       		.byte	0
 5111 0099 00       		.byte	0
 5112 009a 0D       		.uleb128 0xd
 5113 009b 2E       		.uleb128 0x2e
 5114 009c 01       		.byte	0x1
 5115 009d 3F       		.uleb128 0x3f
 5116 009e 19       		.uleb128 0x19
 5117 009f 03       		.uleb128 0x3
 5118 00a0 0E       		.uleb128 0xe
 5119 00a1 3A       		.uleb128 0x3a
 5120 00a2 0B       		.uleb128 0xb
 5121 00a3 3B       		.uleb128 0x3b
 5122 00a4 0B       		.uleb128 0xb
 5123 00a5 27       		.uleb128 0x27
 5124 00a6 19       		.uleb128 0x19
 5125 00a7 49       		.uleb128 0x49
 5126 00a8 13       		.uleb128 0x13
 5127 00a9 11       		.uleb128 0x11
 5128 00aa 01       		.uleb128 0x1
 5129 00ab 12       		.uleb128 0x12
 5130 00ac 06       		.uleb128 0x6
 5131 00ad 40       		.uleb128 0x40
 5132 00ae 18       		.uleb128 0x18
 5133 00af 9642     		.uleb128 0x2116
 5134 00b1 19       		.uleb128 0x19
 5135 00b2 01       		.uleb128 0x1
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 106


 5136 00b3 13       		.uleb128 0x13
 5137 00b4 00       		.byte	0
 5138 00b5 00       		.byte	0
 5139 00b6 0E       		.uleb128 0xe
 5140 00b7 05       		.uleb128 0x5
 5141 00b8 00       		.byte	0
 5142 00b9 03       		.uleb128 0x3
 5143 00ba 08       		.uleb128 0x8
 5144 00bb 3A       		.uleb128 0x3a
 5145 00bc 0B       		.uleb128 0xb
 5146 00bd 3B       		.uleb128 0x3b
 5147 00be 0B       		.uleb128 0xb
 5148 00bf 49       		.uleb128 0x49
 5149 00c0 13       		.uleb128 0x13
 5150 00c1 02       		.uleb128 0x2
 5151 00c2 18       		.uleb128 0x18
 5152 00c3 00       		.byte	0
 5153 00c4 00       		.byte	0
 5154 00c5 0F       		.uleb128 0xf
 5155 00c6 34       		.uleb128 0x34
 5156 00c7 00       		.byte	0
 5157 00c8 03       		.uleb128 0x3
 5158 00c9 0E       		.uleb128 0xe
 5159 00ca 3A       		.uleb128 0x3a
 5160 00cb 0B       		.uleb128 0xb
 5161 00cc 3B       		.uleb128 0x3b
 5162 00cd 0B       		.uleb128 0xb
 5163 00ce 49       		.uleb128 0x49
 5164 00cf 13       		.uleb128 0x13
 5165 00d0 02       		.uleb128 0x2
 5166 00d1 18       		.uleb128 0x18
 5167 00d2 00       		.byte	0
 5168 00d3 00       		.byte	0
 5169 00d4 10       		.uleb128 0x10
 5170 00d5 34       		.uleb128 0x34
 5171 00d6 00       		.byte	0
 5172 00d7 03       		.uleb128 0x3
 5173 00d8 08       		.uleb128 0x8
 5174 00d9 3A       		.uleb128 0x3a
 5175 00da 0B       		.uleb128 0xb
 5176 00db 3B       		.uleb128 0x3b
 5177 00dc 0B       		.uleb128 0xb
 5178 00dd 49       		.uleb128 0x49
 5179 00de 13       		.uleb128 0x13
 5180 00df 02       		.uleb128 0x2
 5181 00e0 18       		.uleb128 0x18
 5182 00e1 00       		.byte	0
 5183 00e2 00       		.byte	0
 5184 00e3 11       		.uleb128 0x11
 5185 00e4 2E       		.uleb128 0x2e
 5186 00e5 01       		.byte	0x1
 5187 00e6 3F       		.uleb128 0x3f
 5188 00e7 19       		.uleb128 0x19
 5189 00e8 03       		.uleb128 0x3
 5190 00e9 0E       		.uleb128 0xe
 5191 00ea 3A       		.uleb128 0x3a
 5192 00eb 0B       		.uleb128 0xb
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 107


 5193 00ec 3B       		.uleb128 0x3b
 5194 00ed 05       		.uleb128 0x5
 5195 00ee 27       		.uleb128 0x27
 5196 00ef 19       		.uleb128 0x19
 5197 00f0 49       		.uleb128 0x49
 5198 00f1 13       		.uleb128 0x13
 5199 00f2 11       		.uleb128 0x11
 5200 00f3 01       		.uleb128 0x1
 5201 00f4 12       		.uleb128 0x12
 5202 00f5 06       		.uleb128 0x6
 5203 00f6 40       		.uleb128 0x40
 5204 00f7 18       		.uleb128 0x18
 5205 00f8 9642     		.uleb128 0x2116
 5206 00fa 19       		.uleb128 0x19
 5207 00fb 01       		.uleb128 0x1
 5208 00fc 13       		.uleb128 0x13
 5209 00fd 00       		.byte	0
 5210 00fe 00       		.byte	0
 5211 00ff 12       		.uleb128 0x12
 5212 0100 05       		.uleb128 0x5
 5213 0101 00       		.byte	0
 5214 0102 03       		.uleb128 0x3
 5215 0103 08       		.uleb128 0x8
 5216 0104 3A       		.uleb128 0x3a
 5217 0105 0B       		.uleb128 0xb
 5218 0106 3B       		.uleb128 0x3b
 5219 0107 05       		.uleb128 0x5
 5220 0108 49       		.uleb128 0x49
 5221 0109 13       		.uleb128 0x13
 5222 010a 02       		.uleb128 0x2
 5223 010b 18       		.uleb128 0x18
 5224 010c 00       		.byte	0
 5225 010d 00       		.byte	0
 5226 010e 13       		.uleb128 0x13
 5227 010f 05       		.uleb128 0x5
 5228 0110 00       		.byte	0
 5229 0111 03       		.uleb128 0x3
 5230 0112 0E       		.uleb128 0xe
 5231 0113 3A       		.uleb128 0x3a
 5232 0114 0B       		.uleb128 0xb
 5233 0115 3B       		.uleb128 0x3b
 5234 0116 05       		.uleb128 0x5
 5235 0117 49       		.uleb128 0x49
 5236 0118 13       		.uleb128 0x13
 5237 0119 02       		.uleb128 0x2
 5238 011a 18       		.uleb128 0x18
 5239 011b 00       		.byte	0
 5240 011c 00       		.byte	0
 5241 011d 14       		.uleb128 0x14
 5242 011e 34       		.uleb128 0x34
 5243 011f 00       		.byte	0
 5244 0120 03       		.uleb128 0x3
 5245 0121 0E       		.uleb128 0xe
 5246 0122 3A       		.uleb128 0x3a
 5247 0123 0B       		.uleb128 0xb
 5248 0124 3B       		.uleb128 0x3b
 5249 0125 05       		.uleb128 0x5
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 108


 5250 0126 49       		.uleb128 0x49
 5251 0127 13       		.uleb128 0x13
 5252 0128 02       		.uleb128 0x2
 5253 0129 18       		.uleb128 0x18
 5254 012a 00       		.byte	0
 5255 012b 00       		.byte	0
 5256 012c 15       		.uleb128 0x15
 5257 012d 34       		.uleb128 0x34
 5258 012e 00       		.byte	0
 5259 012f 03       		.uleb128 0x3
 5260 0130 08       		.uleb128 0x8
 5261 0131 3A       		.uleb128 0x3a
 5262 0132 0B       		.uleb128 0xb
 5263 0133 3B       		.uleb128 0x3b
 5264 0134 05       		.uleb128 0x5
 5265 0135 49       		.uleb128 0x49
 5266 0136 13       		.uleb128 0x13
 5267 0137 02       		.uleb128 0x2
 5268 0138 18       		.uleb128 0x18
 5269 0139 00       		.byte	0
 5270 013a 00       		.byte	0
 5271 013b 16       		.uleb128 0x16
 5272 013c 0F       		.uleb128 0xf
 5273 013d 00       		.byte	0
 5274 013e 0B       		.uleb128 0xb
 5275 013f 0B       		.uleb128 0xb
 5276 0140 49       		.uleb128 0x49
 5277 0141 13       		.uleb128 0x13
 5278 0142 00       		.byte	0
 5279 0143 00       		.byte	0
 5280 0144 17       		.uleb128 0x17
 5281 0145 34       		.uleb128 0x34
 5282 0146 00       		.byte	0
 5283 0147 03       		.uleb128 0x3
 5284 0148 0E       		.uleb128 0xe
 5285 0149 3A       		.uleb128 0x3a
 5286 014a 0B       		.uleb128 0xb
 5287 014b 3B       		.uleb128 0x3b
 5288 014c 05       		.uleb128 0x5
 5289 014d 49       		.uleb128 0x49
 5290 014e 13       		.uleb128 0x13
 5291 014f 3F       		.uleb128 0x3f
 5292 0150 19       		.uleb128 0x19
 5293 0151 3C       		.uleb128 0x3c
 5294 0152 19       		.uleb128 0x19
 5295 0153 00       		.byte	0
 5296 0154 00       		.byte	0
 5297 0155 18       		.uleb128 0x18
 5298 0156 34       		.uleb128 0x34
 5299 0157 00       		.byte	0
 5300 0158 03       		.uleb128 0x3
 5301 0159 0E       		.uleb128 0xe
 5302 015a 3A       		.uleb128 0x3a
 5303 015b 0B       		.uleb128 0xb
 5304 015c 3B       		.uleb128 0x3b
 5305 015d 0B       		.uleb128 0xb
 5306 015e 49       		.uleb128 0x49
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 109


 5307 015f 13       		.uleb128 0x13
 5308 0160 3F       		.uleb128 0x3f
 5309 0161 19       		.uleb128 0x19
 5310 0162 02       		.uleb128 0x2
 5311 0163 18       		.uleb128 0x18
 5312 0164 00       		.byte	0
 5313 0165 00       		.byte	0
 5314 0166 00       		.byte	0
 5315              		.section	.debug_aranges,"",%progbits
 5316 0000 4C000000 		.4byte	0x4c
 5317 0004 0200     		.2byte	0x2
 5318 0006 00000000 		.4byte	.Ldebug_info0
 5319 000a 04       		.byte	0x4
 5320 000b 00       		.byte	0
 5321 000c 0000     		.2byte	0
 5322 000e 0000     		.2byte	0
 5323 0010 00000000 		.4byte	.LFB56
 5324 0014 42000000 		.4byte	.LFE56-.LFB56
 5325 0018 00000000 		.4byte	.LFB57
 5326 001c B8000000 		.4byte	.LFE57-.LFB57
 5327 0020 00000000 		.4byte	.LFB58
 5328 0024 1C010000 		.4byte	.LFE58-.LFB58
 5329 0028 00000000 		.4byte	.LFB59
 5330 002c C8070000 		.4byte	.LFE59-.LFB59
 5331 0030 00000000 		.4byte	.LFB60
 5332 0034 C4020000 		.4byte	.LFE60-.LFB60
 5333 0038 00000000 		.4byte	.LFB61
 5334 003c 70050000 		.4byte	.LFE61-.LFB61
 5335 0040 00000000 		.4byte	.LFB62
 5336 0044 F0040000 		.4byte	.LFE62-.LFB62
 5337 0048 00000000 		.4byte	0
 5338 004c 00000000 		.4byte	0
 5339              		.section	.debug_ranges,"",%progbits
 5340              	.Ldebug_ranges0:
 5341 0000 00000000 		.4byte	.LFB56
 5342 0004 42000000 		.4byte	.LFE56
 5343 0008 00000000 		.4byte	.LFB57
 5344 000c B8000000 		.4byte	.LFE57
 5345 0010 00000000 		.4byte	.LFB58
 5346 0014 1C010000 		.4byte	.LFE58
 5347 0018 00000000 		.4byte	.LFB59
 5348 001c C8070000 		.4byte	.LFE59
 5349 0020 00000000 		.4byte	.LFB60
 5350 0024 C4020000 		.4byte	.LFE60
 5351 0028 00000000 		.4byte	.LFB61
 5352 002c 70050000 		.4byte	.LFE61
 5353 0030 00000000 		.4byte	.LFB62
 5354 0034 F0040000 		.4byte	.LFE62
 5355 0038 00000000 		.4byte	0
 5356 003c 00000000 		.4byte	0
 5357              		.section	.debug_line,"",%progbits
 5358              	.Ldebug_line0:
 5359 0000 8F080000 		.section	.debug_str,"MS",%progbits,1
 5359      02006B01 
 5359      00000201 
 5359      FB0E0D00 
 5359      01010101 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 110


 5360              	.LASF111:
 5361 0000 64656369 		.ascii	"decimalVolume\000"
 5361      6D616C56 
 5361      6F6C756D 
 5361      6500
 5362              	.LASF51:
 5363 000e 6D657373 		.ascii	"message\000"
 5363      61676500 
 5364              	.LASF66:
 5365 0016 62756666 		.ascii	"buffer\000"
 5365      657200
 5366              	.LASF99:
 5367 001d 69704164 		.ascii	"ipAdress\000"
 5367      72657373 
 5367      00
 5368              	.LASF110:
 5369 0026 64656369 		.ascii	"decimalMoney\000"
 5369      6D616C4D 
 5369      6F6E6579 
 5369      00
 5370              	.LASF29:
 5371 0033 73616C65 		.ascii	"salePerform\000"
 5371      50657266 
 5371      6F726D00 
 5372              	.LASF8:
 5373 003f 756E7369 		.ascii	"unsigned int\000"
 5373      676E6564 
 5373      20696E74 
 5373      00
 5374              	.LASF56:
 5375 004c 70726F64 		.ascii	"productMarket\000"
 5375      7563744D 
 5375      61726B65 
 5375      7400
 5376              	.LASF9:
 5377 005a 5F5F696E 		.ascii	"__int32_t\000"
 5377      7433325F 
 5377      7400
 5378              	.LASF49:
 5379 0064 666C6167 		.ascii	"flagLiftHandle\000"
 5379      4C696674 
 5379      48616E64 
 5379      6C6500
 5380              	.LASF128:
 5381 0073 433A5C55 		.ascii	"C:\\Users\\Proyectos_Hardware\\Dropbox\\Proyecto Co"
 5381      73657273 
 5381      5C50726F 
 5381      79656374 
 5381      6F735F48 
 5382 00a2 6E74726F 		.ascii	"ntroller\\Mux Advance Encore V5_00\\MuxAdvance.cyds"
 5382      6C6C6572 
 5382      5C4D7578 
 5382      20416476 
 5382      616E6365 
 5383 00d3 6E00     		.ascii	"n\000"
 5384              	.LASF116:
 5385 00d5 72657369 		.ascii	"residue\000"
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 111


 5385      64756500 
 5386              	.LASF18:
 5387 00dd 69645479 		.ascii	"idType\000"
 5387      706500
 5388              	.LASF76:
 5389 00e4 6765745F 		.ascii	"get_position\000"
 5389      706F7369 
 5389      74696F6E 
 5389      00
 5390              	.LASF21:
 5391 00f1 73656C65 		.ascii	"selectedSale\000"
 5391      63746564 
 5391      53616C65 
 5391      00
 5392              	.LASF57:
 5393 00fe 7175616E 		.ascii	"quantityMarket\000"
 5393      74697479 
 5393      4D61726B 
 5393      657400
 5394              	.LASF89:
 5395 010d 64656369 		.ascii	"decimal\000"
 5395      6D616C00 
 5396              	.LASF103:
 5397 0115 666C6167 		.ascii	"flagPoint2\000"
 5397      506F696E 
 5397      743200
 5398              	.LASF78:
 5399 0120 6765745F 		.ascii	"get_handle\000"
 5399      68616E64 
 5399      6C6500
 5400              	.LASF115:
 5401 012b 73637265 		.ascii	"screen\000"
 5401      656E00
 5402              	.LASF53:
 5403 0132 766F6C75 		.ascii	"volumeQuota\000"
 5403      6D655175 
 5403      6F746100 
 5404              	.LASF88:
 5405 013e 70726573 		.ascii	"preset\000"
 5405      657400
 5406              	.LASF13:
 5407 0145 666C6F61 		.ascii	"float\000"
 5407      7400
 5408              	.LASF7:
 5409 014b 6C6F6E67 		.ascii	"long long unsigned int\000"
 5409      206C6F6E 
 5409      6720756E 
 5409      7369676E 
 5409      65642069 
 5410              	.LASF86:
 5411 0162 70726573 		.ascii	"preset_data\000"
 5411      65745F64 
 5411      61746100 
 5412              	.LASF39:
 5413 016e 746F7461 		.ascii	"totalVolumePrevious\000"
 5413      6C566F6C 
 5413      756D6550 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 112


 5413      72657669 
 5413      6F757300 
 5414              	.LASF98:
 5415 0182 64696769 		.ascii	"digits\000"
 5415      747300
 5416              	.LASF113:
 5417 0189 74696D65 		.ascii	"time\000"
 5417      00
 5418              	.LASF84:
 5419 018e 76616C75 		.ascii	"value\000"
 5419      6500
 5420              	.LASF32:
 5421 0194 70726F64 		.ascii	"productType\000"
 5421      75637454 
 5421      79706500 
 5422              	.LASF105:
 5423 01a0 70726F64 		.ascii	"productNumber\000"
 5423      7563744E 
 5423      756D6265 
 5423      7200
 5424              	.LASF35:
 5425 01ae 64617465 		.ascii	"dateDownHandle\000"
 5425      446F776E 
 5425      48616E64 
 5425      6C6500
 5426              	.LASF19:
 5427 01bd 69645365 		.ascii	"idSerial\000"
 5427      7269616C 
 5427      00
 5428              	.LASF123:
 5429 01c6 62756666 		.ascii	"bufferLCD1\000"
 5429      65724C43 
 5429      443100
 5430              	.LASF124:
 5431 01d1 62756666 		.ascii	"bufferLCD2\000"
 5431      65724C43 
 5431      443200
 5432              	.LASF45:
 5433 01dc 6D696C65 		.ascii	"mileageSale\000"
 5433      61676553 
 5433      616C6500 
 5434              	.LASF65:
 5435 01e8 666C6167 		.ascii	"flagChangePPU\000"
 5435      4368616E 
 5435      67655050 
 5435      5500
 5436              	.LASF127:
 5437 01f6 2E5C7072 		.ascii	".\\protocol.c\000"
 5437      6F746F63 
 5437      6F6C2E63 
 5437      00
 5438              	.LASF104:
 5439 0203 62757474 		.ascii	"button\000"
 5439      6F6E00
 5440              	.LASF90:
 5441 020a 6765745F 		.ascii	"get_sale\000"
 5441      73616C65 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 113


 5441      00
 5442              	.LASF55:
 5443 0213 73657269 		.ascii	"serialMarket\000"
 5443      616C4D61 
 5443      726B6574 
 5443      00
 5444              	.LASF68:
 5445 0220 746F7461 		.ascii	"totalsHandle\000"
 5445      6C734861 
 5445      6E646C65 
 5445      00
 5446              	.LASF31:
 5447 022d 70726573 		.ascii	"presetValue\000"
 5447      65745661 
 5447      6C756500 
 5448              	.LASF118:
 5449 0239 7475726E 		.ascii	"turn\000"
 5449      00
 5450              	.LASF46:
 5451 023e 6964656E 		.ascii	"identySale\000"
 5451      74795361 
 5451      6C6500
 5452              	.LASF96:
 5453 0249 666C6F77 		.ascii	"flowLCD1\000"
 5453      4C434431 
 5453      00
 5454              	.LASF97:
 5455 0252 666C6F77 		.ascii	"flowLCD2\000"
 5455      4C434432 
 5455      00
 5456              	.LASF28:
 5457 025b 73616C65 		.ascii	"saleType\000"
 5457      54797065 
 5457      00
 5458              	.LASF26:
 5459 0264 76616C75 		.ascii	"valueKeys\000"
 5459      654B6579 
 5459      7300
 5460              	.LASF16:
 5461 026e 63686172 		.ascii	"char\000"
 5461      00
 5462              	.LASF100:
 5463 0273 6E756D62 		.ascii	"numberKeys1\000"
 5463      65724B65 
 5463      79733100 
 5464              	.LASF101:
 5465 027f 6E756D62 		.ascii	"numberKeys2\000"
 5465      65724B65 
 5465      79733200 
 5466              	.LASF95:
 5467 028b 636F756E 		.ascii	"countBeagleTX\000"
 5467      74426561 
 5467      676C6554 
 5467      5800
 5468              	.LASF75:
 5469 0299 6765745F 		.ascii	"get_state\000"
 5469      73746174 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 114


 5469      6500
 5470              	.LASF114:
 5471 02a3 64617465 		.ascii	"date\000"
 5471      00
 5472              	.LASF48:
 5473 02a8 666C6167 		.ascii	"flagPayment\000"
 5473      5061796D 
 5473      656E7400 
 5474              	.LASF54:
 5475 02b4 70707551 		.ascii	"ppuQuota\000"
 5475      756F7461 
 5475      00
 5476              	.LASF91:
 5477 02bd 50756D70 		.ascii	"Pump_AL_rxBuffer\000"
 5477      5F414C5F 
 5477      72784275 
 5477      66666572 
 5477      00
 5478              	.LASF41:
 5479 02ce 746F7461 		.ascii	"totalMoneyAfter\000"
 5479      6C4D6F6E 
 5479      65794166 
 5479      74657200 
 5480              	.LASF52:
 5481 02de 6D6F6E65 		.ascii	"moneyQuota\000"
 5481      7951756F 
 5481      746100
 5482              	.LASF64:
 5483 02e9 7072696E 		.ascii	"printers\000"
 5483      74657273 
 5483      00
 5484              	.LASF106:
 5485 02f2 70726573 		.ascii	"presetFast\000"
 5485      65744661 
 5485      737400
 5486              	.LASF70:
 5487 02fd 6D6F6E65 		.ascii	"moneySale\000"
 5487      7953616C 
 5487      6500
 5488              	.LASF6:
 5489 0307 6C6F6E67 		.ascii	"long long int\000"
 5489      206C6F6E 
 5489      6720696E 
 5489      7400
 5490              	.LASF72:
 5491 0315 70707553 		.ascii	"ppuSale\000"
 5491      616C6500 
 5492              	.LASF125:
 5493 031d 73696465 		.ascii	"side\000"
 5493      00
 5494              	.LASF93:
 5495 0322 636F756E 		.ascii	"countAnimation1\000"
 5495      74416E69 
 5495      6D617469 
 5495      6F6E3100 
 5496              	.LASF40:
 5497 0332 746F7461 		.ascii	"totalPPUPrevious\000"
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 115


 5497      6C505055 
 5497      50726576 
 5497      696F7573 
 5497      00
 5498              	.LASF94:
 5499 0343 636F756E 		.ascii	"countAnimation2\000"
 5499      74416E69 
 5499      6D617469 
 5499      6F6E3200 
 5500              	.LASF61:
 5501 0353 746F7461 		.ascii	"totalMarket\000"
 5501      6C4D6172 
 5501      6B657400 
 5502              	.LASF126:
 5503 035f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5503      4320342E 
 5503      392E3320 
 5503      32303135 
 5503      30333033 
 5504 0392 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5504      20726576 
 5504      6973696F 
 5504      6E203232 
 5504      31323230 
 5505 03c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5505      66756E63 
 5505      74696F6E 
 5505      2D736563 
 5505      74696F6E 
 5506              	.LASF37:
 5507 03ed 74696D65 		.ascii	"timeDownHandle\000"
 5507      446F776E 
 5507      48616E64 
 5507      6C6500
 5508              	.LASF27:
 5509 03fc 76656869 		.ascii	"vehicleType\000"
 5509      636C6554 
 5509      79706500 
 5510              	.LASF47:
 5511 0408 666C6167 		.ascii	"flagKeyboard\000"
 5511      4B657962 
 5511      6F617264 
 5511      00
 5512              	.LASF85:
 5513 0415 73697A65 		.ascii	"size\000"
 5513      00
 5514              	.LASF12:
 5515 041a 75696E74 		.ascii	"uint32\000"
 5515      333200
 5516              	.LASF122:
 5517 0421 666C6167 		.ascii	"flagResetMux\000"
 5517      52657365 
 5517      744D7578 
 5517      00
 5518              	.LASF81:
 5519 042e 67726164 		.ascii	"gradeHandle\000"
 5519      6548616E 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 116


 5519      646C6500 
 5520              	.LASF43:
 5521 043a 746F7461 		.ascii	"totalPPUAfter\000"
 5521      6C505055 
 5521      41667465 
 5521      7200
 5522              	.LASF24:
 5523 0448 6B657962 		.ascii	"keyboardWayToPay\000"
 5523      6F617264 
 5523      57617954 
 5523      6F506179 
 5523      00
 5524              	.LASF109:
 5525 0459 70707578 		.ascii	"ppux10\000"
 5525      313000
 5526              	.LASF38:
 5527 0460 746F7461 		.ascii	"totalMoneyPrevious\000"
 5527      6C4D6F6E 
 5527      65795072 
 5527      6576696F 
 5527      757300
 5528              	.LASF102:
 5529 0473 666C6167 		.ascii	"flagPoint1\000"
 5529      506F696E 
 5529      743100
 5530              	.LASF22:
 5531 047e 6D6F6E65 		.ascii	"moneySelectedSale\000"
 5531      7953656C 
 5531      65637465 
 5531      6453616C 
 5531      6500
 5532              	.LASF112:
 5533 0490 73796D62 		.ascii	"symbols\000"
 5533      6F6C7300 
 5534              	.LASF44:
 5535 0498 6C696365 		.ascii	"licenceSale\000"
 5535      6E636553 
 5535      616C6500 
 5536              	.LASF63:
 5537 04a4 70726963 		.ascii	"priceConsign\000"
 5537      65436F6E 
 5537      7369676E 
 5537      00
 5538              	.LASF2:
 5539 04b1 73686F72 		.ascii	"short int\000"
 5539      7420696E 
 5539      7400
 5540              	.LASF4:
 5541 04bb 6C6F6E67 		.ascii	"long int\000"
 5541      20696E74 
 5541      00
 5542              	.LASF92:
 5543 04c4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5543      52784275 
 5543      66666572 
 5543      00
 5544              	.LASF120:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 117


 5545 04d1 74797065 		.ascii	"typeIdSeller\000"
 5545      49645365 
 5545      6C6C6572 
 5545      00
 5546              	.LASF50:
 5547 04de 666C6167 		.ascii	"flagEndSale\000"
 5547      456E6453 
 5547      616C6500 
 5548              	.LASF34:
 5549 04ea 64617465 		.ascii	"dateLiftHandle\000"
 5549      4C696674 
 5549      48616E64 
 5549      6C6500
 5550              	.LASF121:
 5551 04f9 70617373 		.ascii	"passwordSeller\000"
 5551      776F7264 
 5551      53656C6C 
 5551      657200
 5552              	.LASF42:
 5553 0508 746F7461 		.ascii	"totalVolumeAfter\000"
 5553      6C566F6C 
 5553      756D6541 
 5553      66746572 
 5553      00
 5554              	.LASF15:
 5555 0519 75696E74 		.ascii	"uint64\000"
 5555      363400
 5556              	.LASF107:
 5557 0520 64656C61 		.ascii	"delayPicture1\000"
 5557      79506963 
 5557      74757265 
 5557      3100
 5558              	.LASF108:
 5559 052e 64656C61 		.ascii	"delayPicture2\000"
 5559      79506963 
 5559      74757265 
 5559      3200
 5560              	.LASF33:
 5561 053c 73746174 		.ascii	"stateMux\000"
 5561      654D7578 
 5561      00
 5562              	.LASF82:
 5563 0545 70726963 		.ascii	"price_change\000"
 5563      655F6368 
 5563      616E6765 
 5563      00
 5564              	.LASF17:
 5565 0552 73697A65 		.ascii	"sizetype\000"
 5565      74797065 
 5565      00
 5566              	.LASF5:
 5567 055b 6C6F6E67 		.ascii	"long unsigned int\000"
 5567      20756E73 
 5567      69676E65 
 5567      6420696E 
 5567      7400
 5568              	.LASF62:
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 118


 5569 056d 666C6167 		.ascii	"flagProductmarket\000"
 5569      50726F64 
 5569      7563746D 
 5569      61726B65 
 5569      7400
 5570              	.LASF10:
 5571 057f 696E7433 		.ascii	"int32_t\000"
 5571      325F7400 
 5572              	.LASF80:
 5573 0587 6765745F 		.ascii	"get_totals\000"
 5573      746F7461 
 5573      6C7300
 5574              	.LASF58:
 5575 0592 7175616E 		.ascii	"quantAvailableMark\000"
 5575      74417661 
 5575      696C6162 
 5575      6C654D61 
 5575      726B00
 5576              	.LASF1:
 5577 05a5 756E7369 		.ascii	"unsigned char\000"
 5577      676E6564 
 5577      20636861 
 5577      7200
 5578              	.LASF25:
 5579 05b3 61757468 		.ascii	"authorizationFlag\000"
 5579      6F72697A 
 5579      6174696F 
 5579      6E466C61 
 5579      6700
 5580              	.LASF59:
 5581 05c5 70726963 		.ascii	"priceTotalMarket\000"
 5581      65546F74 
 5581      616C4D61 
 5581      726B6574 
 5581      00
 5582              	.LASF119:
 5583 05d6 69645365 		.ascii	"idSeller\000"
 5583      6C6C6572 
 5583      00
 5584              	.LASF74:
 5585 05df 70756D70 		.ascii	"pump\000"
 5585      00
 5586              	.LASF117:
 5587 05e4 74656D70 		.ascii	"temporal\000"
 5587      6F72616C 
 5587      00
 5588              	.LASF77:
 5589 05ed 73746174 		.ascii	"state\000"
 5589      6500
 5590              	.LASF30:
 5591 05f3 70726573 		.ascii	"presetType\000"
 5591      65745479 
 5591      706500
 5592              	.LASF60:
 5593 05fe 70726963 		.ascii	"priceUnitMarket\000"
 5593      65556E69 
 5593      744D6172 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 119


 5593      6B657400 
 5594              	.LASF79:
 5595 060e 636F6D6D 		.ascii	"command\000"
 5595      616E6400 
 5596              	.LASF71:
 5597 0616 766F6C75 		.ascii	"volumeSale\000"
 5597      6D655361 
 5597      6C6500
 5598              	.LASF0:
 5599 0621 7369676E 		.ascii	"signed char\000"
 5599      65642063 
 5599      68617200 
 5600              	.LASF3:
 5601 062d 73686F72 		.ascii	"short unsigned int\000"
 5601      7420756E 
 5601      7369676E 
 5601      65642069 
 5601      6E7400
 5602              	.LASF83:
 5603 0640 68616E64 		.ascii	"handle\000"
 5603      6C6500
 5604              	.LASF73:
 5605 0647 70726F64 		.ascii	"productSale\000"
 5605      75637453 
 5605      616C6500 
 5606              	.LASF11:
 5607 0653 75696E74 		.ascii	"uint8\000"
 5607      3800
 5608              	.LASF14:
 5609 0659 646F7562 		.ascii	"double\000"
 5609      6C6500
 5610              	.LASF20:
 5611 0660 77617954 		.ascii	"wayToPay\000"
 5611      6F506179 
 5611      00
 5612              	.LASF87:
 5613 0669 67726164 		.ascii	"grade\000"
 5613      6500
 5614              	.LASF36:
 5615 066f 74696D65 		.ascii	"timeLiftHandle\000"
 5615      4C696674 
 5615      48616E64 
 5615      6C6500
 5616              	.LASF69:
 5617 067e 70707541 		.ascii	"ppuAuthorized\000"
 5617      7574686F 
 5617      72697A65 
 5617      6400
 5618              	.LASF23:
 5619 068c 73657269 		.ascii	"serialSelectedSale\000"
 5619      616C5365 
 5619      6C656374 
 5619      65645361 
 5619      6C6500
 5620              	.LASF67:
 5621 069f 706F7369 		.ascii	"position\000"
 5621      74696F6E 
ARM GAS  C:\Users\PROYEC~1\AppData\Local\Temp\ccrvbBQa.s 			page 120


 5621      00
 5622              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
